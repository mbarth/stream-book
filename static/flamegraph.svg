<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1222" onload="init(evt)" viewBox="0 0 1200 1222" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1222" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1205.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1205.00"> </text><svg id="frames" x="10" width="1180" total_samples="364545"><g><title>actix-server_ac (39 samples, 0.01%)</title><rect x="0.0000%" y="1157" width="0.0107%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="39"/><text x="0.2500%" y="1167.50"></text></g><g><title>__GI___clone (37 samples, 0.01%)</title><rect x="0.0005%" y="1141" width="0.0101%" height="15" fill="rgb(217,0,24)" fg:x="2" fg:w="37"/><text x="0.2505%" y="1151.50"></text></g><g><title>start_thread (37 samples, 0.01%)</title><rect x="0.0005%" y="1125" width="0.0101%" height="15" fill="rgb(221,193,54)" fg:x="2" fg:w="37"/><text x="0.2505%" y="1135.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (37 samples, 0.01%)</title><rect x="0.0005%" y="1109" width="0.0101%" height="15" fill="rgb(248,212,6)" fg:x="2" fg:w="37"/><text x="0.2505%" y="1119.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (37 samples, 0.01%)</title><rect x="0.0005%" y="1093" width="0.0101%" height="15" fill="rgb(208,68,35)" fg:x="2" fg:w="37"/><text x="0.2505%" y="1103.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (37 samples, 0.01%)</title><rect x="0.0005%" y="1077" width="0.0101%" height="15" fill="rgb(232,128,0)" fg:x="2" fg:w="37"/><text x="0.2505%" y="1087.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (37 samples, 0.01%)</title><rect x="0.0005%" y="1061" width="0.0101%" height="15" fill="rgb(207,160,47)" fg:x="2" fg:w="37"/><text x="0.2505%" y="1071.50"></text></g><g><title>&lt;tokio::task::local::RunUntil&lt;T&gt; as core::future::future::Future&gt;::poll (111 samples, 0.03%)</title><rect x="0.0154%" y="1141" width="0.0304%" height="15" fill="rgb(228,23,34)" fg:x="56" fg:w="111"/><text x="0.2654%" y="1151.50"></text></g><g><title>ryu::d2s::d2d (40 samples, 0.01%)</title><rect x="0.1736%" y="1125" width="0.0110%" height="15" fill="rgb(218,30,26)" fg:x="633" fg:w="40"/><text x="0.4236%" y="1135.50"></text></g><g><title>ryu::pretty::format64 (106 samples, 0.03%)</title><rect x="0.1846%" y="1125" width="0.0291%" height="15" fill="rgb(220,122,19)" fg:x="673" fg:w="106"/><text x="0.4346%" y="1135.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (135 samples, 0.04%)</title><rect x="0.2137%" y="1125" width="0.0370%" height="15" fill="rgb(250,228,42)" fg:x="779" fg:w="135"/><text x="0.4637%" y="1135.50"></text></g><g><title>serde_json::ser::format_escaped_str (88 samples, 0.02%)</title><rect x="0.2507%" y="1125" width="0.0241%" height="15" fill="rgb(240,193,28)" fg:x="914" fg:w="88"/><text x="0.5007%" y="1135.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (41 samples, 0.01%)</title><rect x="0.2760%" y="1125" width="0.0112%" height="15" fill="rgb(216,20,37)" fg:x="1006" fg:w="41"/><text x="0.5260%" y="1135.50"></text></g><g><title>tokio::runtime::io::Driver::turn (58 samples, 0.02%)</title><rect x="0.3218%" y="1125" width="0.0159%" height="15" fill="rgb(206,188,39)" fg:x="1173" fg:w="58"/><text x="0.5718%" y="1135.50"></text></g><g><title>[anon] (1,222 samples, 0.34%)</title><rect x="0.0488%" y="1141" width="0.3352%" height="15" fill="rgb(217,207,13)" fg:x="178" fg:w="1222"/><text x="0.2988%" y="1151.50"></text></g><g><title>[stream-book] (56 samples, 0.02%)</title><rect x="0.3840%" y="1141" width="0.0154%" height="15" fill="rgb(231,73,38)" fg:x="1400" fg:w="56"/><text x="0.6340%" y="1151.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (73 samples, 0.02%)</title><rect x="0.4244%" y="1125" width="0.0200%" height="15" fill="rgb(225,20,46)" fg:x="1547" fg:w="73"/><text x="0.6744%" y="1135.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (40 samples, 0.01%)</title><rect x="0.4334%" y="1109" width="0.0110%" height="15" fill="rgb(210,31,41)" fg:x="1580" fg:w="40"/><text x="0.6834%" y="1119.50"></text></g><g><title>&lt;actix_service::and_then::AndThenServiceResponse&lt;A,B,Req&gt; as core::future::future::Future&gt;::poll (40 samples, 0.01%)</title><rect x="0.4334%" y="1093" width="0.0110%" height="15" fill="rgb(221,200,47)" fg:x="1580" fg:w="40"/><text x="0.6834%" y="1103.50"></text></g><g><title>&lt;actix_http::service::HttpServiceHandlerResponse&lt;T,S,B,X,U&gt; as core::future::future::Future&gt;::poll (40 samples, 0.01%)</title><rect x="0.4334%" y="1077" width="0.0110%" height="15" fill="rgb(226,26,5)" fg:x="1580" fg:w="40"/><text x="0.6834%" y="1087.50"></text></g><g><title>&lt;actix_http::h1::dispatcher::Dispatcher&lt;T,S,B,X,U&gt; as core::future::future::Future&gt;::poll (40 samples, 0.01%)</title><rect x="0.4334%" y="1061" width="0.0110%" height="15" fill="rgb(249,33,26)" fg:x="1580" fg:w="40"/><text x="0.6834%" y="1071.50"></text></g><g><title>actix_http::h1::dispatcher::InnerDispatcher&lt;T,S,B,X,U&gt;::poll_response (40 samples, 0.01%)</title><rect x="0.4334%" y="1045" width="0.0110%" height="15" fill="rgb(235,183,28)" fg:x="1580" fg:w="40"/><text x="0.6834%" y="1055.50"></text></g><g><title>&lt;actix_web::middleware::logger::StreamLog&lt;B&gt; as actix_http::body::message_body::MessageBody&gt;::poll_next (40 samples, 0.01%)</title><rect x="0.4334%" y="1029" width="0.0110%" height="15" fill="rgb(221,5,38)" fg:x="1580" fg:w="40"/><text x="0.6834%" y="1039.50"></text></g><g><title>&lt;actix_http::encoding::encoder::Encoder&lt;B&gt; as actix_http::body::message_body::MessageBody&gt;::poll_next (40 samples, 0.01%)</title><rect x="0.4334%" y="1013" width="0.0110%" height="15" fill="rgb(247,18,42)" fg:x="1580" fg:w="40"/><text x="0.6834%" y="1023.50"></text></g><g><title>&lt;actix_http::body::message_body::MessageBodyMapErr&lt;B,F&gt; as actix_http::body::message_body::MessageBody&gt;::poll_next (40 samples, 0.01%)</title><rect x="0.4334%" y="997" width="0.0110%" height="15" fill="rgb(241,131,45)" fg:x="1580" fg:w="40"/><text x="0.6834%" y="1007.50"></text></g><g><title>&lt;actix_http::body::body_stream::BodyStream&lt;S&gt; as actix_http::body::message_body::MessageBody&gt;::poll_next (40 samples, 0.01%)</title><rect x="0.4334%" y="981" width="0.0110%" height="15" fill="rgb(249,31,29)" fg:x="1580" fg:w="40"/><text x="0.6834%" y="991.50"></text></g><g><title>&lt;actix_ws::fut::StreamingBody as futures_core::stream::Stream&gt;::poll_next (40 samples, 0.01%)</title><rect x="0.4334%" y="965" width="0.0110%" height="15" fill="rgb(225,111,53)" fg:x="1580" fg:w="40"/><text x="0.6834%" y="975.50"></text></g><g><title>[unknown] (236 samples, 0.06%)</title><rect x="0.4617%" y="1125" width="0.0647%" height="15" fill="rgb(238,160,17)" fg:x="1683" fg:w="236"/><text x="0.7117%" y="1135.50"></text></g><g><title>[unknown] (234 samples, 0.06%)</title><rect x="0.4622%" y="1109" width="0.0642%" height="15" fill="rgb(214,148,48)" fg:x="1685" fg:w="234"/><text x="0.7122%" y="1119.50"></text></g><g><title>[unknown] (229 samples, 0.06%)</title><rect x="0.4636%" y="1093" width="0.0628%" height="15" fill="rgb(232,36,49)" fg:x="1690" fg:w="229"/><text x="0.7136%" y="1103.50"></text></g><g><title>[unknown] (226 samples, 0.06%)</title><rect x="0.4644%" y="1077" width="0.0620%" height="15" fill="rgb(209,103,24)" fg:x="1693" fg:w="226"/><text x="0.7144%" y="1087.50"></text></g><g><title>[unknown] (210 samples, 0.06%)</title><rect x="0.4688%" y="1061" width="0.0576%" height="15" fill="rgb(229,88,8)" fg:x="1709" fg:w="210"/><text x="0.7188%" y="1071.50"></text></g><g><title>[unknown] (198 samples, 0.05%)</title><rect x="0.4721%" y="1045" width="0.0543%" height="15" fill="rgb(213,181,19)" fg:x="1721" fg:w="198"/><text x="0.7221%" y="1055.50"></text></g><g><title>[unknown] (188 samples, 0.05%)</title><rect x="0.4748%" y="1029" width="0.0516%" height="15" fill="rgb(254,191,54)" fg:x="1731" fg:w="188"/><text x="0.7248%" y="1039.50"></text></g><g><title>[unknown] (177 samples, 0.05%)</title><rect x="0.4779%" y="1013" width="0.0486%" height="15" fill="rgb(241,83,37)" fg:x="1742" fg:w="177"/><text x="0.7279%" y="1023.50"></text></g><g><title>[unknown] (159 samples, 0.04%)</title><rect x="0.4828%" y="997" width="0.0436%" height="15" fill="rgb(233,36,39)" fg:x="1760" fg:w="159"/><text x="0.7328%" y="1007.50"></text></g><g><title>[unknown] (138 samples, 0.04%)</title><rect x="0.4886%" y="981" width="0.0379%" height="15" fill="rgb(226,3,54)" fg:x="1781" fg:w="138"/><text x="0.7386%" y="991.50"></text></g><g><title>[unknown] (123 samples, 0.03%)</title><rect x="0.4927%" y="965" width="0.0337%" height="15" fill="rgb(245,192,40)" fg:x="1796" fg:w="123"/><text x="0.7427%" y="975.50"></text></g><g><title>[unknown] (111 samples, 0.03%)</title><rect x="0.4960%" y="949" width="0.0304%" height="15" fill="rgb(238,167,29)" fg:x="1808" fg:w="111"/><text x="0.7460%" y="959.50"></text></g><g><title>[unknown] (102 samples, 0.03%)</title><rect x="0.4984%" y="933" width="0.0280%" height="15" fill="rgb(232,182,51)" fg:x="1817" fg:w="102"/><text x="0.7484%" y="943.50"></text></g><g><title>[unknown] (95 samples, 0.03%)</title><rect x="0.5003%" y="917" width="0.0261%" height="15" fill="rgb(231,60,39)" fg:x="1824" fg:w="95"/><text x="0.7503%" y="927.50"></text></g><g><title>[unknown] (92 samples, 0.03%)</title><rect x="0.5012%" y="901" width="0.0252%" height="15" fill="rgb(208,69,12)" fg:x="1827" fg:w="92"/><text x="0.7512%" y="911.50"></text></g><g><title>[unknown] (89 samples, 0.02%)</title><rect x="0.5020%" y="885" width="0.0244%" height="15" fill="rgb(235,93,37)" fg:x="1830" fg:w="89"/><text x="0.7520%" y="895.50"></text></g><g><title>[unknown] (83 samples, 0.02%)</title><rect x="0.5036%" y="869" width="0.0228%" height="15" fill="rgb(213,116,39)" fg:x="1836" fg:w="83"/><text x="0.7536%" y="879.50"></text></g><g><title>[unknown] (80 samples, 0.02%)</title><rect x="0.5045%" y="853" width="0.0219%" height="15" fill="rgb(222,207,29)" fg:x="1839" fg:w="80"/><text x="0.7545%" y="863.50"></text></g><g><title>[unknown] (65 samples, 0.02%)</title><rect x="0.5086%" y="837" width="0.0178%" height="15" fill="rgb(206,96,30)" fg:x="1854" fg:w="65"/><text x="0.7586%" y="847.50"></text></g><g><title>[unknown] (61 samples, 0.02%)</title><rect x="0.5097%" y="821" width="0.0167%" height="15" fill="rgb(218,138,4)" fg:x="1858" fg:w="61"/><text x="0.7597%" y="831.50"></text></g><g><title>[unknown] (59 samples, 0.02%)</title><rect x="0.5102%" y="805" width="0.0162%" height="15" fill="rgb(250,191,14)" fg:x="1860" fg:w="59"/><text x="0.7602%" y="815.50"></text></g><g><title>[unknown] (55 samples, 0.02%)</title><rect x="0.5113%" y="789" width="0.0151%" height="15" fill="rgb(239,60,40)" fg:x="1864" fg:w="55"/><text x="0.7613%" y="799.50"></text></g><g><title>[unknown] (55 samples, 0.02%)</title><rect x="0.5113%" y="773" width="0.0151%" height="15" fill="rgb(206,27,48)" fg:x="1864" fg:w="55"/><text x="0.7613%" y="783.50"></text></g><g><title>[unknown] (55 samples, 0.02%)</title><rect x="0.5113%" y="757" width="0.0151%" height="15" fill="rgb(225,35,8)" fg:x="1864" fg:w="55"/><text x="0.7613%" y="767.50"></text></g><g><title>[unknown] (54 samples, 0.01%)</title><rect x="0.5116%" y="741" width="0.0148%" height="15" fill="rgb(250,213,24)" fg:x="1865" fg:w="54"/><text x="0.7616%" y="751.50"></text></g><g><title>[unknown] (52 samples, 0.01%)</title><rect x="0.5121%" y="725" width="0.0143%" height="15" fill="rgb(247,123,22)" fg:x="1867" fg:w="52"/><text x="0.7621%" y="735.50"></text></g><g><title>[unknown] (51 samples, 0.01%)</title><rect x="0.5124%" y="709" width="0.0140%" height="15" fill="rgb(231,138,38)" fg:x="1868" fg:w="51"/><text x="0.7624%" y="719.50"></text></g><g><title>[unknown] (50 samples, 0.01%)</title><rect x="0.5127%" y="693" width="0.0137%" height="15" fill="rgb(231,145,46)" fg:x="1869" fg:w="50"/><text x="0.7627%" y="703.50"></text></g><g><title>[unknown] (48 samples, 0.01%)</title><rect x="0.5132%" y="677" width="0.0132%" height="15" fill="rgb(251,118,11)" fg:x="1871" fg:w="48"/><text x="0.7632%" y="687.50"></text></g><g><title>[unknown] (45 samples, 0.01%)</title><rect x="0.5141%" y="661" width="0.0123%" height="15" fill="rgb(217,147,25)" fg:x="1874" fg:w="45"/><text x="0.7641%" y="671.50"></text></g><g><title>[unknown] (45 samples, 0.01%)</title><rect x="0.5141%" y="645" width="0.0123%" height="15" fill="rgb(247,81,37)" fg:x="1874" fg:w="45"/><text x="0.7641%" y="655.50"></text></g><g><title>[unknown] (44 samples, 0.01%)</title><rect x="0.5143%" y="629" width="0.0121%" height="15" fill="rgb(209,12,38)" fg:x="1875" fg:w="44"/><text x="0.7643%" y="639.50"></text></g><g><title>[unknown] (39 samples, 0.01%)</title><rect x="0.5157%" y="613" width="0.0107%" height="15" fill="rgb(227,1,9)" fg:x="1880" fg:w="39"/><text x="0.7657%" y="623.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (50 samples, 0.01%)</title><rect x="0.6010%" y="1125" width="0.0137%" height="15" fill="rgb(248,47,43)" fg:x="2191" fg:w="50"/><text x="0.8510%" y="1135.50"></text></g><g><title>tokio::runtime::runtime::Runtime::block_on (43 samples, 0.01%)</title><rect x="0.6175%" y="1125" width="0.0118%" height="15" fill="rgb(221,10,30)" fg:x="2251" fg:w="43"/><text x="0.8675%" y="1135.50"></text></g><g><title>[unknown] (2,588 samples, 0.71%)</title><rect x="0.6852%" y="901" width="0.7099%" height="15" fill="rgb(210,229,1)" fg:x="2498" fg:w="2588"/><text x="0.9352%" y="911.50"></text></g><g><title>[unknown] (2,570 samples, 0.70%)</title><rect x="0.6902%" y="885" width="0.7050%" height="15" fill="rgb(222,148,37)" fg:x="2516" fg:w="2570"/><text x="0.9402%" y="895.50"></text></g><g><title>[unknown] (2,563 samples, 0.70%)</title><rect x="0.6921%" y="869" width="0.7031%" height="15" fill="rgb(234,67,33)" fg:x="2523" fg:w="2563"/><text x="0.9421%" y="879.50"></text></g><g><title>[unknown] (2,552 samples, 0.70%)</title><rect x="0.6951%" y="853" width="0.7001%" height="15" fill="rgb(247,98,35)" fg:x="2534" fg:w="2552"/><text x="0.9451%" y="863.50"></text></g><g><title>[unknown] (2,530 samples, 0.69%)</title><rect x="0.7011%" y="837" width="0.6940%" height="15" fill="rgb(247,138,52)" fg:x="2556" fg:w="2530"/><text x="0.9511%" y="847.50"></text></g><g><title>[unknown] (2,516 samples, 0.69%)</title><rect x="0.7050%" y="821" width="0.6902%" height="15" fill="rgb(213,79,30)" fg:x="2570" fg:w="2516"/><text x="0.9550%" y="831.50"></text></g><g><title>[unknown] (2,482 samples, 0.68%)</title><rect x="0.7143%" y="805" width="0.6808%" height="15" fill="rgb(246,177,23)" fg:x="2604" fg:w="2482"/><text x="0.9643%" y="815.50"></text></g><g><title>[unknown] (2,434 samples, 0.67%)</title><rect x="0.7275%" y="789" width="0.6677%" height="15" fill="rgb(230,62,27)" fg:x="2652" fg:w="2434"/><text x="0.9775%" y="799.50"></text></g><g><title>[unknown] (2,330 samples, 0.64%)</title><rect x="0.7560%" y="773" width="0.6392%" height="15" fill="rgb(216,154,8)" fg:x="2756" fg:w="2330"/><text x="1.0060%" y="783.50"></text></g><g><title>[unknown] (2,273 samples, 0.62%)</title><rect x="0.7716%" y="757" width="0.6235%" height="15" fill="rgb(244,35,45)" fg:x="2813" fg:w="2273"/><text x="1.0216%" y="767.50"></text></g><g><title>[unknown] (2,131 samples, 0.58%)</title><rect x="0.8106%" y="741" width="0.5846%" height="15" fill="rgb(251,115,12)" fg:x="2955" fg:w="2131"/><text x="1.0606%" y="751.50"></text></g><g><title>[unknown] (2,027 samples, 0.56%)</title><rect x="0.8391%" y="725" width="0.5560%" height="15" fill="rgb(240,54,50)" fg:x="3059" fg:w="2027"/><text x="1.0891%" y="735.50"></text></g><g><title>[unknown] (1,877 samples, 0.51%)</title><rect x="0.8803%" y="709" width="0.5149%" height="15" fill="rgb(233,84,52)" fg:x="3209" fg:w="1877"/><text x="1.1303%" y="719.50"></text></g><g><title>[unknown] (1,789 samples, 0.49%)</title><rect x="0.9044%" y="693" width="0.4907%" height="15" fill="rgb(207,117,47)" fg:x="3297" fg:w="1789"/><text x="1.1544%" y="703.50"></text></g><g><title>[unknown] (1,720 samples, 0.47%)</title><rect x="0.9233%" y="677" width="0.4718%" height="15" fill="rgb(249,43,39)" fg:x="3366" fg:w="1720"/><text x="1.1733%" y="687.50"></text></g><g><title>[unknown] (1,658 samples, 0.45%)</title><rect x="0.9404%" y="661" width="0.4548%" height="15" fill="rgb(209,38,44)" fg:x="3428" fg:w="1658"/><text x="1.1904%" y="671.50"></text></g><g><title>[unknown] (1,608 samples, 0.44%)</title><rect x="0.9541%" y="645" width="0.4411%" height="15" fill="rgb(236,212,23)" fg:x="3478" fg:w="1608"/><text x="1.2041%" y="655.50"></text></g><g><title>[unknown] (1,546 samples, 0.42%)</title><rect x="0.9711%" y="629" width="0.4241%" height="15" fill="rgb(242,79,21)" fg:x="3540" fg:w="1546"/><text x="1.2211%" y="639.50"></text></g><g><title>[unknown] (1,492 samples, 0.41%)</title><rect x="0.9859%" y="613" width="0.4093%" height="15" fill="rgb(211,96,35)" fg:x="3594" fg:w="1492"/><text x="1.2359%" y="623.50"></text></g><g><title>[unknown] (1,357 samples, 0.37%)</title><rect x="1.0229%" y="597" width="0.3722%" height="15" fill="rgb(253,215,40)" fg:x="3729" fg:w="1357"/><text x="1.2729%" y="607.50"></text></g><g><title>[unknown] (1,250 samples, 0.34%)</title><rect x="1.0523%" y="581" width="0.3429%" height="15" fill="rgb(211,81,21)" fg:x="3836" fg:w="1250"/><text x="1.3023%" y="591.50"></text></g><g><title>[unknown] (1,171 samples, 0.32%)</title><rect x="1.0739%" y="565" width="0.3212%" height="15" fill="rgb(208,190,38)" fg:x="3915" fg:w="1171"/><text x="1.3239%" y="575.50"></text></g><g><title>[unknown] (1,114 samples, 0.31%)</title><rect x="1.0896%" y="549" width="0.3056%" height="15" fill="rgb(235,213,38)" fg:x="3972" fg:w="1114"/><text x="1.3396%" y="559.50"></text></g><g><title>[unknown] (1,080 samples, 0.30%)</title><rect x="1.0989%" y="533" width="0.2963%" height="15" fill="rgb(237,122,38)" fg:x="4006" fg:w="1080"/><text x="1.3489%" y="543.50"></text></g><g><title>[unknown] (1,058 samples, 0.29%)</title><rect x="1.1049%" y="517" width="0.2902%" height="15" fill="rgb(244,218,35)" fg:x="4028" fg:w="1058"/><text x="1.3549%" y="527.50"></text></g><g><title>[unknown] (1,039 samples, 0.29%)</title><rect x="1.1102%" y="501" width="0.2850%" height="15" fill="rgb(240,68,47)" fg:x="4047" fg:w="1039"/><text x="1.3602%" y="511.50"></text></g><g><title>[unknown] (1,019 samples, 0.28%)</title><rect x="1.1156%" y="485" width="0.2795%" height="15" fill="rgb(210,16,53)" fg:x="4067" fg:w="1019"/><text x="1.3656%" y="495.50"></text></g><g><title>[unknown] (1,009 samples, 0.28%)</title><rect x="1.1184%" y="469" width="0.2768%" height="15" fill="rgb(235,124,12)" fg:x="4077" fg:w="1009"/><text x="1.3684%" y="479.50"></text></g><g><title>[unknown] (953 samples, 0.26%)</title><rect x="1.1337%" y="453" width="0.2614%" height="15" fill="rgb(224,169,11)" fg:x="4133" fg:w="953"/><text x="1.3837%" y="463.50"></text></g><g><title>[unknown] (911 samples, 0.25%)</title><rect x="1.1453%" y="437" width="0.2499%" height="15" fill="rgb(250,166,2)" fg:x="4175" fg:w="911"/><text x="1.3953%" y="447.50"></text></g><g><title>[unknown] (867 samples, 0.24%)</title><rect x="1.1573%" y="421" width="0.2378%" height="15" fill="rgb(242,216,29)" fg:x="4219" fg:w="867"/><text x="1.4073%" y="431.50"></text></g><g><title>[unknown] (854 samples, 0.23%)</title><rect x="1.1609%" y="405" width="0.2343%" height="15" fill="rgb(230,116,27)" fg:x="4232" fg:w="854"/><text x="1.4109%" y="415.50"></text></g><g><title>[unknown] (827 samples, 0.23%)</title><rect x="1.1683%" y="389" width="0.2269%" height="15" fill="rgb(228,99,48)" fg:x="4259" fg:w="827"/><text x="1.4183%" y="399.50"></text></g><g><title>[unknown] (730 samples, 0.20%)</title><rect x="1.1949%" y="373" width="0.2002%" height="15" fill="rgb(253,11,6)" fg:x="4356" fg:w="730"/><text x="1.4449%" y="383.50"></text></g><g><title>[unknown] (627 samples, 0.17%)</title><rect x="1.2232%" y="357" width="0.1720%" height="15" fill="rgb(247,143,39)" fg:x="4459" fg:w="627"/><text x="1.4732%" y="367.50"></text></g><g><title>[unknown] (543 samples, 0.15%)</title><rect x="1.2462%" y="341" width="0.1490%" height="15" fill="rgb(236,97,10)" fg:x="4543" fg:w="543"/><text x="1.4962%" y="351.50"></text></g><g><title>[unknown] (505 samples, 0.14%)</title><rect x="1.2566%" y="325" width="0.1385%" height="15" fill="rgb(233,208,19)" fg:x="4581" fg:w="505"/><text x="1.5066%" y="335.50"></text></g><g><title>[unknown] (482 samples, 0.13%)</title><rect x="1.2629%" y="309" width="0.1322%" height="15" fill="rgb(216,164,2)" fg:x="4604" fg:w="482"/><text x="1.5129%" y="319.50"></text></g><g><title>[unknown] (461 samples, 0.13%)</title><rect x="1.2687%" y="293" width="0.1265%" height="15" fill="rgb(220,129,5)" fg:x="4625" fg:w="461"/><text x="1.5187%" y="303.50"></text></g><g><title>[unknown] (429 samples, 0.12%)</title><rect x="1.2775%" y="277" width="0.1177%" height="15" fill="rgb(242,17,10)" fg:x="4657" fg:w="429"/><text x="1.5275%" y="287.50"></text></g><g><title>[unknown] (377 samples, 0.10%)</title><rect x="1.2917%" y="261" width="0.1034%" height="15" fill="rgb(242,107,0)" fg:x="4709" fg:w="377"/><text x="1.5417%" y="271.50"></text></g><g><title>[unknown] (332 samples, 0.09%)</title><rect x="1.3041%" y="245" width="0.0911%" height="15" fill="rgb(251,28,31)" fg:x="4754" fg:w="332"/><text x="1.5541%" y="255.50"></text></g><g><title>[unknown] (327 samples, 0.09%)</title><rect x="1.3055%" y="229" width="0.0897%" height="15" fill="rgb(233,223,10)" fg:x="4759" fg:w="327"/><text x="1.5555%" y="239.50"></text></g><g><title>[unknown] (312 samples, 0.09%)</title><rect x="1.3096%" y="213" width="0.0856%" height="15" fill="rgb(215,21,27)" fg:x="4774" fg:w="312"/><text x="1.5596%" y="223.50"></text></g><g><title>[unknown] (262 samples, 0.07%)</title><rect x="1.3233%" y="197" width="0.0719%" height="15" fill="rgb(232,23,21)" fg:x="4824" fg:w="262"/><text x="1.5733%" y="207.50"></text></g><g><title>[unknown] (212 samples, 0.06%)</title><rect x="1.3370%" y="181" width="0.0582%" height="15" fill="rgb(244,5,23)" fg:x="4874" fg:w="212"/><text x="1.5870%" y="191.50"></text></g><g><title>[unknown] (135 samples, 0.04%)</title><rect x="1.3581%" y="165" width="0.0370%" height="15" fill="rgb(226,81,46)" fg:x="4951" fg:w="135"/><text x="1.6081%" y="175.50"></text></g><g><title>[unknown] (71 samples, 0.02%)</title><rect x="1.3757%" y="149" width="0.0195%" height="15" fill="rgb(247,70,30)" fg:x="5015" fg:w="71"/><text x="1.6257%" y="159.50"></text></g><g><title>[unknown] (40 samples, 0.01%)</title><rect x="1.3842%" y="133" width="0.0110%" height="15" fill="rgb(212,68,19)" fg:x="5046" fg:w="40"/><text x="1.6342%" y="143.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (2,606 samples, 0.71%)</title><rect x="0.6825%" y="981" width="0.7149%" height="15" fill="rgb(240,187,13)" fg:x="2488" fg:w="2606"/><text x="0.9325%" y="991.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (2,604 samples, 0.71%)</title><rect x="0.6830%" y="965" width="0.7143%" height="15" fill="rgb(223,113,26)" fg:x="2490" fg:w="2604"/><text x="0.9330%" y="975.50"></text></g><g><title>std::sys_common::net::TcpStream::write (2,604 samples, 0.71%)</title><rect x="0.6830%" y="949" width="0.7143%" height="15" fill="rgb(206,192,2)" fg:x="2490" fg:w="2604"/><text x="0.9330%" y="959.50"></text></g><g><title>__libc_send (2,601 samples, 0.71%)</title><rect x="0.6839%" y="933" width="0.7135%" height="15" fill="rgb(241,108,4)" fg:x="2493" fg:w="2601"/><text x="0.9339%" y="943.50"></text></g><g><title>__libc_send (2,598 samples, 0.71%)</title><rect x="0.6847%" y="917" width="0.7127%" height="15" fill="rgb(247,173,49)" fg:x="2496" fg:w="2598"/><text x="0.9347%" y="927.50"></text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_write::AsyncWrite&gt;::poll_write (2,623 samples, 0.72%)</title><rect x="0.6789%" y="1013" width="0.7195%" height="15" fill="rgb(224,114,35)" fg:x="2475" fg:w="2623"/><text x="0.9289%" y="1023.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write (2,619 samples, 0.72%)</title><rect x="0.6800%" y="997" width="0.7184%" height="15" fill="rgb(245,159,27)" fg:x="2479" fg:w="2619"/><text x="0.9300%" y="1007.50"></text></g><g><title>actix_http::h1::dispatcher::InnerDispatcher&lt;T,S,B,X,U&gt;::poll_flush (2,636 samples, 0.72%)</title><rect x="0.6767%" y="1029" width="0.7231%" height="15" fill="rgb(245,172,44)" fg:x="2467" fg:w="2636"/><text x="0.9267%" y="1039.50"></text></g><g><title>actix_http::h1::dispatcher::InnerDispatcher&lt;T,S,B,X,U&gt;::poll_request (50 samples, 0.01%)</title><rect x="1.3998%" y="1029" width="0.0137%" height="15" fill="rgb(236,23,11)" fg:x="5103" fg:w="50"/><text x="1.6498%" y="1039.50"></text></g><g><title>actix_http::h1::encoder::TransferEncoding::encode (42 samples, 0.01%)</title><rect x="1.4185%" y="997" width="0.0115%" height="15" fill="rgb(205,117,38)" fg:x="5171" fg:w="42"/><text x="1.6685%" y="1007.50"></text></g><g><title>bytes::bytes_mut::BytesMut::extend_from_slice (40 samples, 0.01%)</title><rect x="1.4190%" y="981" width="0.0110%" height="15" fill="rgb(237,72,25)" fg:x="5173" fg:w="40"/><text x="1.6690%" y="991.50"></text></g><g><title>__memmove_avx_unaligned_erms (38 samples, 0.01%)</title><rect x="1.4196%" y="965" width="0.0104%" height="15" fill="rgb(244,70,9)" fg:x="5175" fg:w="38"/><text x="1.6696%" y="975.50"></text></g><g><title>&lt;actix_http::h1::codec::Codec as tokio_util::codec::encoder::Encoder&lt;actix_http::h1::Message&lt;(actix_http::responses::response::Response&lt;()&gt;,actix_http::body::size::BodySize)&gt;&gt;&gt;::encode (55 samples, 0.02%)</title><rect x="1.4185%" y="1013" width="0.0151%" height="15" fill="rgb(217,125,39)" fg:x="5171" fg:w="55"/><text x="1.6685%" y="1023.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::put_slice (57 samples, 0.02%)</title><rect x="1.4646%" y="917" width="0.0156%" height="15" fill="rgb(235,36,10)" fg:x="5339" fg:w="57"/><text x="1.7146%" y="927.50"></text></g><g><title>__memmove_avx_unaligned_erms (56 samples, 0.02%)</title><rect x="1.4648%" y="901" width="0.0154%" height="15" fill="rgb(251,123,47)" fg:x="5340" fg:w="56"/><text x="1.7148%" y="911.50"></text></g><g><title>&lt;actix_http::ws::codec::Codec as tokio_util::codec::encoder::Encoder&lt;actix_http::ws::codec::Message&gt;&gt;::encode (128 samples, 0.04%)</title><rect x="1.4566%" y="933" width="0.0351%" height="15" fill="rgb(221,13,13)" fg:x="5310" fg:w="128"/><text x="1.7066%" y="943.50"></text></g><g><title>&lt;actix_http::body::message_body::MessageBodyMapErr&lt;B,F&gt; as actix_http::body::message_body::MessageBody&gt;::poll_next (200 samples, 0.05%)</title><rect x="1.4445%" y="981" width="0.0549%" height="15" fill="rgb(238,131,9)" fg:x="5266" fg:w="200"/><text x="1.6945%" y="991.50"></text></g><g><title>&lt;actix_http::body::body_stream::BodyStream&lt;S&gt; as actix_http::body::message_body::MessageBody&gt;::poll_next (199 samples, 0.05%)</title><rect x="1.4448%" y="965" width="0.0546%" height="15" fill="rgb(211,50,8)" fg:x="5267" fg:w="199"/><text x="1.6948%" y="975.50"></text></g><g><title>&lt;actix_ws::fut::StreamingBody as futures_core::stream::Stream&gt;::poll_next (197 samples, 0.05%)</title><rect x="1.4454%" y="949" width="0.0540%" height="15" fill="rgb(245,182,24)" fg:x="5269" fg:w="197"/><text x="1.6954%" y="959.50"></text></g><g><title>&lt;actix_web::middleware::logger::StreamLog&lt;B&gt; as actix_http::body::message_body::MessageBody&gt;::poll_next (241 samples, 0.07%)</title><rect x="1.4336%" y="1013" width="0.0661%" height="15" fill="rgb(242,14,37)" fg:x="5226" fg:w="241"/><text x="1.6836%" y="1023.50"></text></g><g><title>&lt;actix_http::encoding::encoder::Encoder&lt;B&gt; as actix_http::body::message_body::MessageBody&gt;::poll_next (222 samples, 0.06%)</title><rect x="1.4388%" y="997" width="0.0609%" height="15" fill="rgb(246,228,12)" fg:x="5245" fg:w="222"/><text x="1.6888%" y="1007.50"></text></g><g><title>actix_http::h1::dispatcher::InnerDispatcher&lt;T,S,B,X,U&gt;::poll_response (316 samples, 0.09%)</title><rect x="1.4135%" y="1029" width="0.0867%" height="15" fill="rgb(213,55,15)" fg:x="5153" fg:w="316"/><text x="1.6635%" y="1039.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (64 samples, 0.02%)</title><rect x="1.5219%" y="1013" width="0.0176%" height="15" fill="rgb(209,9,3)" fg:x="5548" fg:w="64"/><text x="1.7719%" y="1023.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (3,270 samples, 0.90%)</title><rect x="0.6444%" y="1125" width="0.8970%" height="15" fill="rgb(230,59,30)" fg:x="2349" fg:w="3270"/><text x="0.8944%" y="1135.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (3,250 samples, 0.89%)</title><rect x="0.6499%" y="1109" width="0.8915%" height="15" fill="rgb(209,121,21)" fg:x="2369" fg:w="3250"/><text x="0.8999%" y="1119.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (3,250 samples, 0.89%)</title><rect x="0.6499%" y="1093" width="0.8915%" height="15" fill="rgb(220,109,13)" fg:x="2369" fg:w="3250"/><text x="0.8999%" y="1103.50"></text></g><g><title>&lt;actix_service::and_then::AndThenServiceResponse&lt;A,B,Req&gt; as core::future::future::Future&gt;::poll (3,250 samples, 0.89%)</title><rect x="0.6499%" y="1077" width="0.8915%" height="15" fill="rgb(232,18,1)" fg:x="2369" fg:w="3250"/><text x="0.8999%" y="1087.50"></text></g><g><title>&lt;actix_http::service::HttpServiceHandlerResponse&lt;T,S,B,X,U&gt; as core::future::future::Future&gt;::poll (3,250 samples, 0.89%)</title><rect x="0.6499%" y="1061" width="0.8915%" height="15" fill="rgb(215,41,42)" fg:x="2369" fg:w="3250"/><text x="0.8999%" y="1071.50"></text></g><g><title>&lt;actix_http::h1::dispatcher::Dispatcher&lt;T,S,B,X,U&gt; as core::future::future::Future&gt;::poll (3,235 samples, 0.89%)</title><rect x="0.6540%" y="1045" width="0.8874%" height="15" fill="rgb(224,123,36)" fg:x="2384" fg:w="3235"/><text x="0.9040%" y="1055.50"></text></g><g><title>tokio_util::util::poll_read_buf (91 samples, 0.02%)</title><rect x="1.5164%" y="1029" width="0.0250%" height="15" fill="rgb(240,125,3)" fg:x="5528" fg:w="91"/><text x="1.7664%" y="1039.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (38 samples, 0.01%)</title><rect x="1.5430%" y="1125" width="0.0104%" height="15" fill="rgb(205,98,50)" fg:x="5625" fg:w="38"/><text x="1.7930%" y="1135.50"></text></g><g><title>[unknown] (4,377 samples, 1.20%)</title><rect x="0.3994%" y="1141" width="1.2007%" height="15" fill="rgb(205,185,37)" fg:x="1456" fg:w="4377"/><text x="0.6494%" y="1151.50"></text></g><g><title>_int_malloc (238 samples, 0.07%)</title><rect x="1.8398%" y="709" width="0.0653%" height="15" fill="rgb(238,207,15)" fg:x="6707" fg:w="238"/><text x="2.0898%" y="719.50"></text></g><g><title>__GI___libc_malloc (440 samples, 0.12%)</title><rect x="1.7905%" y="725" width="0.1207%" height="15" fill="rgb(213,199,42)" fg:x="6527" fg:w="440"/><text x="2.0405%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (456 samples, 0.13%)</title><rect x="1.7885%" y="821" width="0.1251%" height="15" fill="rgb(235,201,11)" fg:x="6520" fg:w="456"/><text x="2.0385%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (456 samples, 0.13%)</title><rect x="1.7885%" y="805" width="0.1251%" height="15" fill="rgb(207,46,11)" fg:x="6520" fg:w="456"/><text x="2.0385%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (456 samples, 0.13%)</title><rect x="1.7885%" y="789" width="0.1251%" height="15" fill="rgb(241,35,35)" fg:x="6520" fg:w="456"/><text x="2.0385%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (449 samples, 0.12%)</title><rect x="1.7905%" y="773" width="0.1232%" height="15" fill="rgb(243,32,47)" fg:x="6527" fg:w="449"/><text x="2.0405%" y="783.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (449 samples, 0.12%)</title><rect x="1.7905%" y="757" width="0.1232%" height="15" fill="rgb(247,202,23)" fg:x="6527" fg:w="449"/><text x="2.0405%" y="767.50"></text></g><g><title>alloc::alloc::alloc (449 samples, 0.12%)</title><rect x="1.7905%" y="741" width="0.1232%" height="15" fill="rgb(219,102,11)" fg:x="6527" fg:w="449"/><text x="2.0405%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (723 samples, 0.20%)</title><rect x="1.7822%" y="901" width="0.1983%" height="15" fill="rgb(243,110,44)" fg:x="6497" fg:w="723"/><text x="2.0322%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (700 samples, 0.19%)</title><rect x="1.7885%" y="885" width="0.1920%" height="15" fill="rgb(222,74,54)" fg:x="6520" fg:w="700"/><text x="2.0385%" y="895.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (700 samples, 0.19%)</title><rect x="1.7885%" y="869" width="0.1920%" height="15" fill="rgb(216,99,12)" fg:x="6520" fg:w="700"/><text x="2.0385%" y="879.50"></text></g><g><title>alloc::slice::hack::to_vec (700 samples, 0.19%)</title><rect x="1.7885%" y="853" width="0.1920%" height="15" fill="rgb(226,22,26)" fg:x="6520" fg:w="700"/><text x="2.0385%" y="863.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (700 samples, 0.19%)</title><rect x="1.7885%" y="837" width="0.1920%" height="15" fill="rgb(217,163,10)" fg:x="6520" fg:w="700"/><text x="2.0385%" y="847.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (244 samples, 0.07%)</title><rect x="1.9136%" y="821" width="0.0669%" height="15" fill="rgb(213,25,53)" fg:x="6976" fg:w="244"/><text x="2.1636%" y="831.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (244 samples, 0.07%)</title><rect x="1.9136%" y="805" width="0.0669%" height="15" fill="rgb(252,105,26)" fg:x="6976" fg:w="244"/><text x="2.1636%" y="815.50"></text></g><g><title>__memmove_avx_unaligned_erms (244 samples, 0.07%)</title><rect x="1.9136%" y="789" width="0.0669%" height="15" fill="rgb(220,39,43)" fg:x="6976" fg:w="244"/><text x="2.1636%" y="799.50"></text></g><g><title>malloc_consolidate (419 samples, 0.11%)</title><rect x="2.0239%" y="869" width="0.1149%" height="15" fill="rgb(229,68,48)" fg:x="7378" fg:w="419"/><text x="2.2739%" y="879.50"></text></g><g><title>__GI___libc_malloc (580 samples, 0.16%)</title><rect x="1.9816%" y="901" width="0.1591%" height="15" fill="rgb(252,8,32)" fg:x="7224" fg:w="580"/><text x="2.2316%" y="911.50"></text></g><g><title>_int_malloc (547 samples, 0.15%)</title><rect x="1.9907%" y="885" width="0.1501%" height="15" fill="rgb(223,20,43)" fg:x="7257" fg:w="547"/><text x="2.2407%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,414 samples, 0.39%)</title><rect x="1.7562%" y="917" width="0.3879%" height="15" fill="rgb(229,81,49)" fg:x="6402" fg:w="1414"/><text x="2.0062%" y="927.50"></text></g><g><title>__GI___libc_realloc (221 samples, 0.06%)</title><rect x="2.1707%" y="885" width="0.0606%" height="15" fill="rgb(236,28,36)" fg:x="7913" fg:w="221"/><text x="2.4207%" y="895.50"></text></g><g><title>_int_realloc (175 samples, 0.05%)</title><rect x="2.1833%" y="869" width="0.0480%" height="15" fill="rgb(249,185,26)" fg:x="7959" fg:w="175"/><text x="2.4333%" y="879.50"></text></g><g><title>_int_malloc (108 samples, 0.03%)</title><rect x="2.2016%" y="853" width="0.0296%" height="15" fill="rgb(249,174,33)" fg:x="8026" fg:w="108"/><text x="2.4516%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (258 samples, 0.07%)</title><rect x="2.1624%" y="917" width="0.0708%" height="15" fill="rgb(233,201,37)" fg:x="7883" fg:w="258"/><text x="2.4124%" y="927.50"></text></g><g><title>alloc::raw_vec::finish_grow (249 samples, 0.07%)</title><rect x="2.1649%" y="901" width="0.0683%" height="15" fill="rgb(221,78,26)" fg:x="7892" fg:w="249"/><text x="2.4149%" y="911.50"></text></g><g><title>__GI___libc_free (44 samples, 0.01%)</title><rect x="2.2406%" y="901" width="0.0121%" height="15" fill="rgb(250,127,30)" fg:x="8168" fg:w="44"/><text x="2.4906%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;stream_book::grpc_routes::grpc_impl::order_book_proto::Summary&gt; (266 samples, 0.07%)</title><rect x="2.2351%" y="917" width="0.0730%" height="15" fill="rgb(230,49,44)" fg:x="8148" fg:w="266"/><text x="2.4851%" y="927.50"></text></g><g><title>_int_free (189 samples, 0.05%)</title><rect x="2.2562%" y="901" width="0.0518%" height="15" fill="rgb(229,67,23)" fg:x="8225" fg:w="189"/><text x="2.5062%" y="911.50"></text></g><g><title>serde_json::ser::format_escaped_str (47 samples, 0.01%)</title><rect x="2.3265%" y="885" width="0.0129%" height="15" fill="rgb(249,83,47)" fg:x="8481" fg:w="47"/><text x="2.5765%" y="895.50"></text></g><g><title>__memmove_avx_unaligned_erms (108 samples, 0.03%)</title><rect x="2.4548%" y="853" width="0.0296%" height="15" fill="rgb(215,43,3)" fg:x="8949" fg:w="108"/><text x="2.7048%" y="863.50"></text></g><g><title>__GI___libc_realloc (59 samples, 0.02%)</title><rect x="2.4850%" y="821" width="0.0162%" height="15" fill="rgb(238,154,13)" fg:x="9059" fg:w="59"/><text x="2.7350%" y="831.50"></text></g><g><title>_int_realloc (50 samples, 0.01%)</title><rect x="2.4875%" y="805" width="0.0137%" height="15" fill="rgb(219,56,2)" fg:x="9068" fg:w="50"/><text x="2.7375%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (62 samples, 0.02%)</title><rect x="2.4845%" y="853" width="0.0170%" height="15" fill="rgb(233,0,4)" fg:x="9057" fg:w="62"/><text x="2.7345%" y="863.50"></text></g><g><title>alloc::raw_vec::finish_grow (60 samples, 0.02%)</title><rect x="2.4850%" y="837" width="0.0165%" height="15" fill="rgb(235,30,7)" fg:x="9059" fg:w="60"/><text x="2.7350%" y="847.50"></text></g><g><title>core::f64::&lt;impl f64&gt;::classify (49 samples, 0.01%)</title><rect x="2.5015%" y="853" width="0.0134%" height="15" fill="rgb(250,79,13)" fg:x="9119" fg:w="49"/><text x="2.7515%" y="863.50"></text></g><g><title>core::f64::&lt;impl f64&gt;::partial_classify (40 samples, 0.01%)</title><rect x="2.5039%" y="837" width="0.0110%" height="15" fill="rgb(211,146,34)" fg:x="9128" fg:w="40"/><text x="2.7539%" y="847.50"></text></g><g><title>__memset_avx2_unaligned_erms (67 samples, 0.02%)</title><rect x="2.6093%" y="837" width="0.0184%" height="15" fill="rgb(228,22,38)" fg:x="9512" fg:w="67"/><text x="2.8593%" y="847.50"></text></g><g><title>ryu::d2s::d2d (1,298 samples, 0.36%)</title><rect x="2.6277%" y="837" width="0.3561%" height="15" fill="rgb(235,168,5)" fg:x="9579" fg:w="1298"/><text x="2.8777%" y="847.50"></text></g><g><title>ryu::pretty::format64 (1,916 samples, 0.53%)</title><rect x="2.5149%" y="853" width="0.5256%" height="15" fill="rgb(221,155,16)" fg:x="9168" fg:w="1916"/><text x="2.7649%" y="863.50"></text></g><g><title>ryu::pretty::mantissa::write_mantissa_long (207 samples, 0.06%)</title><rect x="2.9837%" y="837" width="0.0568%" height="15" fill="rgb(215,215,53)" fg:x="10877" fg:w="207"/><text x="3.2337%" y="847.50"></text></g><g><title>__memmove_avx_unaligned_erms (129 samples, 0.04%)</title><rect x="3.2377%" y="837" width="0.0354%" height="15" fill="rgb(223,4,10)" fg:x="11803" fg:w="129"/><text x="3.4877%" y="847.50"></text></g><g><title>__GI___libc_realloc (65 samples, 0.02%)</title><rect x="3.2742%" y="805" width="0.0178%" height="15" fill="rgb(234,103,6)" fg:x="11936" fg:w="65"/><text x="3.5242%" y="815.50"></text></g><g><title>_int_realloc (54 samples, 0.01%)</title><rect x="3.2772%" y="789" width="0.0148%" height="15" fill="rgb(227,97,0)" fg:x="11947" fg:w="54"/><text x="3.5272%" y="799.50"></text></g><g><title>stream_book::ws_data_providers::_::&lt;impl serde::ser::Serialize for stream_book::ws_data_providers::ExchangeSummary&gt;::serialize (3,590 samples, 0.98%)</title><rect x="2.3081%" y="917" width="0.9848%" height="15" fill="rgb(234,150,53)" fg:x="8414" fg:w="3590"/><text x="2.5581%" y="927.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3,588 samples, 0.98%)</title><rect x="2.3086%" y="901" width="0.9842%" height="15" fill="rgb(228,201,54)" fg:x="8416" fg:w="3588"/><text x="2.5586%" y="911.50"></text></g><g><title>stream_book::ws_data_providers::_::&lt;impl serde::ser::Serialize for stream_book::ws_data_providers::ExchangePriceLevel&gt;::serialize (3,476 samples, 0.95%)</title><rect x="2.3394%" y="885" width="0.9535%" height="15" fill="rgb(222,22,37)" fg:x="8528" fg:w="3476"/><text x="2.5894%" y="895.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3,359 samples, 0.92%)</title><rect x="2.3714%" y="869" width="0.9214%" height="15" fill="rgb(237,53,32)" fg:x="8645" fg:w="3359"/><text x="2.6214%" y="879.50"></text></g><g><title>serde_json::ser::format_escaped_str (920 samples, 0.25%)</title><rect x="3.0405%" y="853" width="0.2524%" height="15" fill="rgb(233,25,53)" fg:x="11084" fg:w="920"/><text x="3.2905%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (72 samples, 0.02%)</title><rect x="3.2731%" y="837" width="0.0198%" height="15" fill="rgb(210,40,34)" fg:x="11932" fg:w="72"/><text x="3.5231%" y="847.50"></text></g><g><title>alloc::raw_vec::finish_grow (68 samples, 0.02%)</title><rect x="3.2742%" y="821" width="0.0187%" height="15" fill="rgb(241,220,44)" fg:x="11936" fg:w="68"/><text x="3.5242%" y="831.50"></text></g><g><title>tokio::sync::mpsc::bounded::Sender&lt;T&gt;::send::{{closure}} (75 samples, 0.02%)</title><rect x="3.3055%" y="917" width="0.0206%" height="15" fill="rgb(235,28,35)" fg:x="12050" fg:w="75"/><text x="3.5555%" y="927.50"></text></g><g><title>&lt;tokio::sync::batch_semaphore::Acquire as core::future::future::Future&gt;::poll (42 samples, 0.01%)</title><rect x="3.3288%" y="901" width="0.0115%" height="15" fill="rgb(210,56,17)" fg:x="12135" fg:w="42"/><text x="3.5788%" y="911.50"></text></g><g><title>tokio::sync::rwlock::RwLock&lt;T&gt;::read::{{closure}} (68 samples, 0.02%)</title><rect x="3.3261%" y="917" width="0.0187%" height="15" fill="rgb(224,130,29)" fg:x="12125" fg:w="68"/><text x="3.5761%" y="927.50"></text></g><g><title>&lt;tokio::time::sleep::Sleep as core::future::future::Future&gt;::poll (57 samples, 0.02%)</title><rect x="3.3475%" y="901" width="0.0156%" height="15" fill="rgb(235,212,8)" fg:x="12203" fg:w="57"/><text x="3.5975%" y="911.50"></text></g><g><title>tokio::time::interval::Interval::poll_tick (74 samples, 0.02%)</title><rect x="3.3447%" y="917" width="0.0203%" height="15" fill="rgb(223,33,50)" fg:x="12193" fg:w="74"/><text x="3.5947%" y="927.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (6,093 samples, 1.67%)</title><rect x="1.6944%" y="949" width="1.6714%" height="15" fill="rgb(219,149,13)" fg:x="6177" fg:w="6093"/><text x="1.9444%" y="959.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (6,077 samples, 1.67%)</title><rect x="1.6988%" y="933" width="1.6670%" height="15" fill="rgb(250,156,29)" fg:x="6193" fg:w="6077"/><text x="1.9488%" y="943.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (6,142 samples, 1.68%)</title><rect x="1.6884%" y="965" width="1.6848%" height="15" fill="rgb(216,193,19)" fg:x="6155" fg:w="6142"/><text x="1.9384%" y="975.50"></text></g><g><title>&lt;tokio::task::local::RunUntil&lt;T&gt; as core::future::future::Future&gt;::poll (6,394 samples, 1.75%)</title><rect x="1.6357%" y="997" width="1.7540%" height="15" fill="rgb(216,135,14)" fg:x="5963" fg:w="6394"/><text x="1.8857%" y="1007.50"></text></g><g><title>tokio::task::local::LocalSet::tick (6,250 samples, 1.71%)</title><rect x="1.6752%" y="981" width="1.7145%" height="15" fill="rgb(241,47,5)" fg:x="6107" fg:w="6250"/><text x="1.9252%" y="991.50"></text></g><g><title>tokio::runtime::task::raw::poll (60 samples, 0.02%)</title><rect x="3.3732%" y="965" width="0.0165%" height="15" fill="rgb(233,42,35)" fg:x="12297" fg:w="60"/><text x="3.6232%" y="975.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (45 samples, 0.01%)</title><rect x="3.3774%" y="949" width="0.0123%" height="15" fill="rgb(231,13,6)" fg:x="12312" fg:w="45"/><text x="3.6274%" y="959.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (45 samples, 0.01%)</title><rect x="3.3774%" y="933" width="0.0123%" height="15" fill="rgb(207,181,40)" fg:x="12312" fg:w="45"/><text x="3.6274%" y="943.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (6,438 samples, 1.77%)</title><rect x="1.6239%" y="1013" width="1.7660%" height="15" fill="rgb(254,173,49)" fg:x="5920" fg:w="6438"/><text x="1.8739%" y="1023.50"></text></g><g><title>__memmove_avx_unaligned_erms (97 samples, 0.03%)</title><rect x="3.4089%" y="997" width="0.0266%" height="15" fill="rgb(221,1,38)" fg:x="12427" fg:w="97"/><text x="3.6589%" y="1007.50"></text></g><g><title>[unknown] (251 samples, 0.07%)</title><rect x="3.4827%" y="821" width="0.0689%" height="15" fill="rgb(206,124,46)" fg:x="12696" fg:w="251"/><text x="3.7327%" y="831.50"></text></g><g><title>[unknown] (238 samples, 0.07%)</title><rect x="3.4863%" y="805" width="0.0653%" height="15" fill="rgb(249,21,11)" fg:x="12709" fg:w="238"/><text x="3.7363%" y="815.50"></text></g><g><title>[unknown] (233 samples, 0.06%)</title><rect x="3.4876%" y="789" width="0.0639%" height="15" fill="rgb(222,201,40)" fg:x="12714" fg:w="233"/><text x="3.7376%" y="799.50"></text></g><g><title>[unknown] (229 samples, 0.06%)</title><rect x="3.4887%" y="773" width="0.0628%" height="15" fill="rgb(235,61,29)" fg:x="12718" fg:w="229"/><text x="3.7387%" y="783.50"></text></g><g><title>[unknown] (224 samples, 0.06%)</title><rect x="3.4901%" y="757" width="0.0614%" height="15" fill="rgb(219,207,3)" fg:x="12723" fg:w="224"/><text x="3.7401%" y="767.50"></text></g><g><title>[unknown] (197 samples, 0.05%)</title><rect x="3.4975%" y="741" width="0.0540%" height="15" fill="rgb(222,56,46)" fg:x="12750" fg:w="197"/><text x="3.7475%" y="751.50"></text></g><g><title>[unknown] (145 samples, 0.04%)</title><rect x="3.5118%" y="725" width="0.0398%" height="15" fill="rgb(239,76,54)" fg:x="12802" fg:w="145"/><text x="3.7618%" y="735.50"></text></g><g><title>[unknown] (108 samples, 0.03%)</title><rect x="3.5219%" y="709" width="0.0296%" height="15" fill="rgb(231,124,27)" fg:x="12839" fg:w="108"/><text x="3.7719%" y="719.50"></text></g><g><title>[unknown] (78 samples, 0.02%)</title><rect x="3.5302%" y="693" width="0.0214%" height="15" fill="rgb(249,195,6)" fg:x="12869" fg:w="78"/><text x="3.7802%" y="703.50"></text></g><g><title>mio::sys::unix::waker::eventfd::Waker::wake (271 samples, 0.07%)</title><rect x="3.4778%" y="917" width="0.0743%" height="15" fill="rgb(237,174,47)" fg:x="12678" fg:w="271"/><text x="3.7278%" y="927.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (269 samples, 0.07%)</title><rect x="3.4783%" y="901" width="0.0738%" height="15" fill="rgb(206,201,31)" fg:x="12680" fg:w="269"/><text x="3.7283%" y="911.50"></text></g><g><title>std::sys::unix::fs::File::write (269 samples, 0.07%)</title><rect x="3.4783%" y="885" width="0.0738%" height="15" fill="rgb(231,57,52)" fg:x="12680" fg:w="269"/><text x="3.7283%" y="895.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (269 samples, 0.07%)</title><rect x="3.4783%" y="869" width="0.0738%" height="15" fill="rgb(248,177,22)" fg:x="12680" fg:w="269"/><text x="3.7283%" y="879.50"></text></g><g><title>__libc_write (268 samples, 0.07%)</title><rect x="3.4786%" y="853" width="0.0735%" height="15" fill="rgb(215,211,37)" fg:x="12681" fg:w="268"/><text x="3.7286%" y="863.50"></text></g><g><title>__libc_write (255 samples, 0.07%)</title><rect x="3.4821%" y="837" width="0.0700%" height="15" fill="rgb(241,128,51)" fg:x="12694" fg:w="255"/><text x="3.7321%" y="847.50"></text></g><g><title>&lt;tokio::runtime::scheduler::current_thread::Handle as tokio::util::wake::Wake&gt;::wake (298 samples, 0.08%)</title><rect x="3.4712%" y="949" width="0.0817%" height="15" fill="rgb(227,165,31)" fg:x="12654" fg:w="298"/><text x="3.7212%" y="959.50"></text></g><g><title>tokio::runtime::driver::Handle::unpark (288 samples, 0.08%)</title><rect x="3.4739%" y="933" width="0.0790%" height="15" fill="rgb(228,167,24)" fg:x="12664" fg:w="288"/><text x="3.7239%" y="943.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (371 samples, 0.10%)</title><rect x="3.4638%" y="965" width="0.1018%" height="15" fill="rgb(228,143,12)" fg:x="12627" fg:w="371"/><text x="3.7138%" y="975.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (421 samples, 0.12%)</title><rect x="3.4635%" y="981" width="0.1155%" height="15" fill="rgb(249,149,8)" fg:x="12626" fg:w="421"/><text x="3.7135%" y="991.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time (645 samples, 0.18%)</title><rect x="3.4429%" y="997" width="0.1769%" height="15" fill="rgb(243,35,44)" fg:x="12551" fg:w="645"/><text x="3.6929%" y="1007.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::poll (127 samples, 0.03%)</title><rect x="3.5850%" y="981" width="0.0348%" height="15" fill="rgb(246,89,9)" fg:x="13069" fg:w="127"/><text x="3.8350%" y="991.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (59 samples, 0.02%)</title><rect x="3.6037%" y="965" width="0.0162%" height="15" fill="rgb(233,213,13)" fg:x="13137" fg:w="59"/><text x="3.8537%" y="975.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_expiration (44 samples, 0.01%)</title><rect x="3.6078%" y="949" width="0.0121%" height="15" fill="rgb(233,141,41)" fg:x="13152" fg:w="44"/><text x="3.8578%" y="959.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (113 samples, 0.03%)</title><rect x="3.6511%" y="981" width="0.0310%" height="15" fill="rgb(239,167,4)" fg:x="13310" fg:w="113"/><text x="3.9011%" y="991.50"></text></g><g><title>__GI___clock_gettime (113 samples, 0.03%)</title><rect x="3.6511%" y="965" width="0.0310%" height="15" fill="rgb(209,217,16)" fg:x="13310" fg:w="113"/><text x="3.9011%" y="975.50"></text></g><g><title>[unknown] (1,178 samples, 0.32%)</title><rect x="3.7669%" y="933" width="0.3231%" height="15" fill="rgb(219,88,35)" fg:x="13732" fg:w="1178"/><text x="4.0169%" y="943.50"></text></g><g><title>[unknown] (1,148 samples, 0.31%)</title><rect x="3.7751%" y="917" width="0.3149%" height="15" fill="rgb(220,193,23)" fg:x="13762" fg:w="1148"/><text x="4.0251%" y="927.50"></text></g><g><title>[unknown] (1,130 samples, 0.31%)</title><rect x="3.7801%" y="901" width="0.3100%" height="15" fill="rgb(230,90,52)" fg:x="13780" fg:w="1130"/><text x="4.0301%" y="911.50"></text></g><g><title>[unknown] (1,109 samples, 0.30%)</title><rect x="3.7858%" y="885" width="0.3042%" height="15" fill="rgb(252,106,19)" fg:x="13801" fg:w="1109"/><text x="4.0358%" y="895.50"></text></g><g><title>[unknown] (1,063 samples, 0.29%)</title><rect x="3.7984%" y="869" width="0.2916%" height="15" fill="rgb(206,74,20)" fg:x="13847" fg:w="1063"/><text x="4.0484%" y="879.50"></text></g><g><title>[unknown] (933 samples, 0.26%)</title><rect x="3.8341%" y="853" width="0.2559%" height="15" fill="rgb(230,138,44)" fg:x="13977" fg:w="933"/><text x="4.0841%" y="863.50"></text></g><g><title>[unknown] (777 samples, 0.21%)</title><rect x="3.8769%" y="837" width="0.2131%" height="15" fill="rgb(235,182,43)" fg:x="14133" fg:w="777"/><text x="4.1269%" y="847.50"></text></g><g><title>[unknown] (736 samples, 0.20%)</title><rect x="3.8881%" y="821" width="0.2019%" height="15" fill="rgb(242,16,51)" fg:x="14174" fg:w="736"/><text x="4.1381%" y="831.50"></text></g><g><title>[unknown] (705 samples, 0.19%)</title><rect x="3.8966%" y="805" width="0.1934%" height="15" fill="rgb(248,9,4)" fg:x="14205" fg:w="705"/><text x="4.1466%" y="815.50"></text></g><g><title>[unknown] (631 samples, 0.17%)</title><rect x="3.9169%" y="789" width="0.1731%" height="15" fill="rgb(210,31,22)" fg:x="14279" fg:w="631"/><text x="4.1669%" y="799.50"></text></g><g><title>[unknown] (468 samples, 0.13%)</title><rect x="3.9617%" y="773" width="0.1284%" height="15" fill="rgb(239,54,39)" fg:x="14442" fg:w="468"/><text x="4.2117%" y="783.50"></text></g><g><title>[unknown] (291 samples, 0.08%)</title><rect x="4.0102%" y="757" width="0.0798%" height="15" fill="rgb(230,99,41)" fg:x="14619" fg:w="291"/><text x="4.2602%" y="767.50"></text></g><g><title>[unknown] (238 samples, 0.07%)</title><rect x="4.0247%" y="741" width="0.0653%" height="15" fill="rgb(253,106,12)" fg:x="14672" fg:w="238"/><text x="4.2747%" y="751.50"></text></g><g><title>[unknown] (131 samples, 0.04%)</title><rect x="4.0541%" y="725" width="0.0359%" height="15" fill="rgb(213,46,41)" fg:x="14779" fg:w="131"/><text x="4.3041%" y="735.50"></text></g><g><title>[unknown] (74 samples, 0.02%)</title><rect x="4.0697%" y="709" width="0.0203%" height="15" fill="rgb(215,133,35)" fg:x="14836" fg:w="74"/><text x="4.3197%" y="719.50"></text></g><g><title>mio::poll::Poll::poll (1,384 samples, 0.38%)</title><rect x="3.7224%" y="965" width="0.3797%" height="15" fill="rgb(213,28,5)" fg:x="13570" fg:w="1384"/><text x="3.9724%" y="975.50"></text></g><g><title>epoll_wait (1,313 samples, 0.36%)</title><rect x="3.7419%" y="949" width="0.3602%" height="15" fill="rgb(215,77,49)" fg:x="13641" fg:w="1313"/><text x="3.9919%" y="959.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::wake (42 samples, 0.01%)</title><rect x="4.1021%" y="965" width="0.0115%" height="15" fill="rgb(248,100,22)" fg:x="14954" fg:w="42"/><text x="4.3521%" y="975.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (40 samples, 0.01%)</title><rect x="4.1026%" y="949" width="0.0110%" height="15" fill="rgb(208,67,9)" fg:x="14956" fg:w="40"/><text x="4.3526%" y="959.50"></text></g><g><title>tokio::runtime::io::Driver::turn (1,508 samples, 0.41%)</title><rect x="3.7002%" y="981" width="0.4137%" height="15" fill="rgb(219,133,21)" fg:x="13489" fg:w="1508"/><text x="3.9502%" y="991.50"></text></g><g><title>tokio::runtime::scheduler::current_thread::Context::park (2,645 samples, 0.73%)</title><rect x="3.3946%" y="1013" width="0.7256%" height="15" fill="rgb(246,46,29)" fg:x="12375" fg:w="2645"/><text x="3.6446%" y="1023.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal (1,824 samples, 0.50%)</title><rect x="3.6199%" y="997" width="0.5003%" height="15" fill="rgb(246,185,52)" fg:x="13196" fg:w="1824"/><text x="3.8699%" y="1007.50"></text></g><g><title>__GI___clone (9,213 samples, 2.53%)</title><rect x="1.6001%" y="1141" width="2.5273%" height="15" fill="rgb(252,136,11)" fg:x="5833" fg:w="9213"/><text x="1.8501%" y="1151.50">__..</text></g><g><title>start_thread (9,213 samples, 2.53%)</title><rect x="1.6001%" y="1125" width="2.5273%" height="15" fill="rgb(219,138,53)" fg:x="5833" fg:w="9213"/><text x="1.8501%" y="1135.50">st..</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (9,213 samples, 2.53%)</title><rect x="1.6001%" y="1109" width="2.5273%" height="15" fill="rgb(211,51,23)" fg:x="5833" fg:w="9213"/><text x="1.8501%" y="1119.50">st..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (9,213 samples, 2.53%)</title><rect x="1.6001%" y="1093" width="2.5273%" height="15" fill="rgb(247,221,28)" fg:x="5833" fg:w="9213"/><text x="1.8501%" y="1103.50">&lt;a..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (9,213 samples, 2.53%)</title><rect x="1.6001%" y="1077" width="2.5273%" height="15" fill="rgb(251,222,45)" fg:x="5833" fg:w="9213"/><text x="1.8501%" y="1087.50">&lt;a..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (9,213 samples, 2.53%)</title><rect x="1.6001%" y="1061" width="2.5273%" height="15" fill="rgb(217,162,53)" fg:x="5833" fg:w="9213"/><text x="1.8501%" y="1071.50">co..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (9,213 samples, 2.53%)</title><rect x="1.6001%" y="1045" width="2.5273%" height="15" fill="rgb(229,93,14)" fg:x="5833" fg:w="9213"/><text x="1.8501%" y="1055.50">st..</text></g><g><title>tokio::runtime::runtime::Runtime::block_on (9,213 samples, 2.53%)</title><rect x="1.6001%" y="1029" width="2.5273%" height="15" fill="rgb(209,67,49)" fg:x="5833" fg:w="9213"/><text x="1.8501%" y="1039.50">to..</text></g><g><title>__vdso_clock_gettime (45 samples, 0.01%)</title><rect x="4.1306%" y="1141" width="0.0123%" height="15" fill="rgb(213,87,29)" fg:x="15058" fg:w="45"/><text x="4.3806%" y="1151.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (57 samples, 0.02%)</title><rect x="4.1490%" y="1141" width="0.0156%" height="15" fill="rgb(205,151,52)" fg:x="15125" fg:w="57"/><text x="4.3990%" y="1151.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (53 samples, 0.01%)</title><rect x="4.1674%" y="1141" width="0.0145%" height="15" fill="rgb(253,215,39)" fg:x="15192" fg:w="53"/><text x="4.4174%" y="1151.50"></text></g><g><title>actix-server_wo (15,221 samples, 4.18%)</title><rect x="0.0107%" y="1157" width="4.1753%" height="15" fill="rgb(221,220,41)" fg:x="39" fg:w="15221"/><text x="0.2607%" y="1167.50">actix..</text></g><g><title>[unknown] (51 samples, 0.01%)</title><rect x="4.1885%" y="1141" width="0.0140%" height="15" fill="rgb(218,133,21)" fg:x="15269" fg:w="51"/><text x="4.4385%" y="1151.50"></text></g><g><title>[unknown] (81 samples, 0.02%)</title><rect x="4.2025%" y="1125" width="0.0222%" height="15" fill="rgb(221,193,43)" fg:x="15320" fg:w="81"/><text x="4.4525%" y="1135.50"></text></g><g><title>[unknown] (81 samples, 0.02%)</title><rect x="4.2025%" y="1109" width="0.0222%" height="15" fill="rgb(240,128,52)" fg:x="15320" fg:w="81"/><text x="4.4525%" y="1119.50"></text></g><g><title>[unknown] (79 samples, 0.02%)</title><rect x="4.2030%" y="1093" width="0.0217%" height="15" fill="rgb(253,114,12)" fg:x="15322" fg:w="79"/><text x="4.4530%" y="1103.50"></text></g><g><title>[unknown] (75 samples, 0.02%)</title><rect x="4.2041%" y="1077" width="0.0206%" height="15" fill="rgb(215,223,47)" fg:x="15326" fg:w="75"/><text x="4.4541%" y="1087.50"></text></g><g><title>[unknown] (75 samples, 0.02%)</title><rect x="4.2041%" y="1061" width="0.0206%" height="15" fill="rgb(248,225,23)" fg:x="15326" fg:w="75"/><text x="4.4541%" y="1071.50"></text></g><g><title>[unknown] (74 samples, 0.02%)</title><rect x="4.2044%" y="1045" width="0.0203%" height="15" fill="rgb(250,108,0)" fg:x="15327" fg:w="74"/><text x="4.4544%" y="1055.50"></text></g><g><title>[unknown] (73 samples, 0.02%)</title><rect x="4.2047%" y="1029" width="0.0200%" height="15" fill="rgb(228,208,7)" fg:x="15328" fg:w="73"/><text x="4.4547%" y="1039.50"></text></g><g><title>[unknown] (73 samples, 0.02%)</title><rect x="4.2047%" y="1013" width="0.0200%" height="15" fill="rgb(244,45,10)" fg:x="15328" fg:w="73"/><text x="4.4547%" y="1023.50"></text></g><g><title>__GI___clone (86 samples, 0.02%)</title><rect x="4.2025%" y="1141" width="0.0236%" height="15" fill="rgb(207,125,25)" fg:x="15320" fg:w="86"/><text x="4.4525%" y="1151.50"></text></g><g><title>stream-book (140 samples, 0.04%)</title><rect x="4.1880%" y="1157" width="0.0384%" height="15" fill="rgb(210,195,18)" fg:x="15267" fg:w="140"/><text x="4.4380%" y="1167.50"></text></g><g><title>&lt;bytes::buf::chain::Chain&lt;T,U&gt; as bytes::buf::buf_impl::Buf&gt;::advance (117 samples, 0.03%)</title><rect x="4.2264%" y="1141" width="0.0321%" height="15" fill="rgb(249,80,12)" fg:x="15407" fg:w="117"/><text x="4.4764%" y="1151.50"></text></g><g><title>h2::proto::streams::prioritize::Prioritize::queue_frame (64 samples, 0.02%)</title><rect x="4.2634%" y="1125" width="0.0176%" height="15" fill="rgb(221,65,9)" fg:x="15542" fg:w="64"/><text x="4.5134%" y="1135.50"></text></g><g><title>h2::proto::streams::prioritize::Prioritize::try_assign_capacity (55 samples, 0.02%)</title><rect x="4.2810%" y="1125" width="0.0151%" height="15" fill="rgb(235,49,36)" fg:x="15606" fg:w="55"/><text x="4.5310%" y="1135.50"></text></g><g><title>h2::proto::streams::store::Queue&lt;N&gt;::push (45 samples, 0.01%)</title><rect x="4.2960%" y="1125" width="0.0123%" height="15" fill="rgb(225,32,20)" fg:x="15661" fg:w="45"/><text x="4.5460%" y="1135.50"></text></g><g><title>&lt;tokio_util::codec::framed_impl::FramedImpl&lt;T,U,R&gt; as futures_core::stream::Stream&gt;::poll_next::CALLSITE (174 samples, 0.05%)</title><rect x="4.2634%" y="1141" width="0.0477%" height="15" fill="rgb(215,141,46)" fg:x="15542" fg:w="174"/><text x="4.5134%" y="1151.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (44 samples, 0.01%)</title><rect x="4.3136%" y="1125" width="0.0121%" height="15" fill="rgb(250,160,47)" fg:x="15725" fg:w="44"/><text x="4.5636%" y="1135.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (80 samples, 0.02%)</title><rect x="4.3416%" y="1125" width="0.0219%" height="15" fill="rgb(216,222,40)" fg:x="15827" fg:w="80"/><text x="4.5916%" y="1135.50"></text></g><g><title>&lt;hyper::server::server::new_svc::NewSvcTask&lt;I,N,S,E,W&gt; as core::future::future::Future&gt;::poll (39 samples, 0.01%)</title><rect x="4.3794%" y="1125" width="0.0107%" height="15" fill="rgb(234,217,39)" fg:x="15965" fg:w="39"/><text x="4.6294%" y="1135.50"></text></g><g><title>&lt;stream_book::grpc_routes::grpc_impl::StreamBookAggregator as stream_book::grpc_routes::grpc_impl::order_book_proto::orderbook_aggregator_server::OrderbookAggregator&gt;::book_summary::_{{closure}}::_{{closure}} (144 samples, 0.04%)</title><rect x="4.3945%" y="1125" width="0.0395%" height="15" fill="rgb(207,178,40)" fg:x="16020" fg:w="144"/><text x="4.6445%" y="1135.50"></text></g><g><title>&lt;tower::util::map_future::MapFuture&lt;S,F&gt; as tower_service::Service&lt;R&gt;&gt;::poll_ready (47 samples, 0.01%)</title><rect x="4.4450%" y="1125" width="0.0129%" height="15" fill="rgb(221,136,13)" fg:x="16204" fg:w="47"/><text x="4.6950%" y="1135.50"></text></g><g><title>bytes::bytes_mut::BytesMut::set_start (55 samples, 0.02%)</title><rect x="4.4993%" y="1125" width="0.0151%" height="15" fill="rgb(249,199,10)" fg:x="16402" fg:w="55"/><text x="4.7493%" y="1135.50"></text></g><g><title>bytes::bytes_mut::BytesMut::split_to (45 samples, 0.01%)</title><rect x="4.5144%" y="1125" width="0.0123%" height="15" fill="rgb(249,222,13)" fg:x="16457" fg:w="45"/><text x="4.7644%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Span&gt; (90 samples, 0.02%)</title><rect x="4.5344%" y="1125" width="0.0247%" height="15" fill="rgb(244,185,38)" fg:x="16530" fg:w="90"/><text x="4.7844%" y="1135.50"></text></g><g><title>h2::proto::connection::Connection&lt;T,P,B&gt;::poll2 (231 samples, 0.06%)</title><rect x="4.5673%" y="1125" width="0.0634%" height="15" fill="rgb(236,202,9)" fg:x="16650" fg:w="231"/><text x="4.8173%" y="1135.50"></text></g><g><title>h2::proto::settings::Settings::poll_send (85 samples, 0.02%)</title><rect x="4.6373%" y="1125" width="0.0233%" height="15" fill="rgb(250,229,37)" fg:x="16905" fg:w="85"/><text x="4.8873%" y="1135.50"></text></g><g><title>h2::proto::streams::store::Queue&lt;N&gt;::pop (43 samples, 0.01%)</title><rect x="4.6672%" y="1125" width="0.0118%" height="15" fill="rgb(206,174,23)" fg:x="17014" fg:w="43"/><text x="4.9172%" y="1135.50"></text></g><g><title>h2::proto::streams::streams::Streams&lt;B,P&gt;::clear_expired_reset_streams (97 samples, 0.03%)</title><rect x="4.6798%" y="1125" width="0.0266%" height="15" fill="rgb(211,33,43)" fg:x="17060" fg:w="97"/><text x="4.9298%" y="1135.50"></text></g><g><title>h2::proto::streams::streams::Streams&lt;B,P&gt;::poll_complete (112 samples, 0.03%)</title><rect x="4.7072%" y="1125" width="0.0307%" height="15" fill="rgb(245,58,50)" fg:x="17160" fg:w="112"/><text x="4.9572%" y="1135.50"></text></g><g><title>h2::proto::streams::streams::Streams&lt;B,P&gt;::send_pending_refusal (82 samples, 0.02%)</title><rect x="4.7380%" y="1125" width="0.0225%" height="15" fill="rgb(244,68,36)" fg:x="17272" fg:w="82"/><text x="4.9880%" y="1135.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (161 samples, 0.04%)</title><rect x="4.7865%" y="1125" width="0.0442%" height="15" fill="rgb(232,229,15)" fg:x="17449" fg:w="161"/><text x="5.0365%" y="1135.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (43 samples, 0.01%)</title><rect x="4.8307%" y="1125" width="0.0118%" height="15" fill="rgb(254,30,23)" fg:x="17610" fg:w="43"/><text x="5.0807%" y="1135.50"></text></g><g><title>tokio::process::imp::orphan::OrphanQueueImpl&lt;T&gt;::reap_orphans (46 samples, 0.01%)</title><rect x="4.8425%" y="1125" width="0.0126%" height="15" fill="rgb(235,160,14)" fg:x="17653" fg:w="46"/><text x="5.0925%" y="1135.50"></text></g><g><title>tokio::runtime::io::Driver::turn (279 samples, 0.08%)</title><rect x="4.8603%" y="1125" width="0.0765%" height="15" fill="rgb(212,155,44)" fg:x="17718" fg:w="279"/><text x="5.1103%" y="1135.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (69 samples, 0.02%)</title><rect x="4.9396%" y="1125" width="0.0189%" height="15" fill="rgb(226,2,50)" fg:x="18007" fg:w="69"/><text x="5.1896%" y="1135.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::wake (47 samples, 0.01%)</title><rect x="4.9585%" y="1125" width="0.0129%" height="15" fill="rgb(234,177,6)" fg:x="18076" fg:w="47"/><text x="5.2085%" y="1135.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::transition_worker_to_parked (38 samples, 0.01%)</title><rect x="4.9714%" y="1125" width="0.0104%" height="15" fill="rgb(217,24,9)" fg:x="18123" fg:w="38"/><text x="5.2214%" y="1135.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (149 samples, 0.04%)</title><rect x="5.0235%" y="1125" width="0.0409%" height="15" fill="rgb(220,13,46)" fg:x="18313" fg:w="149"/><text x="5.2735%" y="1135.50"></text></g><g><title>tokio::runtime::signal::Driver::process (39 samples, 0.01%)</title><rect x="5.0644%" y="1125" width="0.0107%" height="15" fill="rgb(239,221,27)" fg:x="18462" fg:w="39"/><text x="5.3144%" y="1135.50"></text></g><g><title>tokio::runtime::task::core::TaskIdGuard::enter (48 samples, 0.01%)</title><rect x="5.0751%" y="1125" width="0.0132%" height="15" fill="rgb(222,198,25)" fg:x="18501" fg:w="48"/><text x="5.3251%" y="1135.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (190 samples, 0.05%)</title><rect x="5.0883%" y="1125" width="0.0521%" height="15" fill="rgb(211,99,13)" fg:x="18549" fg:w="190"/><text x="5.3383%" y="1135.50"></text></g><g><title>tokio::runtime::task::raw::schedule (82 samples, 0.02%)</title><rect x="5.1404%" y="1125" width="0.0225%" height="15" fill="rgb(232,111,31)" fg:x="18739" fg:w="82"/><text x="5.3904%" y="1135.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time (57 samples, 0.02%)</title><rect x="5.1675%" y="1125" width="0.0156%" height="15" fill="rgb(245,82,37)" fg:x="18838" fg:w="57"/><text x="5.4175%" y="1135.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal (72 samples, 0.02%)</title><rect x="5.1832%" y="1125" width="0.0198%" height="15" fill="rgb(227,149,46)" fg:x="18895" fg:w="72"/><text x="5.4332%" y="1135.50"></text></g><g><title>[[heap]] (3,354 samples, 0.92%)</title><rect x="4.3120%" y="1141" width="0.9201%" height="15" fill="rgb(218,36,50)" fg:x="15719" fg:w="3354"/><text x="4.5620%" y="1151.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (150 samples, 0.04%)</title><rect x="5.2323%" y="1125" width="0.0411%" height="15" fill="rgb(226,80,48)" fg:x="19074" fg:w="150"/><text x="5.4823%" y="1135.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (40 samples, 0.01%)</title><rect x="5.2734%" y="1125" width="0.0110%" height="15" fill="rgb(238,224,15)" fg:x="19224" fg:w="40"/><text x="5.5234%" y="1135.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (74 samples, 0.02%)</title><rect x="5.2943%" y="1125" width="0.0203%" height="15" fill="rgb(241,136,10)" fg:x="19300" fg:w="74"/><text x="5.5443%" y="1135.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (183 samples, 0.05%)</title><rect x="5.3146%" y="1125" width="0.0502%" height="15" fill="rgb(208,32,45)" fg:x="19374" fg:w="183"/><text x="5.5646%" y="1135.50"></text></g><g><title>std::sys_common::net::TcpStream::write (67 samples, 0.02%)</title><rect x="5.3464%" y="1109" width="0.0184%" height="15" fill="rgb(207,135,9)" fg:x="19490" fg:w="67"/><text x="5.5964%" y="1119.50"></text></g><g><title>&lt;T as futures_util::fns::FnMut1&lt;A&gt;&gt;::call_mut (106 samples, 0.03%)</title><rect x="5.3650%" y="1125" width="0.0291%" height="15" fill="rgb(206,86,44)" fg:x="19558" fg:w="106"/><text x="5.6150%" y="1135.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (290 samples, 0.08%)</title><rect x="5.3941%" y="1125" width="0.0796%" height="15" fill="rgb(245,177,15)" fg:x="19664" fg:w="290"/><text x="5.6441%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (260 samples, 0.07%)</title><rect x="5.4737%" y="1125" width="0.0713%" height="15" fill="rgb(206,64,50)" fg:x="19954" fg:w="260"/><text x="5.7237%" y="1135.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (38 samples, 0.01%)</title><rect x="5.5450%" y="1125" width="0.0104%" height="15" fill="rgb(234,36,40)" fg:x="20214" fg:w="38"/><text x="5.7950%" y="1135.50"></text></g><g><title>&lt;futures_util::stream::unfold::Unfold&lt;T,F,Fut&gt; as futures_core::stream::Stream&gt;::poll_next (82 samples, 0.02%)</title><rect x="5.5612%" y="1125" width="0.0225%" height="15" fill="rgb(213,64,8)" fg:x="20273" fg:w="82"/><text x="5.8112%" y="1135.50"></text></g><g><title>&lt;h2::codec::framed_read::FramedRead&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (155 samples, 0.04%)</title><rect x="5.5837%" y="1125" width="0.0425%" height="15" fill="rgb(210,75,36)" fg:x="20355" fg:w="155"/><text x="5.8337%" y="1135.50"></text></g><g><title>&lt;h2::proto::streams::store::Ptr as core::ops::deref::Deref&gt;::deref (38 samples, 0.01%)</title><rect x="5.6265%" y="1125" width="0.0104%" height="15" fill="rgb(229,88,21)" fg:x="20511" fg:w="38"/><text x="5.8765%" y="1135.50"></text></g><g><title>&lt;http_body::combinators::map_err::MapErr&lt;B,F&gt; as http_body::Body&gt;::poll_data (319 samples, 0.09%)</title><rect x="5.6388%" y="1125" width="0.0875%" height="15" fill="rgb(252,204,47)" fg:x="20556" fg:w="319"/><text x="5.8888%" y="1135.50"></text></g><g><title>&lt;hyper::common::io::rewind::Rewind&lt;T&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (140 samples, 0.04%)</title><rect x="5.7263%" y="1125" width="0.0384%" height="15" fill="rgb(208,77,27)" fg:x="20875" fg:w="140"/><text x="5.9763%" y="1135.50"></text></g><g><title>&lt;hyper::proto::h2::PipeToSendStream&lt;S&gt; as core::future::future::Future&gt;::poll (164 samples, 0.04%)</title><rect x="5.7647%" y="1125" width="0.0450%" height="15" fill="rgb(221,76,26)" fg:x="21015" fg:w="164"/><text x="6.0147%" y="1135.50"></text></g><g><title>&lt;hyper::proto::h2::server::H2Stream&lt;F,B&gt; as core::future::future::Future&gt;::poll (67 samples, 0.02%)</title><rect x="5.8097%" y="1125" width="0.0184%" height="15" fill="rgb(225,139,18)" fg:x="21179" fg:w="67"/><text x="6.0597%" y="1135.50"></text></g><g><title>&lt;hyper::proto::h2::server::Server&lt;T,S,B,E&gt; as core::future::future::Future&gt;::poll (111 samples, 0.03%)</title><rect x="5.8281%" y="1125" width="0.0304%" height="15" fill="rgb(230,137,11)" fg:x="21246" fg:w="111"/><text x="6.0781%" y="1135.50"></text></g><g><title>&lt;hyper::server::conn::upgrades::UpgradeableConnection&lt;I,S,E&gt; as core::future::future::Future&gt;::poll (124 samples, 0.03%)</title><rect x="5.8585%" y="1125" width="0.0340%" height="15" fill="rgb(212,28,1)" fg:x="21357" fg:w="124"/><text x="6.1085%" y="1135.50"></text></g><g><title>&lt;hyper::server::server::new_svc::NewSvcTask&lt;I,N,S,E,W&gt; as core::future::future::Future&gt;::poll (58 samples, 0.02%)</title><rect x="5.8926%" y="1125" width="0.0159%" height="15" fill="rgb(248,164,17)" fg:x="21481" fg:w="58"/><text x="6.1426%" y="1135.50"></text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_write::AsyncWrite&gt;::poll_write (38 samples, 0.01%)</title><rect x="5.9285%" y="1125" width="0.0104%" height="15" fill="rgb(222,171,42)" fg:x="21612" fg:w="38"/><text x="6.1785%" y="1135.50"></text></g><g><title>&lt;tokio::runtime::task::core::TaskIdGuard as core::ops::drop::Drop&gt;::drop (80 samples, 0.02%)</title><rect x="5.9392%" y="1125" width="0.0219%" height="15" fill="rgb(243,84,45)" fg:x="21651" fg:w="80"/><text x="6.1892%" y="1135.50"></text></g><g><title>&lt;tokio::sync::batch_semaphore::Acquire as core::future::future::Future&gt;::poll (93 samples, 0.03%)</title><rect x="5.9611%" y="1125" width="0.0255%" height="15" fill="rgb(252,49,23)" fg:x="21731" fg:w="93"/><text x="6.2111%" y="1135.50"></text></g><g><title>&lt;tokio::sync::batch_semaphore::Acquire as core::ops::drop::Drop&gt;::drop (54 samples, 0.01%)</title><rect x="5.9866%" y="1125" width="0.0148%" height="15" fill="rgb(215,19,7)" fg:x="21824" fg:w="54"/><text x="6.2366%" y="1135.50"></text></g><g><title>&lt;tokio_util::codec::framed_impl::FramedImpl&lt;T,U,R&gt; as futures_core::stream::Stream&gt;::poll_next (133 samples, 0.04%)</title><rect x="6.0067%" y="1125" width="0.0365%" height="15" fill="rgb(238,81,41)" fg:x="21897" fg:w="133"/><text x="6.2567%" y="1135.50"></text></g><g><title>h2::proto::streams::prioritize::Prioritize::queue_frame (65 samples, 0.02%)</title><rect x="6.0431%" y="1109" width="0.0178%" height="15" fill="rgb(210,199,37)" fg:x="22030" fg:w="65"/><text x="6.2931%" y="1119.50"></text></g><g><title>&lt;tokio_util::codec::framed_impl::FramedImpl&lt;T,U,R&gt; as futures_core::stream::Stream&gt;::poll_next::CALLSITE (80 samples, 0.02%)</title><rect x="6.0431%" y="1125" width="0.0219%" height="15" fill="rgb(244,192,49)" fg:x="22030" fg:w="80"/><text x="6.2931%" y="1135.50"></text></g><g><title>&lt;tokio_util::codec::length_delimited::LengthDelimitedCodec as tokio_util::codec::decoder::Decoder&gt;::decode (128 samples, 0.04%)</title><rect x="6.0651%" y="1125" width="0.0351%" height="15" fill="rgb(226,211,11)" fg:x="22110" fg:w="128"/><text x="6.3151%" y="1135.50"></text></g><g><title>&lt;tonic::codec::encode::EncodeBody&lt;S&gt; as http_body::Body&gt;::poll_data (122 samples, 0.03%)</title><rect x="6.1002%" y="1125" width="0.0335%" height="15" fill="rgb(236,162,54)" fg:x="22238" fg:w="122"/><text x="6.3502%" y="1135.50"></text></g><g><title>&lt;tower::util::either::Either&lt;A,B&gt; as tower_service::Service&lt;Request&gt;&gt;::poll_ready (84 samples, 0.02%)</title><rect x="6.1337%" y="1125" width="0.0230%" height="15" fill="rgb(220,229,9)" fg:x="22360" fg:w="84"/><text x="6.3837%" y="1135.50"></text></g><g><title>__GI___libc_free (63 samples, 0.02%)</title><rect x="6.1699%" y="1125" width="0.0173%" height="15" fill="rgb(250,87,22)" fg:x="22492" fg:w="63"/><text x="6.4199%" y="1135.50"></text></g><g><title>__GI___libc_malloc (53 samples, 0.01%)</title><rect x="6.1872%" y="1125" width="0.0145%" height="15" fill="rgb(239,43,17)" fg:x="22555" fg:w="53"/><text x="6.4372%" y="1135.50"></text></g><g><title>__memmove_avx_unaligned_erms (351 samples, 0.10%)</title><rect x="6.2206%" y="1125" width="0.0963%" height="15" fill="rgb(231,177,25)" fg:x="22677" fg:w="351"/><text x="6.4706%" y="1135.50"></text></g><g><title>_int_free (395 samples, 0.11%)</title><rect x="6.3243%" y="1125" width="0.1084%" height="15" fill="rgb(219,179,1)" fg:x="23055" fg:w="395"/><text x="6.5743%" y="1135.50"></text></g><g><title>_int_malloc (345 samples, 0.09%)</title><rect x="6.4327%" y="1125" width="0.0946%" height="15" fill="rgb(238,219,53)" fg:x="23450" fg:w="345"/><text x="6.6827%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (110 samples, 0.03%)</title><rect x="6.5449%" y="1125" width="0.0302%" height="15" fill="rgb(232,167,36)" fg:x="23859" fg:w="110"/><text x="6.7949%" y="1135.50"></text></g><g><title>alloc::raw_vec::finish_grow (39 samples, 0.01%)</title><rect x="6.5750%" y="1125" width="0.0107%" height="15" fill="rgb(244,19,51)" fg:x="23969" fg:w="39"/><text x="6.8250%" y="1135.50"></text></g><g><title>bytes::buf::buf_mut::BufMut::put_slice (447 samples, 0.12%)</title><rect x="6.5868%" y="1125" width="0.1226%" height="15" fill="rgb(224,6,22)" fg:x="24012" fg:w="447"/><text x="6.8368%" y="1135.50"></text></g><g><title>bytes::buf::uninit_slice::UninitSlice::from_slice (2,061 samples, 0.57%)</title><rect x="6.7095%" y="1125" width="0.5654%" height="15" fill="rgb(224,145,5)" fg:x="24459" fg:w="2061"/><text x="6.9595%" y="1135.50"></text></g><g><title>bytes::bytes_mut::BytesMut::split_to (85 samples, 0.02%)</title><rect x="7.2836%" y="1125" width="0.0233%" height="15" fill="rgb(234,130,49)" fg:x="26552" fg:w="85"/><text x="7.5336%" y="1135.50"></text></g><g><title>core::fmt::Formatter::write_formatted_parts (38 samples, 0.01%)</title><rect x="7.3124%" y="1125" width="0.0104%" height="15" fill="rgb(254,6,2)" fg:x="26657" fg:w="38"/><text x="7.5624%" y="1135.50"></text></g><g><title>core::fmt::float::float_to_decimal_common_shortest (39 samples, 0.01%)</title><rect x="7.3228%" y="1125" width="0.0107%" height="15" fill="rgb(208,96,46)" fg:x="26695" fg:w="39"/><text x="7.5728%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;stream_book::grpc_routes::grpc_impl::StreamBookAggregator as stream_book::grpc_routes::grpc_impl::order_book_proto::orderbook_aggregator_server::OrderbookAggregator&gt;::book_summary::{{closure}}::{{closure}}::{{closure}}&gt; (53 samples, 0.01%)</title><rect x="7.3525%" y="1125" width="0.0145%" height="15" fill="rgb(239,3,39)" fg:x="26803" fg:w="53"/><text x="7.6025%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::mpsc::bounded::Sender&lt;core::result::Result&lt;stream_book::grpc_routes::grpc_impl::order_book_proto::Summary,tonic::status::Status&gt;&gt;::send::{{closure}}&gt; (50 samples, 0.01%)</title><rect x="7.3670%" y="1125" width="0.0137%" height="15" fill="rgb(233,210,1)" fg:x="26856" fg:w="50"/><text x="7.6170%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Span&gt; (181 samples, 0.05%)</title><rect x="7.3807%" y="1125" width="0.0497%" height="15" fill="rgb(244,137,37)" fg:x="26906" fg:w="181"/><text x="7.6307%" y="1135.50"></text></g><g><title>h2::codec::framed_write::FramedWrite&lt;T,B&gt;::flush (76 samples, 0.02%)</title><rect x="7.4400%" y="1125" width="0.0208%" height="15" fill="rgb(240,136,2)" fg:x="27122" fg:w="76"/><text x="7.6900%" y="1135.50"></text></g><g><title>h2::proto::connection::Connection&lt;T,P,B&gt;::poll (107 samples, 0.03%)</title><rect x="7.4619%" y="1125" width="0.0294%" height="15" fill="rgb(239,18,37)" fg:x="27202" fg:w="107"/><text x="7.7119%" y="1135.50"></text></g><g><title>h2::proto::ping_pong::PingPong::send_pending_pong (80 samples, 0.02%)</title><rect x="7.4970%" y="1125" width="0.0219%" height="15" fill="rgb(218,185,22)" fg:x="27330" fg:w="80"/><text x="7.7470%" y="1135.50"></text></g><g><title>h2::proto::streams::counts::Counts::transition (174 samples, 0.05%)</title><rect x="7.5220%" y="1125" width="0.0477%" height="15" fill="rgb(225,218,4)" fg:x="27421" fg:w="174"/><text x="7.7720%" y="1135.50"></text></g><g><title>h2::proto::streams::counts::Counts::transition_after (83 samples, 0.02%)</title><rect x="7.5697%" y="1125" width="0.0228%" height="15" fill="rgb(230,182,32)" fg:x="27595" fg:w="83"/><text x="7.8197%" y="1135.50"></text></g><g><title>h2::proto::streams::flow_control::FlowControl::send_data (93 samples, 0.03%)</title><rect x="7.6026%" y="1125" width="0.0255%" height="15" fill="rgb(242,56,43)" fg:x="27715" fg:w="93"/><text x="7.8526%" y="1135.50"></text></g><g><title>h2::proto::streams::prioritize::Prioritize::recv_connection_window_update (55 samples, 0.02%)</title><rect x="7.6366%" y="1125" width="0.0151%" height="15" fill="rgb(233,99,24)" fg:x="27839" fg:w="55"/><text x="7.8866%" y="1135.50"></text></g><g><title>h2::proto::streams::prioritize::Prioritize::recv_stream_window_update (57 samples, 0.02%)</title><rect x="7.6517%" y="1125" width="0.0156%" height="15" fill="rgb(234,209,42)" fg:x="27894" fg:w="57"/><text x="7.9017%" y="1135.50"></text></g><g><title>h2::proto::streams::prioritize::Prioritize::reserve_capacity (82 samples, 0.02%)</title><rect x="7.6674%" y="1125" width="0.0225%" height="15" fill="rgb(227,7,12)" fg:x="27951" fg:w="82"/><text x="7.9174%" y="1135.50"></text></g><g><title>h2::proto::streams::prioritize::Prioritize::schedule_send (77 samples, 0.02%)</title><rect x="7.6956%" y="1125" width="0.0211%" height="15" fill="rgb(245,203,43)" fg:x="28054" fg:w="77"/><text x="7.9456%" y="1135.50"></text></g><g><title>h2::proto::streams::prioritize::Prioritize::send_data (262 samples, 0.07%)</title><rect x="7.7167%" y="1125" width="0.0719%" height="15" fill="rgb(238,205,33)" fg:x="28131" fg:w="262"/><text x="7.9667%" y="1135.50"></text></g><g><title>h2::proto::streams::recv::Recv::next_incoming (87 samples, 0.02%)</title><rect x="7.7919%" y="1125" width="0.0239%" height="15" fill="rgb(231,56,7)" fg:x="28405" fg:w="87"/><text x="8.0419%" y="1135.50"></text></g><g><title>h2::proto::streams::send::Send::capacity (41 samples, 0.01%)</title><rect x="7.8160%" y="1125" width="0.0112%" height="15" fill="rgb(244,186,29)" fg:x="28493" fg:w="41"/><text x="8.0660%" y="1135.50"></text></g><g><title>h2::proto::streams::state::State::ensure_reason (53 samples, 0.01%)</title><rect x="7.8479%" y="1125" width="0.0145%" height="15" fill="rgb(234,111,31)" fg:x="28609" fg:w="53"/><text x="8.0979%" y="1135.50"></text></g><g><title>h2::proto::streams::store::Queue&lt;N&gt;::pop (112 samples, 0.03%)</title><rect x="7.8630%" y="1125" width="0.0307%" height="15" fill="rgb(241,149,10)" fg:x="28664" fg:w="112"/><text x="8.1130%" y="1135.50"></text></g><g><title>h2::proto::streams::stream::Stream::send_data (97 samples, 0.03%)</title><rect x="7.9096%" y="1125" width="0.0266%" height="15" fill="rgb(249,206,44)" fg:x="28834" fg:w="97"/><text x="8.1596%" y="1135.50"></text></g><g><title>h2::proto::streams::streams::StreamRef&lt;B&gt;::poll_reset (116 samples, 0.03%)</title><rect x="7.9362%" y="1125" width="0.0318%" height="15" fill="rgb(251,153,30)" fg:x="28931" fg:w="116"/><text x="8.1862%" y="1135.50"></text></g><g><title>h2::proto::streams::streams::Streams&lt;B,P&gt;::next_incoming (108 samples, 0.03%)</title><rect x="7.9680%" y="1125" width="0.0296%" height="15" fill="rgb(239,152,38)" fg:x="29047" fg:w="108"/><text x="8.2180%" y="1135.50"></text></g><g><title>h2::server::Connection&lt;T,B&gt;::poll_accept (49 samples, 0.01%)</title><rect x="7.9976%" y="1125" width="0.0134%" height="15" fill="rgb(249,139,47)" fg:x="29155" fg:w="49"/><text x="8.2476%" y="1135.50"></text></g><g><title>h2::share::SendStream&lt;B&gt;::capacity (68 samples, 0.02%)</title><rect x="8.0111%" y="1125" width="0.0187%" height="15" fill="rgb(244,64,35)" fg:x="29204" fg:w="68"/><text x="8.2611%" y="1135.50"></text></g><g><title>h2::share::SendStream&lt;B&gt;::poll_capacity (38 samples, 0.01%)</title><rect x="8.0297%" y="1125" width="0.0104%" height="15" fill="rgb(216,46,15)" fg:x="29272" fg:w="38"/><text x="8.2797%" y="1135.50"></text></g><g><title>h2::share::SendStream&lt;B&gt;::reserve_capacity (150 samples, 0.04%)</title><rect x="8.0402%" y="1125" width="0.0411%" height="15" fill="rgb(250,74,19)" fg:x="29310" fg:w="150"/><text x="8.2902%" y="1135.50"></text></g><g><title>h2::share::SendStream&lt;B&gt;::send_data (60 samples, 0.02%)</title><rect x="8.0813%" y="1125" width="0.0165%" height="15" fill="rgb(249,42,33)" fg:x="29460" fg:w="60"/><text x="8.3313%" y="1135.50"></text></g><g><title>prost::encoding::message::encode (1,152 samples, 0.32%)</title><rect x="8.1065%" y="1125" width="0.3160%" height="15" fill="rgb(242,149,17)" fg:x="29552" fg:w="1152"/><text x="8.3565%" y="1135.50"></text></g><g><title>prost::message::Message::encode (137 samples, 0.04%)</title><rect x="8.4226%" y="1125" width="0.0376%" height="15" fill="rgb(244,29,21)" fg:x="30704" fg:w="137"/><text x="8.6726%" y="1135.50"></text></g><g><title>slab::Slab&lt;T&gt;::insert (65 samples, 0.02%)</title><rect x="8.4629%" y="1125" width="0.0178%" height="15" fill="rgb(220,130,37)" fg:x="30851" fg:w="65"/><text x="8.7129%" y="1135.50"></text></g><g><title>syscall (73 samples, 0.02%)</title><rect x="8.4933%" y="1125" width="0.0200%" height="15" fill="rgb(211,67,2)" fg:x="30962" fg:w="73"/><text x="8.7433%" y="1135.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (121 samples, 0.03%)</title><rect x="8.5134%" y="1125" width="0.0332%" height="15" fill="rgb(235,68,52)" fg:x="31035" fg:w="121"/><text x="8.7634%" y="1135.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write (155 samples, 0.04%)</title><rect x="8.5465%" y="1125" width="0.0425%" height="15" fill="rgb(246,142,3)" fg:x="31156" fg:w="155"/><text x="8.7965%" y="1135.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (309 samples, 0.08%)</title><rect x="8.5891%" y="1125" width="0.0848%" height="15" fill="rgb(241,25,7)" fg:x="31311" fg:w="309"/><text x="8.8391%" y="1135.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (72 samples, 0.02%)</title><rect x="8.6738%" y="1125" width="0.0198%" height="15" fill="rgb(242,119,39)" fg:x="31620" fg:w="72"/><text x="8.9238%" y="1135.50"></text></g><g><title>tokio::runtime::context::CONTEXT::__getit (47 samples, 0.01%)</title><rect x="8.6936%" y="1125" width="0.0129%" height="15" fill="rgb(241,98,45)" fg:x="31692" fg:w="47"/><text x="8.9436%" y="1135.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (56 samples, 0.02%)</title><rect x="8.7089%" y="1125" width="0.0154%" height="15" fill="rgb(254,28,30)" fg:x="31748" fg:w="56"/><text x="8.9589%" y="1135.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_local (39 samples, 0.01%)</title><rect x="8.7290%" y="1125" width="0.0107%" height="15" fill="rgb(241,142,54)" fg:x="31821" fg:w="39"/><text x="8.9790%" y="1135.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (229 samples, 0.06%)</title><rect x="8.7622%" y="1125" width="0.0628%" height="15" fill="rgb(222,85,15)" fg:x="31942" fg:w="229"/><text x="9.0122%" y="1135.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (113 samples, 0.03%)</title><rect x="8.8354%" y="1125" width="0.0310%" height="15" fill="rgb(210,85,47)" fg:x="32209" fg:w="113"/><text x="9.0854%" y="1135.50"></text></g><g><title>tokio::sync::mpsc::chan::Rx&lt;T,S&gt;::recv (118 samples, 0.03%)</title><rect x="8.8722%" y="1125" width="0.0324%" height="15" fill="rgb(224,206,25)" fg:x="32343" fg:w="118"/><text x="9.1222%" y="1135.50"></text></g><g><title>tokio::sync::mpsc::list::Tx&lt;T&gt;::push (62 samples, 0.02%)</title><rect x="8.9111%" y="1125" width="0.0170%" height="15" fill="rgb(243,201,19)" fg:x="32485" fg:w="62"/><text x="9.1611%" y="1135.50"></text></g><g><title>tokio::sync::rwlock::RwLock&lt;T&gt;::read::{{closure}} (64 samples, 0.02%)</title><rect x="8.9281%" y="1125" width="0.0176%" height="15" fill="rgb(236,59,4)" fg:x="32547" fg:w="64"/><text x="9.1781%" y="1135.50"></text></g><g><title>tokio_util::util::poll_read_buf (126 samples, 0.03%)</title><rect x="8.9506%" y="1125" width="0.0346%" height="15" fill="rgb(254,179,45)" fg:x="32629" fg:w="126"/><text x="9.2006%" y="1135.50"></text></g><g><title>tonic::codec::encode::finish_encoding (107 samples, 0.03%)</title><rect x="8.9852%" y="1125" width="0.0294%" height="15" fill="rgb(226,14,10)" fg:x="32755" fg:w="107"/><text x="9.2352%" y="1135.50"></text></g><g><title>unlink_chunk (301 samples, 0.08%)</title><rect x="9.0211%" y="1125" width="0.0826%" height="15" fill="rgb(244,27,41)" fg:x="32886" fg:w="301"/><text x="9.2711%" y="1135.50"></text></g><g><title>[anon] (14,119 samples, 3.87%)</title><rect x="5.2320%" y="1141" width="3.8730%" height="15" fill="rgb(235,35,32)" fg:x="19073" fg:w="14119"/><text x="5.4820%" y="1151.50">[ano..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (58 samples, 0.02%)</title><rect x="9.1105%" y="1125" width="0.0159%" height="15" fill="rgb(218,68,31)" fg:x="33212" fg:w="58"/><text x="9.3605%" y="1135.50"></text></g><g><title>[stream-book] (326 samples, 0.09%)</title><rect x="9.1053%" y="1141" width="0.0894%" height="15" fill="rgb(207,120,37)" fg:x="33193" fg:w="326"/><text x="9.3553%" y="1151.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (42 samples, 0.01%)</title><rect x="9.3673%" y="1125" width="0.0115%" height="15" fill="rgb(227,98,0)" fg:x="34148" fg:w="42"/><text x="9.6173%" y="1135.50"></text></g><g><title>&lt;T as futures_util::fns::FnMut1&lt;A&gt;&gt;::call_mut (41 samples, 0.01%)</title><rect x="9.3829%" y="1125" width="0.0112%" height="15" fill="rgb(207,7,3)" fg:x="34205" fg:w="41"/><text x="9.6329%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (167 samples, 0.05%)</title><rect x="9.4619%" y="1045" width="0.0458%" height="15" fill="rgb(206,98,19)" fg:x="34493" fg:w="167"/><text x="9.7119%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (167 samples, 0.05%)</title><rect x="9.4619%" y="1029" width="0.0458%" height="15" fill="rgb(217,5,26)" fg:x="34493" fg:w="167"/><text x="9.7119%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (167 samples, 0.05%)</title><rect x="9.4619%" y="1013" width="0.0458%" height="15" fill="rgb(235,190,38)" fg:x="34493" fg:w="167"/><text x="9.7119%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (167 samples, 0.05%)</title><rect x="9.4619%" y="997" width="0.0458%" height="15" fill="rgb(247,86,24)" fg:x="34493" fg:w="167"/><text x="9.7119%" y="1007.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (167 samples, 0.05%)</title><rect x="9.4619%" y="981" width="0.0458%" height="15" fill="rgb(205,101,16)" fg:x="34493" fg:w="167"/><text x="9.7119%" y="991.50"></text></g><g><title>alloc::alloc::alloc (167 samples, 0.05%)</title><rect x="9.4619%" y="965" width="0.0458%" height="15" fill="rgb(246,168,33)" fg:x="34493" fg:w="167"/><text x="9.7119%" y="975.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (685 samples, 0.19%)</title><rect x="9.4008%" y="1125" width="0.1879%" height="15" fill="rgb(231,114,1)" fg:x="34270" fg:w="685"/><text x="9.6508%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (462 samples, 0.13%)</title><rect x="9.4619%" y="1109" width="0.1267%" height="15" fill="rgb(207,184,53)" fg:x="34493" fg:w="462"/><text x="9.7119%" y="1119.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (462 samples, 0.13%)</title><rect x="9.4619%" y="1093" width="0.1267%" height="15" fill="rgb(224,95,51)" fg:x="34493" fg:w="462"/><text x="9.7119%" y="1103.50"></text></g><g><title>alloc::slice::hack::to_vec (462 samples, 0.13%)</title><rect x="9.4619%" y="1077" width="0.1267%" height="15" fill="rgb(212,188,45)" fg:x="34493" fg:w="462"/><text x="9.7119%" y="1087.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (462 samples, 0.13%)</title><rect x="9.4619%" y="1061" width="0.1267%" height="15" fill="rgb(223,154,38)" fg:x="34493" fg:w="462"/><text x="9.7119%" y="1071.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (295 samples, 0.08%)</title><rect x="9.5077%" y="1045" width="0.0809%" height="15" fill="rgb(251,22,52)" fg:x="34660" fg:w="295"/><text x="9.7577%" y="1055.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (295 samples, 0.08%)</title><rect x="9.5077%" y="1029" width="0.0809%" height="15" fill="rgb(229,209,22)" fg:x="34660" fg:w="295"/><text x="9.7577%" y="1039.50"></text></g><g><title>&lt;bytes::buf::take::Take&lt;T&gt; as bytes::buf::buf_impl::Buf&gt;::advance (173 samples, 0.05%)</title><rect x="9.5947%" y="1125" width="0.0475%" height="15" fill="rgb(234,138,34)" fg:x="34977" fg:w="173"/><text x="9.8447%" y="1135.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::put_slice (111 samples, 0.03%)</title><rect x="9.6422%" y="1125" width="0.0304%" height="15" fill="rgb(212,95,11)" fg:x="35150" fg:w="111"/><text x="9.8922%" y="1135.50"></text></g><g><title>&lt;tower::util::either::Either&lt;A,B&gt; as tower_service::Service&lt;Request&gt;&gt;::poll_ready (151 samples, 0.04%)</title><rect x="9.8419%" y="1029" width="0.0414%" height="15" fill="rgb(240,179,47)" fg:x="35878" fg:w="151"/><text x="10.0919%" y="1039.50"></text></g><g><title>&lt;tower::util::map_future::MapFuture&lt;S,F&gt; as tower_service::Service&lt;R&gt;&gt;::poll_ready (166 samples, 0.05%)</title><rect x="9.8388%" y="1045" width="0.0455%" height="15" fill="rgb(240,163,11)" fg:x="35867" fg:w="166"/><text x="10.0888%" y="1055.50"></text></g><g><title>h2::proto::go_away::GoAway::should_close_on_idle (45 samples, 0.01%)</title><rect x="10.1082%" y="1013" width="0.0123%" height="15" fill="rgb(236,37,12)" fg:x="36849" fg:w="45"/><text x="10.3582%" y="1023.50"></text></g><g><title>h2::proto::streams::flow_control::FlowControl::unclaimed_capacity (84 samples, 0.02%)</title><rect x="10.2725%" y="981" width="0.0230%" height="15" fill="rgb(232,164,16)" fg:x="37448" fg:w="84"/><text x="10.5225%" y="991.50"></text></g><g><title>h2::proto::streams::recv::Recv::poll_complete (180 samples, 0.05%)</title><rect x="10.2542%" y="997" width="0.0494%" height="15" fill="rgb(244,205,15)" fg:x="37381" fg:w="180"/><text x="10.5042%" y="1007.50"></text></g><g><title>syscall (1,099 samples, 0.30%)</title><rect x="10.3120%" y="997" width="0.3015%" height="15" fill="rgb(223,117,47)" fg:x="37592" fg:w="1099"/><text x="10.5620%" y="1007.50"></text></g><g><title>[unknown] (1,075 samples, 0.29%)</title><rect x="10.3186%" y="981" width="0.2949%" height="15" fill="rgb(244,107,35)" fg:x="37616" fg:w="1075"/><text x="10.5686%" y="991.50"></text></g><g><title>[unknown] (1,058 samples, 0.29%)</title><rect x="10.3233%" y="965" width="0.2902%" height="15" fill="rgb(205,140,8)" fg:x="37633" fg:w="1058"/><text x="10.5733%" y="975.50"></text></g><g><title>[unknown] (1,035 samples, 0.28%)</title><rect x="10.3296%" y="949" width="0.2839%" height="15" fill="rgb(228,84,46)" fg:x="37656" fg:w="1035"/><text x="10.5796%" y="959.50"></text></g><g><title>[unknown] (1,024 samples, 0.28%)</title><rect x="10.3326%" y="933" width="0.2809%" height="15" fill="rgb(254,188,9)" fg:x="37667" fg:w="1024"/><text x="10.5826%" y="943.50"></text></g><g><title>[unknown] (998 samples, 0.27%)</title><rect x="10.3397%" y="917" width="0.2738%" height="15" fill="rgb(206,112,54)" fg:x="37693" fg:w="998"/><text x="10.5897%" y="927.50"></text></g><g><title>[unknown] (908 samples, 0.25%)</title><rect x="10.3644%" y="901" width="0.2491%" height="15" fill="rgb(216,84,49)" fg:x="37783" fg:w="908"/><text x="10.6144%" y="911.50"></text></g><g><title>[unknown] (832 samples, 0.23%)</title><rect x="10.3853%" y="885" width="0.2282%" height="15" fill="rgb(214,194,35)" fg:x="37859" fg:w="832"/><text x="10.6353%" y="895.50"></text></g><g><title>[unknown] (755 samples, 0.21%)</title><rect x="10.4064%" y="869" width="0.2071%" height="15" fill="rgb(249,28,3)" fg:x="37936" fg:w="755"/><text x="10.6564%" y="879.50"></text></g><g><title>[unknown] (623 samples, 0.17%)</title><rect x="10.4426%" y="853" width="0.1709%" height="15" fill="rgb(222,56,52)" fg:x="38068" fg:w="623"/><text x="10.6926%" y="863.50"></text></g><g><title>[unknown] (491 samples, 0.13%)</title><rect x="10.4788%" y="837" width="0.1347%" height="15" fill="rgb(245,217,50)" fg:x="38200" fg:w="491"/><text x="10.7288%" y="847.50"></text></g><g><title>[unknown] (215 samples, 0.06%)</title><rect x="10.5545%" y="821" width="0.0590%" height="15" fill="rgb(213,201,24)" fg:x="38476" fg:w="215"/><text x="10.8045%" y="831.50"></text></g><g><title>[unknown] (75 samples, 0.02%)</title><rect x="10.5929%" y="805" width="0.0206%" height="15" fill="rgb(248,116,28)" fg:x="38616" fg:w="75"/><text x="10.8429%" y="815.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (68 samples, 0.02%)</title><rect x="10.6135%" y="997" width="0.0187%" height="15" fill="rgb(219,72,43)" fg:x="38691" fg:w="68"/><text x="10.8635%" y="1007.50"></text></g><g><title>h2::proto::connection::Connection&lt;T,P,B&gt;::poll (2,527 samples, 0.69%)</title><rect x="9.9409%" y="1029" width="0.6932%" height="15" fill="rgb(209,138,14)" fg:x="36239" fg:w="2527"/><text x="10.1909%" y="1039.50"></text></g><g><title>h2::proto::streams::streams::Streams&lt;B,P&gt;::poll_complete (1,872 samples, 0.51%)</title><rect x="10.1206%" y="1013" width="0.5135%" height="15" fill="rgb(222,18,33)" fg:x="36894" fg:w="1872"/><text x="10.3706%" y="1023.50"></text></g><g><title>std::sys::unix::futex::futex_wait (37 samples, 0.01%)</title><rect x="10.6887%" y="997" width="0.0101%" height="15" fill="rgb(213,199,7)" fg:x="38965" fg:w="37"/><text x="10.9387%" y="1007.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock_contended (63 samples, 0.02%)</title><rect x="10.6870%" y="1013" width="0.0173%" height="15" fill="rgb(250,110,10)" fg:x="38959" fg:w="63"/><text x="10.9370%" y="1023.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (3,762 samples, 1.03%)</title><rect x="9.6753%" y="1125" width="1.0320%" height="15" fill="rgb(248,123,6)" fg:x="35271" fg:w="3762"/><text x="9.9253%" y="1135.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (3,668 samples, 1.01%)</title><rect x="9.7011%" y="1109" width="1.0062%" height="15" fill="rgb(206,91,31)" fg:x="35365" fg:w="3668"/><text x="9.9511%" y="1119.50"></text></g><g><title>&lt;hyper::server::server::new_svc::NewSvcTask&lt;I,N,S,E,W&gt; as core::future::future::Future&gt;::poll (3,668 samples, 1.01%)</title><rect x="9.7011%" y="1093" width="1.0062%" height="15" fill="rgb(211,154,13)" fg:x="35365" fg:w="3668"/><text x="9.9511%" y="1103.50"></text></g><g><title>&lt;hyper::server::conn::upgrades::UpgradeableConnection&lt;I,S,E&gt; as core::future::future::Future&gt;::poll (3,668 samples, 1.01%)</title><rect x="9.7011%" y="1077" width="1.0062%" height="15" fill="rgb(225,148,7)" fg:x="35365" fg:w="3668"/><text x="9.9511%" y="1087.50"></text></g><g><title>&lt;hyper::proto::h2::server::Server&lt;T,S,B,E&gt; as core::future::future::Future&gt;::poll (3,668 samples, 1.01%)</title><rect x="9.7011%" y="1061" width="1.0062%" height="15" fill="rgb(220,160,43)" fg:x="35365" fg:w="3668"/><text x="9.9511%" y="1071.50"></text></g><g><title>h2::server::Connection&lt;T,B&gt;::poll_accept (2,975 samples, 0.82%)</title><rect x="9.8912%" y="1045" width="0.8161%" height="15" fill="rgb(213,52,39)" fg:x="36058" fg:w="2975"/><text x="10.1412%" y="1055.50"></text></g><g><title>h2::proto::streams::streams::Streams&lt;B,P&gt;::next_incoming (267 samples, 0.07%)</title><rect x="10.6341%" y="1029" width="0.0732%" height="15" fill="rgb(243,137,7)" fg:x="38766" fg:w="267"/><text x="10.8841%" y="1039.50"></text></g><g><title>&lt;h2::proto::streams::store::Ptr as core::ops::deref::Deref&gt;::deref (129 samples, 0.04%)</title><rect x="10.7103%" y="1125" width="0.0354%" height="15" fill="rgb(230,79,13)" fg:x="39044" fg:w="129"/><text x="10.9603%" y="1135.50"></text></g><g><title>&lt;h2::proto::streams::store::Ptr as core::ops::deref::DerefMut&gt;::deref_mut (114 samples, 0.03%)</title><rect x="10.7457%" y="1125" width="0.0313%" height="15" fill="rgb(247,105,23)" fg:x="39173" fg:w="114"/><text x="10.9957%" y="1135.50"></text></g><g><title>&lt;hyper::proto::h2::PipeToSendStream&lt;S&gt; as core::future::future::Future&gt;::poll (78 samples, 0.02%)</title><rect x="10.7954%" y="1125" width="0.0214%" height="15" fill="rgb(223,179,41)" fg:x="39354" fg:w="78"/><text x="11.0454%" y="1135.50"></text></g><g><title>&lt;hyper::proto::h2::server::H2Stream&lt;F,B&gt; as core::future::future::Future&gt;::poll (39 samples, 0.01%)</title><rect x="10.8168%" y="1125" width="0.0107%" height="15" fill="rgb(218,9,34)" fg:x="39432" fg:w="39"/><text x="11.0668%" y="1135.50"></text></g><g><title>&lt;hyper::proto::h2::server::Server&lt;T,S,B,E&gt; as core::future::future::Future&gt;::poll (44 samples, 0.01%)</title><rect x="10.8275%" y="1125" width="0.0121%" height="15" fill="rgb(222,106,8)" fg:x="39471" fg:w="44"/><text x="11.0775%" y="1135.50"></text></g><g><title>__memmove_avx_unaligned_erms (104 samples, 0.03%)</title><rect x="11.5072%" y="981" width="0.0285%" height="15" fill="rgb(211,220,0)" fg:x="41949" fg:w="104"/><text x="11.7572%" y="991.50"></text></g><g><title>&lt;tokio_util::codec::length_delimited::LengthDelimitedCodec as tokio_util::codec::decoder::Decoder&gt;::decode (538 samples, 0.15%)</title><rect x="11.4389%" y="997" width="0.1476%" height="15" fill="rgb(229,52,16)" fg:x="41700" fg:w="538"/><text x="11.6889%" y="1007.50"></text></g><g><title>bytes::bytes_mut::BytesMut::split_to (178 samples, 0.05%)</title><rect x="11.5377%" y="981" width="0.0488%" height="15" fill="rgb(212,155,18)" fg:x="42060" fg:w="178"/><text x="11.7877%" y="991.50"></text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_read::AsyncRead&gt;::poll_read (77 samples, 0.02%)</title><rect x="11.6403%" y="965" width="0.0211%" height="15" fill="rgb(242,21,14)" fg:x="42434" fg:w="77"/><text x="11.8903%" y="975.50"></text></g><g><title>hyper::server::tcp::addr_stream::_::&lt;impl hyper::server::tcp::addr_stream::AddrStream&gt;::project (99 samples, 0.03%)</title><rect x="11.6636%" y="965" width="0.0272%" height="15" fill="rgb(222,19,48)" fg:x="42519" fg:w="99"/><text x="11.9136%" y="975.50"></text></g><g><title>[unknown] (3,055 samples, 0.84%)</title><rect x="11.7552%" y="837" width="0.8380%" height="15" fill="rgb(232,45,27)" fg:x="42853" fg:w="3055"/><text x="12.0052%" y="847.50"></text></g><g><title>[unknown] (3,000 samples, 0.82%)</title><rect x="11.7703%" y="821" width="0.8229%" height="15" fill="rgb(249,103,42)" fg:x="42908" fg:w="3000"/><text x="12.0203%" y="831.50"></text></g><g><title>[unknown] (2,919 samples, 0.80%)</title><rect x="11.7925%" y="805" width="0.8007%" height="15" fill="rgb(246,81,33)" fg:x="42989" fg:w="2919"/><text x="12.0425%" y="815.50"></text></g><g><title>[unknown] (2,879 samples, 0.79%)</title><rect x="11.8035%" y="789" width="0.7898%" height="15" fill="rgb(252,33,42)" fg:x="43029" fg:w="2879"/><text x="12.0535%" y="799.50"></text></g><g><title>[unknown] (2,753 samples, 0.76%)</title><rect x="11.8380%" y="773" width="0.7552%" height="15" fill="rgb(209,212,41)" fg:x="43155" fg:w="2753"/><text x="12.0880%" y="783.50"></text></g><g><title>[unknown] (2,661 samples, 0.73%)</title><rect x="11.8633%" y="757" width="0.7300%" height="15" fill="rgb(207,154,6)" fg:x="43247" fg:w="2661"/><text x="12.1133%" y="767.50"></text></g><g><title>[unknown] (2,561 samples, 0.70%)</title><rect x="11.8907%" y="741" width="0.7025%" height="15" fill="rgb(223,64,47)" fg:x="43347" fg:w="2561"/><text x="12.1407%" y="751.50"></text></g><g><title>[unknown] (2,263 samples, 0.62%)</title><rect x="11.9725%" y="725" width="0.6208%" height="15" fill="rgb(211,161,38)" fg:x="43645" fg:w="2263"/><text x="12.2225%" y="735.50"></text></g><g><title>[unknown] (1,673 samples, 0.46%)</title><rect x="12.1343%" y="709" width="0.4589%" height="15" fill="rgb(219,138,40)" fg:x="44235" fg:w="1673"/><text x="12.3843%" y="719.50"></text></g><g><title>[unknown] (1,475 samples, 0.40%)</title><rect x="12.1886%" y="693" width="0.4046%" height="15" fill="rgb(241,228,46)" fg:x="44433" fg:w="1475"/><text x="12.4386%" y="703.50"></text></g><g><title>[unknown] (1,190 samples, 0.33%)</title><rect x="12.2668%" y="677" width="0.3264%" height="15" fill="rgb(223,209,38)" fg:x="44718" fg:w="1190"/><text x="12.5168%" y="687.50"></text></g><g><title>[unknown] (911 samples, 0.25%)</title><rect x="12.3433%" y="661" width="0.2499%" height="15" fill="rgb(236,164,45)" fg:x="44997" fg:w="911"/><text x="12.5933%" y="671.50"></text></g><g><title>[unknown] (694 samples, 0.19%)</title><rect x="12.4029%" y="645" width="0.1904%" height="15" fill="rgb(231,15,5)" fg:x="45214" fg:w="694"/><text x="12.6529%" y="655.50"></text></g><g><title>[unknown] (353 samples, 0.10%)</title><rect x="12.4964%" y="629" width="0.0968%" height="15" fill="rgb(252,35,15)" fg:x="45555" fg:w="353"/><text x="12.7464%" y="639.50"></text></g><g><title>[unknown] (319 samples, 0.09%)</title><rect x="12.5057%" y="613" width="0.0875%" height="15" fill="rgb(248,181,18)" fg:x="45589" fg:w="319"/><text x="12.7557%" y="623.50"></text></g><g><title>[unknown] (309 samples, 0.08%)</title><rect x="12.5085%" y="597" width="0.0848%" height="15" fill="rgb(233,39,42)" fg:x="45599" fg:w="309"/><text x="12.7585%" y="607.50"></text></g><g><title>[unknown] (300 samples, 0.08%)</title><rect x="12.5109%" y="581" width="0.0823%" height="15" fill="rgb(238,110,33)" fg:x="45608" fg:w="300"/><text x="12.7609%" y="591.50"></text></g><g><title>[unknown] (287 samples, 0.08%)</title><rect x="12.5145%" y="565" width="0.0787%" height="15" fill="rgb(233,195,10)" fg:x="45621" fg:w="287"/><text x="12.7645%" y="575.50"></text></g><g><title>[unknown] (262 samples, 0.07%)</title><rect x="12.5214%" y="549" width="0.0719%" height="15" fill="rgb(254,105,3)" fg:x="45646" fg:w="262"/><text x="12.7714%" y="559.50"></text></g><g><title>[unknown] (235 samples, 0.06%)</title><rect x="12.5288%" y="533" width="0.0645%" height="15" fill="rgb(221,225,9)" fg:x="45673" fg:w="235"/><text x="12.7788%" y="543.50"></text></g><g><title>[unknown] (207 samples, 0.06%)</title><rect x="12.5364%" y="517" width="0.0568%" height="15" fill="rgb(224,227,45)" fg:x="45701" fg:w="207"/><text x="12.7864%" y="527.50"></text></g><g><title>[unknown] (190 samples, 0.05%)</title><rect x="12.5411%" y="501" width="0.0521%" height="15" fill="rgb(229,198,43)" fg:x="45718" fg:w="190"/><text x="12.7911%" y="511.50"></text></g><g><title>[unknown] (182 samples, 0.05%)</title><rect x="12.5433%" y="485" width="0.0499%" height="15" fill="rgb(206,209,35)" fg:x="45726" fg:w="182"/><text x="12.7933%" y="495.50"></text></g><g><title>[unknown] (172 samples, 0.05%)</title><rect x="12.5461%" y="469" width="0.0472%" height="15" fill="rgb(245,195,53)" fg:x="45736" fg:w="172"/><text x="12.7961%" y="479.50"></text></g><g><title>[unknown] (164 samples, 0.04%)</title><rect x="12.5482%" y="453" width="0.0450%" height="15" fill="rgb(240,92,26)" fg:x="45744" fg:w="164"/><text x="12.7982%" y="463.50"></text></g><g><title>[unknown] (159 samples, 0.04%)</title><rect x="12.5496%" y="437" width="0.0436%" height="15" fill="rgb(207,40,23)" fg:x="45749" fg:w="159"/><text x="12.7996%" y="447.50"></text></g><g><title>[unknown] (151 samples, 0.04%)</title><rect x="12.5518%" y="421" width="0.0414%" height="15" fill="rgb(223,111,35)" fg:x="45757" fg:w="151"/><text x="12.8018%" y="431.50"></text></g><g><title>[unknown] (149 samples, 0.04%)</title><rect x="12.5524%" y="405" width="0.0409%" height="15" fill="rgb(229,147,28)" fg:x="45759" fg:w="149"/><text x="12.8024%" y="415.50"></text></g><g><title>[unknown] (144 samples, 0.04%)</title><rect x="12.5537%" y="389" width="0.0395%" height="15" fill="rgb(211,29,28)" fg:x="45764" fg:w="144"/><text x="12.8037%" y="399.50"></text></g><g><title>[unknown] (135 samples, 0.04%)</title><rect x="12.5562%" y="373" width="0.0370%" height="15" fill="rgb(228,72,33)" fg:x="45773" fg:w="135"/><text x="12.8062%" y="383.50"></text></g><g><title>[unknown] (130 samples, 0.04%)</title><rect x="12.5576%" y="357" width="0.0357%" height="15" fill="rgb(205,214,31)" fg:x="45778" fg:w="130"/><text x="12.8076%" y="367.50"></text></g><g><title>[unknown] (128 samples, 0.04%)</title><rect x="12.5581%" y="341" width="0.0351%" height="15" fill="rgb(224,111,15)" fg:x="45780" fg:w="128"/><text x="12.8081%" y="351.50"></text></g><g><title>[unknown] (124 samples, 0.03%)</title><rect x="12.5592%" y="325" width="0.0340%" height="15" fill="rgb(253,21,26)" fg:x="45784" fg:w="124"/><text x="12.8092%" y="335.50"></text></g><g><title>[unknown] (108 samples, 0.03%)</title><rect x="12.5636%" y="309" width="0.0296%" height="15" fill="rgb(245,139,43)" fg:x="45800" fg:w="108"/><text x="12.8136%" y="319.50"></text></g><g><title>[unknown] (95 samples, 0.03%)</title><rect x="12.5672%" y="293" width="0.0261%" height="15" fill="rgb(252,170,7)" fg:x="45813" fg:w="95"/><text x="12.8172%" y="303.50"></text></g><g><title>[unknown] (82 samples, 0.02%)</title><rect x="12.5707%" y="277" width="0.0225%" height="15" fill="rgb(231,118,14)" fg:x="45826" fg:w="82"/><text x="12.8207%" y="287.50"></text></g><g><title>[unknown] (71 samples, 0.02%)</title><rect x="12.5738%" y="261" width="0.0195%" height="15" fill="rgb(238,83,0)" fg:x="45837" fg:w="71"/><text x="12.8238%" y="271.50"></text></g><g><title>[unknown] (52 samples, 0.01%)</title><rect x="12.5790%" y="245" width="0.0143%" height="15" fill="rgb(221,39,39)" fg:x="45856" fg:w="52"/><text x="12.8290%" y="255.50"></text></g><g><title>__libc_recv (3,231 samples, 0.89%)</title><rect x="11.7261%" y="869" width="0.8863%" height="15" fill="rgb(222,119,46)" fg:x="42747" fg:w="3231"/><text x="11.9761%" y="879.50"></text></g><g><title>__libc_recv (3,155 samples, 0.87%)</title><rect x="11.7470%" y="853" width="0.8655%" height="15" fill="rgb(222,165,49)" fg:x="42823" fg:w="3155"/><text x="11.9970%" y="863.50"></text></g><g><title>__pthread_enable_asynccancel (41 samples, 0.01%)</title><rect x="12.6012%" y="837" width="0.0112%" height="15" fill="rgb(219,113,52)" fg:x="45937" fg:w="41"/><text x="12.8512%" y="847.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (3,240 samples, 0.89%)</title><rect x="11.7242%" y="933" width="0.8888%" height="15" fill="rgb(214,7,15)" fg:x="42740" fg:w="3240"/><text x="11.9742%" y="943.50"></text></g><g><title>std::sys_common::net::TcpStream::read (3,235 samples, 0.89%)</title><rect x="11.7256%" y="917" width="0.8874%" height="15" fill="rgb(235,32,4)" fg:x="42745" fg:w="3235"/><text x="11.9756%" y="927.50"></text></g><g><title>std::sys::unix::net::Socket::read (3,235 samples, 0.89%)</title><rect x="11.7256%" y="901" width="0.8874%" height="15" fill="rgb(238,90,54)" fg:x="42745" fg:w="3235"/><text x="11.9756%" y="911.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (3,235 samples, 0.89%)</title><rect x="11.7256%" y="885" width="0.8874%" height="15" fill="rgb(213,208,19)" fg:x="42745" fg:w="3235"/><text x="11.9756%" y="895.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (3,248 samples, 0.89%)</title><rect x="11.7231%" y="949" width="0.8910%" height="15" fill="rgb(233,156,4)" fg:x="42736" fg:w="3248"/><text x="11.9731%" y="959.50"></text></g><g><title>&lt;hyper::common::io::rewind::Rewind&lt;T&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (4,085 samples, 1.12%)</title><rect x="11.6145%" y="981" width="1.1206%" height="15" fill="rgb(207,194,5)" fg:x="42340" fg:w="4085"/><text x="11.8645%" y="991.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (3,807 samples, 1.04%)</title><rect x="11.6907%" y="965" width="1.0443%" height="15" fill="rgb(206,111,30)" fg:x="42618" fg:w="3807"/><text x="11.9407%" y="975.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (435 samples, 0.12%)</title><rect x="12.6157%" y="949" width="0.1193%" height="15" fill="rgb(243,70,54)" fg:x="45990" fg:w="435"/><text x="12.8657%" y="959.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (296 samples, 0.08%)</title><rect x="12.6539%" y="933" width="0.0812%" height="15" fill="rgb(242,28,8)" fg:x="46129" fg:w="296"/><text x="12.9039%" y="943.50"></text></g><g><title>bytes::buf::uninit_slice::UninitSlice::from_slice (72 samples, 0.02%)</title><rect x="12.7364%" y="981" width="0.0198%" height="15" fill="rgb(219,106,18)" fg:x="46430" fg:w="72"/><text x="12.9864%" y="991.50"></text></g><g><title>&lt;tokio_util::codec::framed_impl::FramedImpl&lt;T,U,R&gt; as futures_core::stream::Stream&gt;::poll_next (5,372 samples, 1.47%)</title><rect x="11.2968%" y="1013" width="1.4736%" height="15" fill="rgb(244,222,10)" fg:x="41182" fg:w="5372"/><text x="11.5468%" y="1023.50"></text></g><g><title>tokio_util::util::poll_read_buf (4,303 samples, 1.18%)</title><rect x="11.5901%" y="997" width="1.1804%" height="15" fill="rgb(236,179,52)" fg:x="42251" fg:w="4303"/><text x="11.8401%" y="1007.50"></text></g><g><title>tokio::io::read_buf::slice_assume_init (52 samples, 0.01%)</title><rect x="12.7562%" y="981" width="0.0143%" height="15" fill="rgb(213,23,39)" fg:x="46502" fg:w="52"/><text x="13.0062%" y="991.50"></text></g><g><title>__memmove_avx_unaligned_erms (179 samples, 0.05%)</title><rect x="12.7746%" y="1013" width="0.0491%" height="15" fill="rgb(238,48,10)" fg:x="46569" fg:w="179"/><text x="13.0246%" y="1023.50"></text></g><g><title>__memmove_avx_unaligned_erms (92 samples, 0.03%)</title><rect x="12.9943%" y="997" width="0.0252%" height="15" fill="rgb(251,196,23)" fg:x="47370" fg:w="92"/><text x="13.2443%" y="1007.50"></text></g><g><title>&lt;h2::codec::framed_read::FramedRead&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (6,819 samples, 1.87%)</title><rect x="11.1556%" y="1029" width="1.8706%" height="15" fill="rgb(250,152,24)" fg:x="40667" fg:w="6819"/><text x="11.4056%" y="1039.50">&lt;..</text></g><g><title>h2::codec::framed_read::decode_frame (713 samples, 0.20%)</title><rect x="12.8305%" y="1013" width="0.1956%" height="15" fill="rgb(209,150,17)" fg:x="46773" fg:w="713"/><text x="13.0805%" y="1023.50"></text></g><g><title>&lt;h2::server::Peer as h2::proto::peer::Peer&gt;::dyn (103 samples, 0.03%)</title><rect x="13.0261%" y="1029" width="0.0283%" height="15" fill="rgb(234,202,34)" fg:x="47486" fg:w="103"/><text x="13.2761%" y="1039.50"></text></g><g><title>__memmove_avx_unaligned_erms (55 samples, 0.02%)</title><rect x="13.0620%" y="1029" width="0.0151%" height="15" fill="rgb(253,148,53)" fg:x="47617" fg:w="55"/><text x="13.3120%" y="1039.50"></text></g><g><title>h2::proto::go_away::GoAway::should_close_now (99 samples, 0.03%)</title><rect x="13.0925%" y="1029" width="0.0272%" height="15" fill="rgb(218,129,16)" fg:x="47728" fg:w="99"/><text x="13.3425%" y="1039.50"></text></g><g><title>h2::proto::ping_pong::PingPong::recv_ping (40 samples, 0.01%)</title><rect x="13.1196%" y="1029" width="0.0110%" height="15" fill="rgb(216,85,19)" fg:x="47827" fg:w="40"/><text x="13.3696%" y="1039.50"></text></g><g><title>h2::proto::ping_pong::PingPong::send_pending_ping (40 samples, 0.01%)</title><rect x="13.1306%" y="1029" width="0.0110%" height="15" fill="rgb(235,228,7)" fg:x="47867" fg:w="40"/><text x="13.3806%" y="1039.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::put_slice (129 samples, 0.04%)</title><rect x="13.2203%" y="981" width="0.0354%" height="15" fill="rgb(245,175,0)" fg:x="48194" fg:w="129"/><text x="13.4703%" y="991.50"></text></g><g><title>__memmove_avx_unaligned_erms (108 samples, 0.03%)</title><rect x="13.2261%" y="965" width="0.0296%" height="15" fill="rgb(208,168,36)" fg:x="48215" fg:w="108"/><text x="13.4761%" y="975.50"></text></g><g><title>h2::codec::framed_write::FramedWrite&lt;T,B&gt;::buffer (370 samples, 0.10%)</title><rect x="13.1600%" y="1013" width="0.1015%" height="15" fill="rgb(246,171,24)" fg:x="47974" fg:w="370"/><text x="13.4100%" y="1023.50"></text></g><g><title>h2::frame::ping::Ping::encode (193 samples, 0.05%)</title><rect x="13.2085%" y="997" width="0.0529%" height="15" fill="rgb(215,142,24)" fg:x="48151" fg:w="193"/><text x="13.4585%" y="1007.50"></text></g><g><title>h2::proto::ping_pong::PingPong::send_pending_pong (459 samples, 0.13%)</title><rect x="13.1416%" y="1029" width="0.1259%" height="15" fill="rgb(250,187,7)" fg:x="47907" fg:w="459"/><text x="13.3916%" y="1039.50"></text></g><g><title>h2::proto::settings::Settings::poll_send (161 samples, 0.04%)</title><rect x="13.2713%" y="1029" width="0.0442%" height="15" fill="rgb(228,66,33)" fg:x="48380" fg:w="161"/><text x="13.5213%" y="1039.50"></text></g><g><title>h2::proto::streams::flow_control::FlowControl::inc_window (37 samples, 0.01%)</title><rect x="13.4261%" y="997" width="0.0101%" height="15" fill="rgb(234,215,21)" fg:x="48944" fg:w="37"/><text x="13.6761%" y="1007.50"></text></g><g><title>h2::proto::streams::prioritize::Prioritize::recv_connection_window_update (155 samples, 0.04%)</title><rect x="13.3975%" y="1013" width="0.0425%" height="15" fill="rgb(222,191,20)" fg:x="48840" fg:w="155"/><text x="13.6475%" y="1023.50"></text></g><g><title>h2::proto::streams::store::Queue&lt;N&gt;::push (73 samples, 0.02%)</title><rect x="13.5396%" y="965" width="0.0200%" height="15" fill="rgb(245,79,54)" fg:x="49358" fg:w="73"/><text x="13.7896%" y="975.50"></text></g><g><title>h2::proto::streams::send::Send::recv_stream_window_update (552 samples, 0.15%)</title><rect x="13.4483%" y="1013" width="0.1514%" height="15" fill="rgb(240,10,37)" fg:x="49025" fg:w="552"/><text x="13.6983%" y="1023.50"></text></g><g><title>h2::proto::streams::prioritize::Prioritize::recv_stream_window_update (515 samples, 0.14%)</title><rect x="13.4584%" y="997" width="0.1413%" height="15" fill="rgb(214,192,32)" fg:x="49062" fg:w="515"/><text x="13.7084%" y="1007.50"></text></g><g><title>h2::proto::streams::prioritize::Prioritize::try_assign_capacity (375 samples, 0.10%)</title><rect x="13.4968%" y="981" width="0.1029%" height="15" fill="rgb(209,36,54)" fg:x="49202" fg:w="375"/><text x="13.7468%" y="991.50"></text></g><g><title>h2::proto::streams::stream::Stream::assign_capacity (146 samples, 0.04%)</title><rect x="13.5596%" y="965" width="0.0400%" height="15" fill="rgb(220,10,11)" fg:x="49431" fg:w="146"/><text x="13.8096%" y="975.50"></text></g><g><title>h2::proto::streams::stream::Stream::notify_capacity (109 samples, 0.03%)</title><rect x="13.5698%" y="949" width="0.0299%" height="15" fill="rgb(221,106,17)" fg:x="49468" fg:w="109"/><text x="13.8198%" y="959.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (76 samples, 0.02%)</title><rect x="13.5788%" y="933" width="0.0208%" height="15" fill="rgb(251,142,44)" fg:x="49501" fg:w="76"/><text x="13.8288%" y="943.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_val (50 samples, 0.01%)</title><rect x="13.5860%" y="917" width="0.0137%" height="15" fill="rgb(238,13,15)" fg:x="49527" fg:w="50"/><text x="13.8360%" y="927.50"></text></g><g><title>h2::proto::streams::store::Store::find_mut (190 samples, 0.05%)</title><rect x="13.5997%" y="1013" width="0.0521%" height="15" fill="rgb(208,107,27)" fg:x="49577" fg:w="190"/><text x="13.8497%" y="1023.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::hash (65 samples, 0.02%)</title><rect x="13.6340%" y="997" width="0.0178%" height="15" fill="rgb(205,136,37)" fg:x="49702" fg:w="65"/><text x="13.8840%" y="1007.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock_contended (44 samples, 0.01%)</title><rect x="13.6518%" y="1013" width="0.0121%" height="15" fill="rgb(250,205,27)" fg:x="49767" fg:w="44"/><text x="13.9018%" y="1023.50"></text></g><g><title>h2::proto::streams::streams::DynStreams&lt;B&gt;::recv_window_update (1,282 samples, 0.35%)</title><rect x="13.3155%" y="1029" width="0.3517%" height="15" fill="rgb(210,80,43)" fg:x="48541" fg:w="1282"/><text x="13.5655%" y="1039.50"></text></g><g><title>h2::proto::streams::recv::Recv::clear_expired_reset_streams (48 samples, 0.01%)</title><rect x="13.7451%" y="1013" width="0.0132%" height="15" fill="rgb(247,160,36)" fg:x="50107" fg:w="48"/><text x="13.9951%" y="1023.50"></text></g><g><title>h2::proto::streams::streams::Streams&lt;B,P&gt;::clear_expired_reset_streams (376 samples, 0.10%)</title><rect x="13.6672%" y="1029" width="0.1031%" height="15" fill="rgb(234,13,49)" fg:x="49823" fg:w="376"/><text x="13.9172%" y="1039.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock_contended (44 samples, 0.01%)</title><rect x="13.7582%" y="1013" width="0.0121%" height="15" fill="rgb(234,122,0)" fg:x="50155" fg:w="44"/><text x="14.0082%" y="1023.50"></text></g><g><title>h2::proto::streams::recv::Recv::send_pending_refusal (61 samples, 0.02%)</title><rect x="13.8087%" y="1013" width="0.0167%" height="15" fill="rgb(207,146,38)" fg:x="50339" fg:w="61"/><text x="14.0587%" y="1023.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock_contended (43 samples, 0.01%)</title><rect x="13.8255%" y="1013" width="0.0118%" height="15" fill="rgb(207,177,25)" fg:x="50400" fg:w="43"/><text x="14.0755%" y="1023.50"></text></g><g><title>h2::proto::streams::streams::Streams&lt;B,P&gt;::send_pending_refusal (251 samples, 0.07%)</title><rect x="13.7703%" y="1029" width="0.0689%" height="15" fill="rgb(211,178,42)" fg:x="50199" fg:w="251"/><text x="14.0203%" y="1039.50"></text></g><g><title>h2::proto::connection::Connection&lt;T,P,B&gt;::poll2 (10,918 samples, 2.99%)</title><rect x="10.8450%" y="1045" width="2.9950%" height="15" fill="rgb(230,69,54)" fg:x="39535" fg:w="10918"/><text x="11.0950%" y="1055.50">h2:..</text></g><g><title>&lt;h2::proto::streams::flow_control::Window as core::cmp::PartialEq&lt;usize&gt;&gt;::eq (119 samples, 0.03%)</title><rect x="14.3362%" y="1013" width="0.0326%" height="15" fill="rgb(214,135,41)" fg:x="52262" fg:w="119"/><text x="14.5862%" y="1023.50"></text></g><g><title>&lt;h2::proto::streams::store::Ptr as core::ops::deref::Deref&gt;::deref (98 samples, 0.03%)</title><rect x="14.3689%" y="1013" width="0.0269%" height="15" fill="rgb(237,67,25)" fg:x="52381" fg:w="98"/><text x="14.6189%" y="1023.50"></text></g><g><title>__memmove_avx_unaligned_erms (501 samples, 0.14%)</title><rect x="14.4075%" y="1013" width="0.1374%" height="15" fill="rgb(222,189,50)" fg:x="52522" fg:w="501"/><text x="14.6575%" y="1023.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (40 samples, 0.01%)</title><rect x="14.7795%" y="997" width="0.0110%" height="15" fill="rgb(245,148,34)" fg:x="53878" fg:w="40"/><text x="15.0295%" y="1007.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::put_slice (267 samples, 0.07%)</title><rect x="14.7905%" y="997" width="0.0732%" height="15" fill="rgb(222,29,6)" fg:x="53918" fg:w="267"/><text x="15.0405%" y="1007.50"></text></g><g><title>__memmove_avx_unaligned_erms (203 samples, 0.06%)</title><rect x="14.8080%" y="981" width="0.0557%" height="15" fill="rgb(221,189,43)" fg:x="53982" fg:w="203"/><text x="15.0580%" y="991.50"></text></g><g><title>h2::frame::head::Head::new (90 samples, 0.02%)</title><rect x="14.8835%" y="997" width="0.0247%" height="15" fill="rgb(207,36,27)" fg:x="54257" fg:w="90"/><text x="15.1335%" y="1007.50"></text></g><g><title>h2::codec::framed_write::FramedWrite&lt;T,B&gt;::buffer (1,309 samples, 0.36%)</title><rect x="14.5549%" y="1013" width="0.3591%" height="15" fill="rgb(217,90,24)" fg:x="53059" fg:w="1309"/><text x="14.8049%" y="1023.50"></text></g><g><title>&lt;bytes::buf::chain::Chain&lt;T,U&gt; as bytes::buf::buf_impl::Buf&gt;::advance (247 samples, 0.07%)</title><rect x="15.3583%" y="997" width="0.0678%" height="15" fill="rgb(224,66,35)" fg:x="55988" fg:w="247"/><text x="15.6083%" y="1007.50"></text></g><g><title>&lt;bytes::buf::take::Take&lt;T&gt; as bytes::buf::buf_impl::Buf&gt;::advance (37 samples, 0.01%)</title><rect x="15.4261%" y="997" width="0.0101%" height="15" fill="rgb(221,13,50)" fg:x="56235" fg:w="37"/><text x="15.6761%" y="1007.50"></text></g><g><title>[unknown] (84,368 samples, 23.14%)</title><rect x="15.7786%" y="885" width="23.1434%" height="15" fill="rgb(236,68,49)" fg:x="57520" fg:w="84368"/><text x="16.0286%" y="895.50">[unknown]</text></g><g><title>[unknown] (83,191 samples, 22.82%)</title><rect x="16.1014%" y="869" width="22.8205%" height="15" fill="rgb(229,146,28)" fg:x="58697" fg:w="83191"/><text x="16.3514%" y="879.50">[unknown]</text></g><g><title>[unknown] (82,630 samples, 22.67%)</title><rect x="16.2553%" y="853" width="22.6666%" height="15" fill="rgb(225,31,38)" fg:x="59258" fg:w="82630"/><text x="16.5053%" y="863.50">[unknown]</text></g><g><title>[unknown] (82,415 samples, 22.61%)</title><rect x="16.3143%" y="837" width="22.6076%" height="15" fill="rgb(250,208,3)" fg:x="59473" fg:w="82415"/><text x="16.5643%" y="847.50">[unknown]</text></g><g><title>[unknown] (81,594 samples, 22.38%)</title><rect x="16.5395%" y="821" width="22.3824%" height="15" fill="rgb(246,54,23)" fg:x="60294" fg:w="81594"/><text x="16.7895%" y="831.50">[unknown]</text></g><g><title>[unknown] (80,799 samples, 22.16%)</title><rect x="16.7576%" y="805" width="22.1643%" height="15" fill="rgb(243,76,11)" fg:x="61089" fg:w="80799"/><text x="17.0076%" y="815.50">[unknown]</text></g><g><title>[unknown] (80,195 samples, 22.00%)</title><rect x="16.9233%" y="789" width="21.9987%" height="15" fill="rgb(245,21,50)" fg:x="61693" fg:w="80195"/><text x="17.1733%" y="799.50">[unknown]</text></g><g><title>[unknown] (79,039 samples, 21.68%)</title><rect x="17.2404%" y="773" width="21.6815%" height="15" fill="rgb(228,9,43)" fg:x="62849" fg:w="79039"/><text x="17.4904%" y="783.50">[unknown]</text></g><g><title>[unknown] (75,136 samples, 20.61%)</title><rect x="18.3110%" y="757" width="20.6109%" height="15" fill="rgb(208,100,47)" fg:x="66752" fg:w="75136"/><text x="18.5610%" y="767.50">[unknown]</text></g><g><title>[unknown] (72,972 samples, 20.02%)</title><rect x="18.9047%" y="741" width="20.0173%" height="15" fill="rgb(232,26,8)" fg:x="68916" fg:w="72972"/><text x="19.1547%" y="751.50">[unknown]</text></g><g><title>[unknown] (68,637 samples, 18.83%)</title><rect x="20.0938%" y="725" width="18.8281%" height="15" fill="rgb(216,166,38)" fg:x="73251" fg:w="68637"/><text x="20.3438%" y="735.50">[unknown]</text></g><g><title>[unknown] (64,956 samples, 17.82%)</title><rect x="21.1036%" y="709" width="17.8184%" height="15" fill="rgb(251,202,51)" fg:x="76932" fg:w="64956"/><text x="21.3536%" y="719.50">[unknown]</text></g><g><title>[unknown] (58,143 samples, 15.95%)</title><rect x="22.9725%" y="693" width="15.9495%" height="15" fill="rgb(254,216,34)" fg:x="83745" fg:w="58143"/><text x="23.2225%" y="703.50">[unknown]</text></g><g><title>[unknown] (54,780 samples, 15.03%)</title><rect x="23.8950%" y="677" width="15.0270%" height="15" fill="rgb(251,32,27)" fg:x="87108" fg:w="54780"/><text x="24.1450%" y="687.50">[unknown]</text></g><g><title>[unknown] (52,852 samples, 14.50%)</title><rect x="24.4239%" y="661" width="14.4981%" height="15" fill="rgb(208,127,28)" fg:x="89036" fg:w="52852"/><text x="24.6739%" y="671.50">[unknown]</text></g><g><title>[unknown] (50,758 samples, 13.92%)</title><rect x="24.9983%" y="645" width="13.9237%" height="15" fill="rgb(224,137,22)" fg:x="91130" fg:w="50758"/><text x="25.2483%" y="655.50">[unknown]</text></g><g><title>[unknown] (48,640 samples, 13.34%)</title><rect x="25.5793%" y="629" width="13.3427%" height="15" fill="rgb(254,70,32)" fg:x="93248" fg:w="48640"/><text x="25.8293%" y="639.50">[unknown]</text></g><g><title>[unknown] (46,602 samples, 12.78%)</title><rect x="26.1383%" y="613" width="12.7836%" height="15" fill="rgb(229,75,37)" fg:x="95286" fg:w="46602"/><text x="26.3883%" y="623.50">[unknown]</text></g><g><title>[unknown] (44,544 samples, 12.22%)</title><rect x="26.7029%" y="597" width="12.2191%" height="15" fill="rgb(252,64,23)" fg:x="97344" fg:w="44544"/><text x="26.9529%" y="607.50">[unknown]</text></g><g><title>[unknown] (39,732 samples, 10.90%)</title><rect x="28.0229%" y="581" width="10.8991%" height="15" fill="rgb(232,162,48)" fg:x="102156" fg:w="39732"/><text x="28.2729%" y="591.50">[unknown]</text></g><g><title>[unknown] (35,621 samples, 9.77%)</title><rect x="29.1506%" y="565" width="9.7714%" height="15" fill="rgb(246,160,12)" fg:x="106267" fg:w="35621"/><text x="29.4006%" y="575.50">[unknown]</text></g><g><title>[unknown] (32,481 samples, 8.91%)</title><rect x="30.0119%" y="549" width="8.9100%" height="15" fill="rgb(247,166,0)" fg:x="109407" fg:w="32481"/><text x="30.2619%" y="559.50">[unknown]</text></g><g><title>[unknown] (30,578 samples, 8.39%)</title><rect x="30.5340%" y="533" width="8.3880%" height="15" fill="rgb(249,219,21)" fg:x="111310" fg:w="30578"/><text x="30.7840%" y="543.50">[unknown]</text></g><g><title>[unknown] (29,263 samples, 8.03%)</title><rect x="30.8947%" y="517" width="8.0273%" height="15" fill="rgb(205,209,3)" fg:x="112625" fg:w="29263"/><text x="31.1447%" y="527.50">[unknown]</text></g><g><title>[unknown] (28,262 samples, 7.75%)</title><rect x="31.1693%" y="501" width="7.7527%" height="15" fill="rgb(243,44,1)" fg:x="113626" fg:w="28262"/><text x="31.4193%" y="511.50">[unknown]</text></g><g><title>[unknown] (27,256 samples, 7.48%)</title><rect x="31.4452%" y="485" width="7.4767%" height="15" fill="rgb(206,159,16)" fg:x="114632" fg:w="27256"/><text x="31.6952%" y="495.50">[unknown]</text></g><g><title>[unknown] (26,532 samples, 7.28%)</title><rect x="31.6438%" y="469" width="7.2781%" height="15" fill="rgb(244,77,30)" fg:x="115356" fg:w="26532"/><text x="31.8938%" y="479.50">[unknown]</text></g><g><title>[unknown] (26,262 samples, 7.20%)</title><rect x="31.7179%" y="453" width="7.2040%" height="15" fill="rgb(218,69,12)" fg:x="115626" fg:w="26262"/><text x="31.9679%" y="463.50">[unknown]</text></g><g><title>[unknown] (24,939 samples, 6.84%)</title><rect x="32.0808%" y="437" width="6.8411%" height="15" fill="rgb(212,87,7)" fg:x="116949" fg:w="24939"/><text x="32.3308%" y="447.50">[unknown]</text></g><g><title>[unknown] (23,682 samples, 6.50%)</title><rect x="32.4256%" y="421" width="6.4963%" height="15" fill="rgb(245,114,25)" fg:x="118206" fg:w="23682"/><text x="32.6756%" y="431.50">[unknown]</text></g><g><title>[unknown] (22,457 samples, 6.16%)</title><rect x="32.7617%" y="405" width="6.1603%" height="15" fill="rgb(210,61,42)" fg:x="119431" fg:w="22457"/><text x="33.0117%" y="415.50">[unknown]</text></g><g><title>[unknown] (21,966 samples, 6.03%)</title><rect x="32.8964%" y="389" width="6.0256%" height="15" fill="rgb(211,52,33)" fg:x="119922" fg:w="21966"/><text x="33.1464%" y="399.50">[unknown]</text></g><g><title>[unknown] (21,203 samples, 5.82%)</title><rect x="33.1057%" y="373" width="5.8163%" height="15" fill="rgb(234,58,33)" fg:x="120685" fg:w="21203"/><text x="33.3557%" y="383.50">[unknow..</text></g><g><title>[unknown] (17,946 samples, 4.92%)</title><rect x="33.9991%" y="357" width="4.9228%" height="15" fill="rgb(220,115,36)" fg:x="123942" fg:w="17946"/><text x="34.2491%" y="367.50">[unkno..</text></g><g><title>[unknown] (15,577 samples, 4.27%)</title><rect x="34.6489%" y="341" width="4.2730%" height="15" fill="rgb(243,153,54)" fg:x="126311" fg:w="15577"/><text x="34.8989%" y="351.50">[unkn..</text></g><g><title>[unknown] (13,300 samples, 3.65%)</title><rect x="35.2736%" y="325" width="3.6484%" height="15" fill="rgb(251,47,18)" fg:x="128588" fg:w="13300"/><text x="35.5236%" y="335.50">[unk..</text></g><g><title>[unknown] (11,504 samples, 3.16%)</title><rect x="35.7662%" y="309" width="3.1557%" height="15" fill="rgb(242,102,42)" fg:x="130384" fg:w="11504"/><text x="36.0162%" y="319.50">[un..</text></g><g><title>[unknown] (9,917 samples, 2.72%)</title><rect x="36.2016%" y="293" width="2.7204%" height="15" fill="rgb(234,31,38)" fg:x="131971" fg:w="9917"/><text x="36.4516%" y="303.50">[u..</text></g><g><title>[unknown] (9,242 samples, 2.54%)</title><rect x="36.3867%" y="277" width="2.5352%" height="15" fill="rgb(221,117,51)" fg:x="132646" fg:w="9242"/><text x="36.6367%" y="287.50">[u..</text></g><g><title>[unknown] (8,655 samples, 2.37%)</title><rect x="36.5478%" y="261" width="2.3742%" height="15" fill="rgb(212,20,18)" fg:x="133233" fg:w="8655"/><text x="36.7978%" y="271.50">[u..</text></g><g><title>[unknown] (7,669 samples, 2.10%)</title><rect x="36.8182%" y="245" width="2.1037%" height="15" fill="rgb(245,133,36)" fg:x="134219" fg:w="7669"/><text x="37.0682%" y="255.50">[..</text></g><g><title>[unknown] (6,914 samples, 1.90%)</title><rect x="37.0253%" y="229" width="1.8966%" height="15" fill="rgb(212,6,19)" fg:x="134974" fg:w="6914"/><text x="37.2753%" y="239.50">[..</text></g><g><title>[unknown] (6,345 samples, 1.74%)</title><rect x="37.1814%" y="213" width="1.7405%" height="15" fill="rgb(218,1,36)" fg:x="135543" fg:w="6345"/><text x="37.4314%" y="223.50"></text></g><g><title>[unknown] (6,207 samples, 1.70%)</title><rect x="37.2193%" y="197" width="1.7027%" height="15" fill="rgb(246,84,54)" fg:x="135681" fg:w="6207"/><text x="37.4693%" y="207.50"></text></g><g><title>[unknown] (5,889 samples, 1.62%)</title><rect x="37.3065%" y="181" width="1.6154%" height="15" fill="rgb(242,110,6)" fg:x="135999" fg:w="5889"/><text x="37.5565%" y="191.50"></text></g><g><title>[unknown] (5,800 samples, 1.59%)</title><rect x="37.3309%" y="165" width="1.5910%" height="15" fill="rgb(214,47,5)" fg:x="136088" fg:w="5800"/><text x="37.5809%" y="175.50"></text></g><g><title>[unknown] (5,662 samples, 1.55%)</title><rect x="37.3688%" y="149" width="1.5532%" height="15" fill="rgb(218,159,25)" fg:x="136226" fg:w="5662"/><text x="37.6188%" y="159.50"></text></g><g><title>[unknown] (5,159 samples, 1.42%)</title><rect x="37.5068%" y="133" width="1.4152%" height="15" fill="rgb(215,211,28)" fg:x="136729" fg:w="5159"/><text x="37.7568%" y="143.50"></text></g><g><title>[unknown] (4,179 samples, 1.15%)</title><rect x="37.7756%" y="117" width="1.1464%" height="15" fill="rgb(238,59,32)" fg:x="137709" fg:w="4179"/><text x="38.0256%" y="127.50"></text></g><g><title>[unknown] (3,417 samples, 0.94%)</title><rect x="37.9846%" y="101" width="0.9373%" height="15" fill="rgb(226,82,3)" fg:x="138471" fg:w="3417"/><text x="38.2346%" y="111.50"></text></g><g><title>[unknown] (1,557 samples, 0.43%)</title><rect x="38.4948%" y="85" width="0.4271%" height="15" fill="rgb(240,164,32)" fg:x="140331" fg:w="1557"/><text x="38.7448%" y="95.50"></text></g><g><title>[unknown] (519 samples, 0.14%)</title><rect x="38.7796%" y="69" width="0.1424%" height="15" fill="rgb(232,46,7)" fg:x="141369" fg:w="519"/><text x="39.0296%" y="79.50"></text></g><g><title>[unknown] (158 samples, 0.04%)</title><rect x="38.8786%" y="53" width="0.0433%" height="15" fill="rgb(229,129,53)" fg:x="141730" fg:w="158"/><text x="39.1286%" y="63.50"></text></g><g><title>[unknown] (49 samples, 0.01%)</title><rect x="38.9085%" y="37" width="0.0134%" height="15" fill="rgb(234,188,29)" fg:x="141839" fg:w="49"/><text x="39.1585%" y="47.50"></text></g><g><title>__pthread_disable_asynccancel (273 samples, 0.07%)</title><rect x="38.9219%" y="885" width="0.0749%" height="15" fill="rgb(246,141,4)" fg:x="141888" fg:w="273"/><text x="39.1719%" y="895.50"></text></g><g><title>__libc_send (85,327 samples, 23.41%)</title><rect x="15.6466%" y="917" width="23.4064%" height="15" fill="rgb(229,23,39)" fg:x="57039" fg:w="85327"/><text x="15.8966%" y="927.50">__libc_send</text></g><g><title>__libc_send (85,241 samples, 23.38%)</title><rect x="15.6702%" y="901" width="23.3828%" height="15" fill="rgb(206,12,3)" fg:x="57125" fg:w="85241"/><text x="15.9202%" y="911.50">__libc_send</text></g><g><title>__pthread_enable_asynccancel (205 samples, 0.06%)</title><rect x="38.9968%" y="885" width="0.0562%" height="15" fill="rgb(252,226,20)" fg:x="142161" fg:w="205"/><text x="39.2468%" y="895.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (85,456 samples, 23.44%)</title><rect x="15.6304%" y="949" width="23.4418%" height="15" fill="rgb(216,123,35)" fg:x="56980" fg:w="85456"/><text x="15.8804%" y="959.50">&lt;&amp;std::net::tcp::TcpStream as std::io..</text></g><g><title>std::sys_common::net::TcpStream::write (85,447 samples, 23.44%)</title><rect x="15.6329%" y="933" width="23.4394%" height="15" fill="rgb(212,68,40)" fg:x="56989" fg:w="85447"/><text x="15.8829%" y="943.50">std::sys_common::net::TcpStream::write</text></g><g><title>std::sys::unix::cvt (70 samples, 0.02%)</title><rect x="39.0531%" y="917" width="0.0192%" height="15" fill="rgb(254,125,32)" fg:x="142366" fg:w="70"/><text x="39.3031%" y="927.50"></text></g><g><title>&lt;isize as std::sys::unix::IsMinusOne&gt;::is_minus_one (70 samples, 0.02%)</title><rect x="39.0531%" y="901" width="0.0192%" height="15" fill="rgb(253,97,22)" fg:x="142366" fg:w="70"/><text x="39.3031%" y="911.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (85,615 samples, 23.49%)</title><rect x="15.5879%" y="965" width="23.4854%" height="15" fill="rgb(241,101,14)" fg:x="56825" fg:w="85615"/><text x="15.8379%" y="975.50">&lt;&amp;mio::net::tcp::stream::TcpStream as..</text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_write::AsyncWrite&gt;::poll_write (86,477 samples, 23.72%)</title><rect x="15.4362%" y="997" width="23.7219%" height="15" fill="rgb(238,103,29)" fg:x="56272" fg:w="86477"/><text x="15.6862%" y="1007.50">&lt;tokio::net::tcp::stream::TcpStream as..</text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write (86,349 samples, 23.69%)</title><rect x="15.4713%" y="981" width="23.6868%" height="15" fill="rgb(233,195,47)" fg:x="56400" fg:w="86349"/><text x="15.7213%" y="991.50">tokio::io::poll_evented::PollEvented&lt;E..</text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (307 samples, 0.08%)</title><rect x="39.0739%" y="965" width="0.0842%" height="15" fill="rgb(246,218,30)" fg:x="142442" fg:w="307"/><text x="39.3239%" y="975.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (95 samples, 0.03%)</title><rect x="39.1321%" y="949" width="0.0261%" height="15" fill="rgb(219,145,47)" fg:x="142654" fg:w="95"/><text x="39.3821%" y="959.50"></text></g><g><title>bytes::bytes_mut::BytesMut::clear (80 samples, 0.02%)</title><rect x="39.1636%" y="997" width="0.0219%" height="15" fill="rgb(243,12,26)" fg:x="142769" fg:w="80"/><text x="39.4136%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Span&gt; (59 samples, 0.02%)</title><rect x="39.1856%" y="997" width="0.0162%" height="15" fill="rgb(214,87,16)" fg:x="142849" fg:w="59"/><text x="39.4356%" y="1007.50"></text></g><g><title>h2::codec::framed_write::FramedWrite&lt;T,B&gt;::flush (88,580 samples, 24.30%)</title><rect x="14.9139%" y="1013" width="24.2988%" height="15" fill="rgb(208,99,42)" fg:x="54368" fg:w="88580"/><text x="15.1639%" y="1023.50">h2::codec::framed_write::FramedWrite&lt;T,..</text></g><g><title>hyper::server::tcp::addr_stream::_::&lt;impl hyper::server::tcp::addr_stream::AddrStream&gt;::project (40 samples, 0.01%)</title><rect x="39.2017%" y="997" width="0.0110%" height="15" fill="rgb(253,99,2)" fg:x="142908" fg:w="40"/><text x="39.4517%" y="1007.50"></text></g><g><title>h2::proto::streams::buffer::Deque::is_empty (64 samples, 0.02%)</title><rect x="39.2127%" y="1013" width="0.0176%" height="15" fill="rgb(220,168,23)" fg:x="142948" fg:w="64"/><text x="39.4627%" y="1023.50"></text></g><g><title>h2::proto::streams::buffer::Deque::pop_front (881 samples, 0.24%)</title><rect x="39.2303%" y="1013" width="0.2417%" height="15" fill="rgb(242,38,24)" fg:x="143012" fg:w="881"/><text x="39.4803%" y="1023.50"></text></g><g><title>__memmove_avx_unaligned_erms (762 samples, 0.21%)</title><rect x="39.2629%" y="997" width="0.2090%" height="15" fill="rgb(225,182,9)" fg:x="143131" fg:w="762"/><text x="39.5129%" y="1007.50"></text></g><g><title>h2::proto::streams::counts::Counts::transition_after (213 samples, 0.06%)</title><rect x="39.4719%" y="1013" width="0.0584%" height="15" fill="rgb(243,178,37)" fg:x="143893" fg:w="213"/><text x="39.7219%" y="1023.50"></text></g><g><title>h2::proto::streams::flow_control::FlowControl::available (54 samples, 0.01%)</title><rect x="39.5304%" y="1013" width="0.0148%" height="15" fill="rgb(232,139,19)" fg:x="144106" fg:w="54"/><text x="39.7804%" y="1023.50"></text></g><g><title>h2::proto::streams::flow_control::Window::as_size (46 samples, 0.01%)</title><rect x="39.5512%" y="1013" width="0.0126%" height="15" fill="rgb(225,201,24)" fg:x="144182" fg:w="46"/><text x="39.8012%" y="1023.50"></text></g><g><title>_int_free (64 samples, 0.02%)</title><rect x="39.7929%" y="997" width="0.0176%" height="15" fill="rgb(221,47,46)" fg:x="145063" fg:w="64"/><text x="40.0429%" y="1007.50"></text></g><g><title>__GI___libc_free (127 samples, 0.03%)</title><rect x="39.8727%" y="981" width="0.0348%" height="15" fill="rgb(249,23,13)" fg:x="145354" fg:w="127"/><text x="40.1227%" y="991.50"></text></g><g><title>__rdl_dealloc (40 samples, 0.01%)</title><rect x="39.9076%" y="981" width="0.0110%" height="15" fill="rgb(219,9,5)" fg:x="145481" fg:w="40"/><text x="40.1576%" y="991.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (40 samples, 0.01%)</title><rect x="39.9076%" y="965" width="0.0110%" height="15" fill="rgb(254,171,16)" fg:x="145481" fg:w="40"/><text x="40.1576%" y="975.50"></text></g><g><title>malloc_consolidate (68 samples, 0.02%)</title><rect x="39.9953%" y="965" width="0.0187%" height="15" fill="rgb(230,171,20)" fg:x="145801" fg:w="68"/><text x="40.2453%" y="975.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop (782 samples, 0.21%)</title><rect x="39.8104%" y="997" width="0.2145%" height="15" fill="rgb(210,71,41)" fg:x="145127" fg:w="782"/><text x="40.0604%" y="1007.50"></text></g><g><title>_int_free (367 samples, 0.10%)</title><rect x="39.9243%" y="981" width="0.1007%" height="15" fill="rgb(206,173,20)" fg:x="145542" fg:w="367"/><text x="40.1743%" y="991.50"></text></g><g><title>unlink_chunk (40 samples, 0.01%)</title><rect x="40.0140%" y="965" width="0.0110%" height="15" fill="rgb(233,88,34)" fg:x="145869" fg:w="40"/><text x="40.2640%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Span&gt; (63 samples, 0.02%)</title><rect x="40.0250%" y="997" width="0.0173%" height="15" fill="rgb(223,209,46)" fg:x="145909" fg:w="63"/><text x="40.2750%" y="1007.50"></text></g><g><title>h2::proto::streams::prioritize::Prioritize::reclaim_frame (1,766 samples, 0.48%)</title><rect x="39.5638%" y="1013" width="0.4844%" height="15" fill="rgb(250,43,18)" fg:x="144228" fg:w="1766"/><text x="39.8138%" y="1023.50"></text></g><g><title>h2::proto::streams::prioritize::Prioritize::schedule_pending_open (144 samples, 0.04%)</title><rect x="40.0483%" y="1013" width="0.0395%" height="15" fill="rgb(208,13,10)" fg:x="145994" fg:w="144"/><text x="40.2983%" y="1023.50"></text></g><g><title>h2::proto::streams::state::State::is_scheduled_reset (78 samples, 0.02%)</title><rect x="40.0878%" y="1013" width="0.0214%" height="15" fill="rgb(212,200,36)" fg:x="146138" fg:w="78"/><text x="40.3378%" y="1023.50"></text></g><g><title>h2::proto::streams::store::Ptr::key (48 samples, 0.01%)</title><rect x="40.1092%" y="1013" width="0.0132%" height="15" fill="rgb(225,90,30)" fg:x="146216" fg:w="48"/><text x="40.3592%" y="1023.50"></text></g><g><title>&lt;h2::proto::streams::store::Ptr as core::ops::deref::Deref&gt;::deref (140 samples, 0.04%)</title><rect x="40.1487%" y="997" width="0.0384%" height="15" fill="rgb(236,182,39)" fg:x="146360" fg:w="140"/><text x="40.3987%" y="1007.50"></text></g><g><title>&lt;h2::proto::streams::store::Store as h2::proto::streams::store::Resolve&gt;::resolve (41 samples, 0.01%)</title><rect x="40.1953%" y="997" width="0.0112%" height="15" fill="rgb(212,144,35)" fg:x="146530" fg:w="41"/><text x="40.4453%" y="1007.50"></text></g><g><title>h2::proto::streams::store::Queue&lt;N&gt;::pop (376 samples, 0.10%)</title><rect x="40.1223%" y="1013" width="0.1031%" height="15" fill="rgb(228,63,44)" fg:x="146264" fg:w="376"/><text x="40.3723%" y="1023.50"></text></g><g><title>h2::proto::streams::store::Queue&lt;N&gt;::push (237 samples, 0.07%)</title><rect x="40.2255%" y="1013" width="0.0650%" height="15" fill="rgb(228,109,6)" fg:x="146640" fg:w="237"/><text x="40.4755%" y="1023.50"></text></g><g><title>h2::proto::streams::stream::Stream::is_pending_reset_expiration (71 samples, 0.02%)</title><rect x="40.2905%" y="1013" width="0.0195%" height="15" fill="rgb(238,117,24)" fg:x="146877" fg:w="71"/><text x="40.5405%" y="1023.50"></text></g><g><title>h2::frame::data::DataFlags::is_end_stream (66 samples, 0.02%)</title><rect x="40.3632%" y="997" width="0.0181%" height="15" fill="rgb(242,26,26)" fg:x="147142" fg:w="66"/><text x="40.6132%" y="1007.50"></text></g><g><title>&lt;hyper::server::conn::upgrades::UpgradeableConnection&lt;I,S,E&gt; as core::future::future::Future&gt;::poll (108,020 samples, 29.63%)</title><rect x="10.8450%" y="1109" width="29.6315%" height="15" fill="rgb(221,92,48)" fg:x="39535" fg:w="108020"/><text x="11.0950%" y="1119.50">&lt;hyper::server::conn::upgrades::UpgradeableConne..</text></g><g><title>&lt;hyper::proto::h2::server::Server&lt;T,S,B,E&gt; as core::future::future::Future&gt;::poll (108,020 samples, 29.63%)</title><rect x="10.8450%" y="1093" width="29.6315%" height="15" fill="rgb(209,209,32)" fg:x="39535" fg:w="108020"/><text x="11.0950%" y="1103.50">&lt;hyper::proto::h2::server::Server&lt;T,S,B,E&gt; as co..</text></g><g><title>h2::server::Connection&lt;T,B&gt;::poll_accept (108,020 samples, 29.63%)</title><rect x="10.8450%" y="1077" width="29.6315%" height="15" fill="rgb(221,70,22)" fg:x="39535" fg:w="108020"/><text x="11.0950%" y="1087.50">h2::server::Connection&lt;T,B&gt;::poll_accept</text></g><g><title>h2::proto::connection::Connection&lt;T,P,B&gt;::poll (108,020 samples, 29.63%)</title><rect x="10.8450%" y="1061" width="29.6315%" height="15" fill="rgb(248,145,5)" fg:x="39535" fg:w="108020"/><text x="11.0950%" y="1071.50">h2::proto::connection::Connection&lt;T,P,B&gt;::poll</text></g><g><title>h2::proto::streams::streams::Streams&lt;B,P&gt;::poll_complete (97,102 samples, 26.64%)</title><rect x="13.8400%" y="1045" width="26.6365%" height="15" fill="rgb(226,116,26)" fg:x="50453" fg:w="97102"/><text x="14.0900%" y="1055.50">h2::proto::streams::streams::Streams&lt;B,P&gt;::..</text></g><g><title>h2::proto::streams::prioritize::Prioritize::poll_complete (97,102 samples, 26.64%)</title><rect x="13.8400%" y="1029" width="26.6365%" height="15" fill="rgb(244,5,17)" fg:x="50453" fg:w="97102"/><text x="14.0900%" y="1039.50">h2::proto::streams::prioritize::Prioritize:..</text></g><g><title>tracing::span::Span::in_scope (607 samples, 0.17%)</title><rect x="40.3100%" y="1013" width="0.1665%" height="15" fill="rgb(252,159,33)" fg:x="146948" fg:w="607"/><text x="40.5600%" y="1023.50"></text></g><g><title>h2::proto::streams::stream::Stream::send_data (286 samples, 0.08%)</title><rect x="40.3980%" y="997" width="0.0785%" height="15" fill="rgb(206,71,0)" fg:x="147269" fg:w="286"/><text x="40.6480%" y="1007.50"></text></g><g><title>h2::proto::streams::flow_control::FlowControl::send_data (126 samples, 0.03%)</title><rect x="40.4419%" y="981" width="0.0346%" height="15" fill="rgb(233,118,54)" fg:x="147429" fg:w="126"/><text x="40.6919%" y="991.50"></text></g><g><title>&lt;hyper::server::server::new_svc::NewSvcTask&lt;I,N,S,E,W&gt; as core::future::future::Future&gt;::poll (108,028 samples, 29.63%)</title><rect x="10.8431%" y="1125" width="29.6337%" height="15" fill="rgb(234,83,48)" fg:x="39528" fg:w="108028"/><text x="11.0931%" y="1135.50">&lt;hyper::server::server::new_svc::NewSvcTask&lt;I,N,..</text></g><g><title>&lt;stream_book::grpc_routes::grpc_impl::StreamBookAggregator as stream_book::grpc_routes::grpc_impl::order_book_proto::orderbook_aggregator_server::OrderbookAggregator&gt;::book_summary::_{{closure}}::_{{closure}} (131 samples, 0.04%)</title><rect x="40.4850%" y="1125" width="0.0359%" height="15" fill="rgb(228,3,54)" fg:x="147586" fg:w="131"/><text x="40.7350%" y="1135.50"></text></g><g><title>&lt;stream_book::grpc_routes::grpc_impl::order_book_proto::Level as prost::message::Message&gt;::encode_raw (2,695 samples, 0.74%)</title><rect x="40.5209%" y="1125" width="0.7393%" height="15" fill="rgb(226,155,13)" fg:x="147717" fg:w="2695"/><text x="40.7709%" y="1135.50"></text></g><g><title>&lt;tokio::runtime::coop::RestoreOnPending as core::ops::drop::Drop&gt;::drop (59 samples, 0.02%)</title><rect x="41.2676%" y="1125" width="0.0162%" height="15" fill="rgb(241,28,37)" fg:x="150439" fg:w="59"/><text x="41.5176%" y="1135.50"></text></g><g><title>&lt;tonic::codec::encode::EncodeBody&lt;S&gt; as http_body::Body&gt;::poll_data (62 samples, 0.02%)</title><rect x="41.2986%" y="1125" width="0.0170%" height="15" fill="rgb(233,93,10)" fg:x="150552" fg:w="62"/><text x="41.5486%" y="1135.50"></text></g><g><title>&lt;http_body::combinators::map_err::MapErr&lt;B,F&gt; as http_body::Body&gt;::poll_data (61 samples, 0.02%)</title><rect x="41.3170%" y="1109" width="0.0167%" height="15" fill="rgb(225,113,19)" fg:x="150619" fg:w="61"/><text x="41.5670%" y="1119.50"></text></g><g><title>[stream-book] (95 samples, 0.03%)</title><rect x="41.3170%" y="1125" width="0.0261%" height="15" fill="rgb(241,2,18)" fg:x="150619" fg:w="95"/><text x="41.5670%" y="1135.50"></text></g><g><title>[unknown] (3,091 samples, 0.85%)</title><rect x="41.3430%" y="1125" width="0.8479%" height="15" fill="rgb(228,207,21)" fg:x="150714" fg:w="3091"/><text x="41.5930%" y="1135.50"></text></g><g><title>[unknown] (3,051 samples, 0.84%)</title><rect x="41.3540%" y="1109" width="0.8369%" height="15" fill="rgb(213,211,35)" fg:x="150754" fg:w="3051"/><text x="41.6040%" y="1119.50"></text></g><g><title>[unknown] (3,032 samples, 0.83%)</title><rect x="41.3592%" y="1093" width="0.8317%" height="15" fill="rgb(209,83,10)" fg:x="150773" fg:w="3032"/><text x="41.6092%" y="1103.50"></text></g><g><title>[unknown] (2,971 samples, 0.81%)</title><rect x="41.3760%" y="1077" width="0.8150%" height="15" fill="rgb(209,164,1)" fg:x="150834" fg:w="2971"/><text x="41.6260%" y="1087.50"></text></g><g><title>[unknown] (2,881 samples, 0.79%)</title><rect x="41.4007%" y="1061" width="0.7903%" height="15" fill="rgb(213,184,43)" fg:x="150924" fg:w="2881"/><text x="41.6507%" y="1071.50"></text></g><g><title>[unknown] (2,786 samples, 0.76%)</title><rect x="41.4267%" y="1045" width="0.7642%" height="15" fill="rgb(231,61,34)" fg:x="151019" fg:w="2786"/><text x="41.6767%" y="1055.50"></text></g><g><title>[unknown] (2,673 samples, 0.73%)</title><rect x="41.4577%" y="1029" width="0.7332%" height="15" fill="rgb(235,75,3)" fg:x="151132" fg:w="2673"/><text x="41.7077%" y="1039.50"></text></g><g><title>[unknown] (2,487 samples, 0.68%)</title><rect x="41.5087%" y="1013" width="0.6822%" height="15" fill="rgb(220,106,47)" fg:x="151318" fg:w="2487"/><text x="41.7587%" y="1023.50"></text></g><g><title>[unknown] (2,352 samples, 0.65%)</title><rect x="41.5458%" y="997" width="0.6452%" height="15" fill="rgb(210,196,33)" fg:x="151453" fg:w="2352"/><text x="41.7958%" y="1007.50"></text></g><g><title>[unknown] (2,107 samples, 0.58%)</title><rect x="41.6130%" y="981" width="0.5780%" height="15" fill="rgb(229,154,42)" fg:x="151698" fg:w="2107"/><text x="41.8630%" y="991.50"></text></g><g><title>[unknown] (1,901 samples, 0.52%)</title><rect x="41.6695%" y="965" width="0.5215%" height="15" fill="rgb(228,114,26)" fg:x="151904" fg:w="1901"/><text x="41.9195%" y="975.50"></text></g><g><title>[unknown] (1,687 samples, 0.46%)</title><rect x="41.7282%" y="949" width="0.4628%" height="15" fill="rgb(208,144,1)" fg:x="152118" fg:w="1687"/><text x="41.9782%" y="959.50"></text></g><g><title>[unknown] (1,561 samples, 0.43%)</title><rect x="41.7627%" y="933" width="0.4282%" height="15" fill="rgb(239,112,37)" fg:x="152244" fg:w="1561"/><text x="42.0127%" y="943.50"></text></g><g><title>[unknown] (1,479 samples, 0.41%)</title><rect x="41.7852%" y="917" width="0.4057%" height="15" fill="rgb(210,96,50)" fg:x="152326" fg:w="1479"/><text x="42.0352%" y="927.50"></text></g><g><title>[unknown] (1,423 samples, 0.39%)</title><rect x="41.8006%" y="901" width="0.3903%" height="15" fill="rgb(222,178,2)" fg:x="152382" fg:w="1423"/><text x="42.0506%" y="911.50"></text></g><g><title>[unknown] (1,360 samples, 0.37%)</title><rect x="41.8179%" y="885" width="0.3731%" height="15" fill="rgb(226,74,18)" fg:x="152445" fg:w="1360"/><text x="42.0679%" y="895.50"></text></g><g><title>[unknown] (1,299 samples, 0.36%)</title><rect x="41.8346%" y="869" width="0.3563%" height="15" fill="rgb(225,67,54)" fg:x="152506" fg:w="1299"/><text x="42.0846%" y="879.50"></text></g><g><title>[unknown] (1,235 samples, 0.34%)</title><rect x="41.8522%" y="853" width="0.3388%" height="15" fill="rgb(251,92,32)" fg:x="152570" fg:w="1235"/><text x="42.1022%" y="863.50"></text></g><g><title>[unknown] (1,096 samples, 0.30%)</title><rect x="41.8903%" y="837" width="0.3006%" height="15" fill="rgb(228,149,22)" fg:x="152709" fg:w="1096"/><text x="42.1403%" y="847.50"></text></g><g><title>[unknown] (982 samples, 0.27%)</title><rect x="41.9216%" y="821" width="0.2694%" height="15" fill="rgb(243,54,13)" fg:x="152823" fg:w="982"/><text x="42.1716%" y="831.50"></text></g><g><title>[unknown] (906 samples, 0.25%)</title><rect x="41.9424%" y="805" width="0.2485%" height="15" fill="rgb(243,180,28)" fg:x="152899" fg:w="906"/><text x="42.1924%" y="815.50"></text></g><g><title>[unknown] (851 samples, 0.23%)</title><rect x="41.9575%" y="789" width="0.2334%" height="15" fill="rgb(208,167,24)" fg:x="152954" fg:w="851"/><text x="42.2075%" y="799.50"></text></g><g><title>[unknown] (819 samples, 0.22%)</title><rect x="41.9663%" y="773" width="0.2247%" height="15" fill="rgb(245,73,45)" fg:x="152986" fg:w="819"/><text x="42.2163%" y="783.50"></text></g><g><title>[unknown] (798 samples, 0.22%)</title><rect x="41.9720%" y="757" width="0.2189%" height="15" fill="rgb(237,203,48)" fg:x="153007" fg:w="798"/><text x="42.2220%" y="767.50"></text></g><g><title>[unknown] (766 samples, 0.21%)</title><rect x="41.9808%" y="741" width="0.2101%" height="15" fill="rgb(211,197,16)" fg:x="153039" fg:w="766"/><text x="42.2308%" y="751.50"></text></g><g><title>[unknown] (746 samples, 0.20%)</title><rect x="41.9863%" y="725" width="0.2046%" height="15" fill="rgb(243,99,51)" fg:x="153059" fg:w="746"/><text x="42.2363%" y="735.50"></text></g><g><title>[unknown] (737 samples, 0.20%)</title><rect x="41.9888%" y="709" width="0.2022%" height="15" fill="rgb(215,123,29)" fg:x="153068" fg:w="737"/><text x="42.2388%" y="719.50"></text></g><g><title>[unknown] (703 samples, 0.19%)</title><rect x="41.9981%" y="693" width="0.1928%" height="15" fill="rgb(239,186,37)" fg:x="153102" fg:w="703"/><text x="42.2481%" y="703.50"></text></g><g><title>[unknown] (661 samples, 0.18%)</title><rect x="42.0096%" y="677" width="0.1813%" height="15" fill="rgb(252,136,39)" fg:x="153144" fg:w="661"/><text x="42.2596%" y="687.50"></text></g><g><title>[unknown] (634 samples, 0.17%)</title><rect x="42.0170%" y="661" width="0.1739%" height="15" fill="rgb(223,213,32)" fg:x="153171" fg:w="634"/><text x="42.2670%" y="671.50"></text></g><g><title>[unknown] (620 samples, 0.17%)</title><rect x="42.0209%" y="645" width="0.1701%" height="15" fill="rgb(233,115,5)" fg:x="153185" fg:w="620"/><text x="42.2709%" y="655.50"></text></g><g><title>[unknown] (598 samples, 0.16%)</title><rect x="42.0269%" y="629" width="0.1640%" height="15" fill="rgb(207,226,44)" fg:x="153207" fg:w="598"/><text x="42.2769%" y="639.50"></text></g><g><title>[unknown] (515 samples, 0.14%)</title><rect x="42.0497%" y="613" width="0.1413%" height="15" fill="rgb(208,126,0)" fg:x="153290" fg:w="515"/><text x="42.2997%" y="623.50"></text></g><g><title>[unknown] (447 samples, 0.12%)</title><rect x="42.0683%" y="597" width="0.1226%" height="15" fill="rgb(244,66,21)" fg:x="153358" fg:w="447"/><text x="42.3183%" y="607.50"></text></g><g><title>[unknown] (394 samples, 0.11%)</title><rect x="42.0829%" y="581" width="0.1081%" height="15" fill="rgb(222,97,12)" fg:x="153411" fg:w="394"/><text x="42.3329%" y="591.50"></text></g><g><title>[unknown] (352 samples, 0.10%)</title><rect x="42.0944%" y="565" width="0.0966%" height="15" fill="rgb(219,213,19)" fg:x="153453" fg:w="352"/><text x="42.3444%" y="575.50"></text></g><g><title>[unknown] (296 samples, 0.08%)</title><rect x="42.1098%" y="549" width="0.0812%" height="15" fill="rgb(252,169,30)" fg:x="153509" fg:w="296"/><text x="42.3598%" y="559.50"></text></g><g><title>[unknown] (284 samples, 0.08%)</title><rect x="42.1130%" y="533" width="0.0779%" height="15" fill="rgb(206,32,51)" fg:x="153521" fg:w="284"/><text x="42.3630%" y="543.50"></text></g><g><title>[unknown] (267 samples, 0.07%)</title><rect x="42.1177%" y="517" width="0.0732%" height="15" fill="rgb(250,172,42)" fg:x="153538" fg:w="267"/><text x="42.3677%" y="527.50"></text></g><g><title>[unknown] (228 samples, 0.06%)</title><rect x="42.1284%" y="501" width="0.0625%" height="15" fill="rgb(209,34,43)" fg:x="153577" fg:w="228"/><text x="42.3784%" y="511.50"></text></g><g><title>[unknown] (204 samples, 0.06%)</title><rect x="42.1350%" y="485" width="0.0560%" height="15" fill="rgb(223,11,35)" fg:x="153601" fg:w="204"/><text x="42.3850%" y="495.50"></text></g><g><title>[unknown] (180 samples, 0.05%)</title><rect x="42.1416%" y="469" width="0.0494%" height="15" fill="rgb(251,219,26)" fg:x="153625" fg:w="180"/><text x="42.3916%" y="479.50"></text></g><g><title>[unknown] (174 samples, 0.05%)</title><rect x="42.1432%" y="453" width="0.0477%" height="15" fill="rgb(231,119,3)" fg:x="153631" fg:w="174"/><text x="42.3932%" y="463.50"></text></g><g><title>[unknown] (164 samples, 0.04%)</title><rect x="42.1460%" y="437" width="0.0450%" height="15" fill="rgb(216,97,11)" fg:x="153641" fg:w="164"/><text x="42.3960%" y="447.50"></text></g><g><title>[unknown] (162 samples, 0.04%)</title><rect x="42.1465%" y="421" width="0.0444%" height="15" fill="rgb(223,59,9)" fg:x="153643" fg:w="162"/><text x="42.3965%" y="431.50"></text></g><g><title>[unknown] (153 samples, 0.04%)</title><rect x="42.1490%" y="405" width="0.0420%" height="15" fill="rgb(233,93,31)" fg:x="153652" fg:w="153"/><text x="42.3990%" y="415.50"></text></g><g><title>[unknown] (137 samples, 0.04%)</title><rect x="42.1534%" y="389" width="0.0376%" height="15" fill="rgb(239,81,33)" fg:x="153668" fg:w="137"/><text x="42.4034%" y="399.50"></text></g><g><title>[unknown] (105 samples, 0.03%)</title><rect x="42.1621%" y="373" width="0.0288%" height="15" fill="rgb(213,120,34)" fg:x="153700" fg:w="105"/><text x="42.4121%" y="383.50"></text></g><g><title>[unknown] (90 samples, 0.02%)</title><rect x="42.1663%" y="357" width="0.0247%" height="15" fill="rgb(243,49,53)" fg:x="153715" fg:w="90"/><text x="42.4163%" y="367.50"></text></g><g><title>[unknown] (51 samples, 0.01%)</title><rect x="42.1770%" y="341" width="0.0140%" height="15" fill="rgb(247,216,33)" fg:x="153754" fg:w="51"/><text x="42.4270%" y="351.50"></text></g><g><title>__GI___libc_malloc (399 samples, 0.11%)</title><rect x="42.1962%" y="1125" width="0.1095%" height="15" fill="rgb(226,26,14)" fg:x="153824" fg:w="399"/><text x="42.4462%" y="1135.50"></text></g><g><title>__GI___libc_realloc (181 samples, 0.05%)</title><rect x="42.3056%" y="1125" width="0.0497%" height="15" fill="rgb(215,49,53)" fg:x="154223" fg:w="181"/><text x="42.5556%" y="1135.50"></text></g><g><title>__bss_start (54 samples, 0.01%)</title><rect x="42.3553%" y="1125" width="0.0148%" height="15" fill="rgb(245,162,40)" fg:x="154404" fg:w="54"/><text x="42.6053%" y="1135.50"></text></g><g><title>__memmove_avx_unaligned_erms (156 samples, 0.04%)</title><rect x="42.3849%" y="1125" width="0.0428%" height="15" fill="rgb(229,68,17)" fg:x="154512" fg:w="156"/><text x="42.6349%" y="1135.50"></text></g><g><title>__rdl_alloc (73 samples, 0.02%)</title><rect x="42.4277%" y="1125" width="0.0200%" height="15" fill="rgb(213,182,10)" fg:x="154668" fg:w="73"/><text x="42.6777%" y="1135.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (43 samples, 0.01%)</title><rect x="42.4359%" y="1109" width="0.0118%" height="15" fill="rgb(245,125,30)" fg:x="154698" fg:w="43"/><text x="42.6859%" y="1119.50"></text></g><g><title>__rdl_realloc (119 samples, 0.03%)</title><rect x="42.4477%" y="1125" width="0.0326%" height="15" fill="rgb(232,202,2)" fg:x="154741" fg:w="119"/><text x="42.6977%" y="1135.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (54 samples, 0.01%)</title><rect x="42.4655%" y="1109" width="0.0148%" height="15" fill="rgb(237,140,51)" fg:x="154806" fg:w="54"/><text x="42.7155%" y="1119.50"></text></g><g><title>_int_free (848 samples, 0.23%)</title><rect x="42.4834%" y="1125" width="0.2326%" height="15" fill="rgb(236,157,25)" fg:x="154871" fg:w="848"/><text x="42.7334%" y="1135.50"></text></g><g><title>_int_malloc (703 samples, 0.19%)</title><rect x="42.7160%" y="1125" width="0.1928%" height="15" fill="rgb(219,209,0)" fg:x="155719" fg:w="703"/><text x="42.9660%" y="1135.50"></text></g><g><title>_int_realloc (195 samples, 0.05%)</title><rect x="42.9088%" y="1125" width="0.0535%" height="15" fill="rgb(240,116,54)" fg:x="156422" fg:w="195"/><text x="43.1588%" y="1135.50"></text></g><g><title>alloc::raw_vec::finish_grow (160 samples, 0.04%)</title><rect x="42.9782%" y="1125" width="0.0439%" height="15" fill="rgb(216,10,36)" fg:x="156675" fg:w="160"/><text x="43.2282%" y="1135.50"></text></g><g><title>bytes::buf::buf_mut::BufMut::put_slice (14,088 samples, 3.86%)</title><rect x="43.0221%" y="1125" width="3.8645%" height="15" fill="rgb(222,72,44)" fg:x="156835" fg:w="14088"/><text x="43.2721%" y="1135.50">byte..</text></g><g><title>bytes::buf::uninit_slice::UninitSlice::from_slice (510 samples, 0.14%)</title><rect x="46.8867%" y="1125" width="0.1399%" height="15" fill="rgb(232,159,9)" fg:x="170923" fg:w="510"/><text x="47.1367%" y="1135.50"></text></g><g><title>bytes::bytes_mut::BytesMut::freeze (54 samples, 0.01%)</title><rect x="47.0266%" y="1125" width="0.0148%" height="15" fill="rgb(210,39,32)" fg:x="171433" fg:w="54"/><text x="47.2766%" y="1135.50"></text></g><g><title>bytes::bytes_mut::BytesMut::reserve_inner (63 samples, 0.02%)</title><rect x="47.0414%" y="1125" width="0.0173%" height="15" fill="rgb(216,194,45)" fg:x="171487" fg:w="63"/><text x="47.2914%" y="1135.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop (125 samples, 0.03%)</title><rect x="47.0625%" y="1125" width="0.0343%" height="15" fill="rgb(218,18,35)" fg:x="171564" fg:w="125"/><text x="47.3125%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;stream_book::grpc_routes::grpc_impl::order_book_proto::Summary&gt; (322 samples, 0.09%)</title><rect x="47.1097%" y="1125" width="0.0883%" height="15" fill="rgb(207,83,51)" fg:x="171736" fg:w="322"/><text x="47.3597%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Entered&gt; (65 samples, 0.02%)</title><rect x="47.2027%" y="1125" width="0.0178%" height="15" fill="rgb(225,63,43)" fg:x="172075" fg:w="65"/><text x="47.4527%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Span&gt; (191 samples, 0.05%)</title><rect x="47.2205%" y="1125" width="0.0524%" height="15" fill="rgb(207,57,36)" fg:x="172140" fg:w="191"/><text x="47.4705%" y="1135.50"></text></g><g><title>h2::codec::framed_read::decode_frame (99 samples, 0.03%)</title><rect x="47.2902%" y="1125" width="0.0272%" height="15" fill="rgb(216,99,33)" fg:x="172394" fg:w="99"/><text x="47.5402%" y="1135.50"></text></g><g><title>h2::codec::framed_write::FramedWrite&lt;T,B&gt;::buffer (383 samples, 0.11%)</title><rect x="47.3173%" y="1125" width="0.1051%" height="15" fill="rgb(225,42,16)" fg:x="172493" fg:w="383"/><text x="47.5673%" y="1135.50"></text></g><g><title>h2::codec::framed_write::FramedWrite&lt;T,B&gt;::flush (335 samples, 0.09%)</title><rect x="47.4224%" y="1125" width="0.0919%" height="15" fill="rgb(220,201,45)" fg:x="172876" fg:w="335"/><text x="47.6724%" y="1135.50"></text></g><g><title>h2::frame::ping::Ping::encode (76 samples, 0.02%)</title><rect x="47.5198%" y="1125" width="0.0208%" height="15" fill="rgb(225,33,4)" fg:x="173231" fg:w="76"/><text x="47.7698%" y="1135.50"></text></g><g><title>h2::proto::ping_pong::PingPong::recv_ping (62 samples, 0.02%)</title><rect x="47.5497%" y="1125" width="0.0170%" height="15" fill="rgb(224,33,50)" fg:x="173340" fg:w="62"/><text x="47.7997%" y="1135.50"></text></g><g><title>h2::proto::streams::buffer::Deque::pop_front (104 samples, 0.03%)</title><rect x="47.5763%" y="1125" width="0.0285%" height="15" fill="rgb(246,198,51)" fg:x="173437" fg:w="104"/><text x="47.8263%" y="1135.50"></text></g><g><title>h2::proto::streams::counts::Counts::transition_after (65 samples, 0.02%)</title><rect x="47.6084%" y="1125" width="0.0178%" height="15" fill="rgb(205,22,4)" fg:x="173554" fg:w="65"/><text x="47.8584%" y="1135.50"></text></g><g><title>h2::proto::streams::prioritize::Prioritize::poll_complete (609 samples, 0.17%)</title><rect x="47.6295%" y="1125" width="0.1671%" height="15" fill="rgb(206,3,8)" fg:x="173631" fg:w="609"/><text x="47.8795%" y="1135.50"></text></g><g><title>h2::proto::streams::prioritize::Prioritize::reclaim_frame (308 samples, 0.08%)</title><rect x="47.8015%" y="1125" width="0.0845%" height="15" fill="rgb(251,23,15)" fg:x="174258" fg:w="308"/><text x="48.0515%" y="1135.50"></text></g><g><title>h2::proto::streams::prioritize::Prioritize::schedule_pending_open (161 samples, 0.04%)</title><rect x="47.8901%" y="1125" width="0.0442%" height="15" fill="rgb(252,88,28)" fg:x="174581" fg:w="161"/><text x="48.1401%" y="1135.50"></text></g><g><title>h2::proto::streams::prioritize::Prioritize::try_assign_capacity (73 samples, 0.02%)</title><rect x="47.9398%" y="1125" width="0.0200%" height="15" fill="rgb(212,127,14)" fg:x="174762" fg:w="73"/><text x="48.1898%" y="1135.50"></text></g><g><title>h2::proto::streams::recv::Recv::clear_expired_reset_streams (45 samples, 0.01%)</title><rect x="47.9598%" y="1125" width="0.0123%" height="15" fill="rgb(247,145,37)" fg:x="174835" fg:w="45"/><text x="48.2098%" y="1135.50"></text></g><g><title>h2::proto::streams::recv::Recv::poll_complete (110 samples, 0.03%)</title><rect x="47.9727%" y="1125" width="0.0302%" height="15" fill="rgb(209,117,53)" fg:x="174882" fg:w="110"/><text x="48.2227%" y="1135.50"></text></g><g><title>h2::proto::streams::recv::Recv::send_pending_refusal (59 samples, 0.02%)</title><rect x="48.0029%" y="1125" width="0.0162%" height="15" fill="rgb(212,90,42)" fg:x="174992" fg:w="59"/><text x="48.2529%" y="1135.50"></text></g><g><title>h2::proto::streams::store::Queue&lt;N&gt;::pop (341 samples, 0.09%)</title><rect x="48.0385%" y="1125" width="0.0935%" height="15" fill="rgb(218,164,37)" fg:x="175122" fg:w="341"/><text x="48.2885%" y="1135.50"></text></g><g><title>h2::proto::streams::store::Queue&lt;N&gt;::push (159 samples, 0.04%)</title><rect x="48.1321%" y="1125" width="0.0436%" height="15" fill="rgb(246,65,34)" fg:x="175463" fg:w="159"/><text x="48.3821%" y="1135.50"></text></g><g><title>h2::proto::streams::stream::Stream::assign_capacity (64 samples, 0.02%)</title><rect x="48.1757%" y="1125" width="0.0176%" height="15" fill="rgb(231,100,33)" fg:x="175622" fg:w="64"/><text x="48.4257%" y="1135.50"></text></g><g><title>h2::proto::streams::stream::Stream::notify_capacity (74 samples, 0.02%)</title><rect x="48.1932%" y="1125" width="0.0203%" height="15" fill="rgb(228,126,14)" fg:x="175686" fg:w="74"/><text x="48.4432%" y="1135.50"></text></g><g><title>h2::proto::streams::streams::DynStreams&lt;B&gt;::recv_window_update (135 samples, 0.04%)</title><rect x="48.2196%" y="1125" width="0.0370%" height="15" fill="rgb(215,173,21)" fg:x="175782" fg:w="135"/><text x="48.4696%" y="1135.50"></text></g><g><title>malloc_consolidate (199 samples, 0.05%)</title><rect x="48.2769%" y="1125" width="0.0546%" height="15" fill="rgb(210,6,40)" fg:x="175991" fg:w="199"/><text x="48.5269%" y="1135.50"></text></g><g><title>mio::poll::Poll::poll (52 samples, 0.01%)</title><rect x="48.3315%" y="1125" width="0.0143%" height="15" fill="rgb(212,48,18)" fg:x="176190" fg:w="52"/><text x="48.5815%" y="1135.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (49 samples, 0.01%)</title><rect x="48.3474%" y="1125" width="0.0134%" height="15" fill="rgb(230,214,11)" fg:x="176248" fg:w="49"/><text x="48.5974%" y="1135.50"></text></g><g><title>prost::encoding::message::encode (520 samples, 0.14%)</title><rect x="48.3735%" y="1125" width="0.1426%" height="15" fill="rgb(254,105,39)" fg:x="176343" fg:w="520"/><text x="48.6235%" y="1135.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (95 samples, 0.03%)</title><rect x="48.5306%" y="1125" width="0.0261%" height="15" fill="rgb(245,158,5)" fg:x="176916" fg:w="95"/><text x="48.7806%" y="1135.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (125 samples, 0.03%)</title><rect x="48.5570%" y="1125" width="0.0343%" height="15" fill="rgb(249,208,11)" fg:x="177012" fg:w="125"/><text x="48.8070%" y="1135.50"></text></g><g><title>syscall (65 samples, 0.02%)</title><rect x="48.5954%" y="1125" width="0.0178%" height="15" fill="rgb(210,39,28)" fg:x="177152" fg:w="65"/><text x="48.8454%" y="1135.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write (142 samples, 0.04%)</title><rect x="48.6173%" y="1125" width="0.0390%" height="15" fill="rgb(211,56,53)" fg:x="177232" fg:w="142"/><text x="48.8673%" y="1135.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (46 samples, 0.01%)</title><rect x="48.6437%" y="1109" width="0.0126%" height="15" fill="rgb(226,201,30)" fg:x="177328" fg:w="46"/><text x="48.8937%" y="1119.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (46 samples, 0.01%)</title><rect x="48.6437%" y="1093" width="0.0126%" height="15" fill="rgb(239,101,34)" fg:x="177328" fg:w="46"/><text x="48.8937%" y="1103.50"></text></g><g><title>std::sys_common::net::TcpStream::write (46 samples, 0.01%)</title><rect x="48.6437%" y="1077" width="0.0126%" height="15" fill="rgb(226,209,5)" fg:x="177328" fg:w="46"/><text x="48.8937%" y="1087.50"></text></g><g><title>__libc_send (46 samples, 0.01%)</title><rect x="48.6437%" y="1061" width="0.0126%" height="15" fill="rgb(250,105,47)" fg:x="177328" fg:w="46"/><text x="48.8937%" y="1071.50"></text></g><g><title>__libc_send (46 samples, 0.01%)</title><rect x="48.6437%" y="1045" width="0.0126%" height="15" fill="rgb(230,72,3)" fg:x="177328" fg:w="46"/><text x="48.8937%" y="1055.50"></text></g><g><title>[unknown] (46 samples, 0.01%)</title><rect x="48.6437%" y="1029" width="0.0126%" height="15" fill="rgb(232,218,39)" fg:x="177328" fg:w="46"/><text x="48.8937%" y="1039.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (69 samples, 0.02%)</title><rect x="48.6763%" y="1125" width="0.0189%" height="15" fill="rgb(248,166,6)" fg:x="177447" fg:w="69"/><text x="48.9263%" y="1135.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Parker::park (46 samples, 0.01%)</title><rect x="48.6969%" y="1125" width="0.0126%" height="15" fill="rgb(247,89,20)" fg:x="177522" fg:w="46"/><text x="48.9469%" y="1135.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into (69 samples, 0.02%)</title><rect x="48.7100%" y="1125" width="0.0189%" height="15" fill="rgb(248,130,54)" fg:x="177570" fg:w="69"/><text x="48.9600%" y="1135.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::schedule (49 samples, 0.01%)</title><rect x="48.7366%" y="1125" width="0.0134%" height="15" fill="rgb(234,196,4)" fg:x="177667" fg:w="49"/><text x="48.9866%" y="1135.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (44 samples, 0.01%)</title><rect x="48.7591%" y="1125" width="0.0121%" height="15" fill="rgb(250,143,31)" fg:x="177749" fg:w="44"/><text x="49.0091%" y="1135.50"></text></g><g><title>&lt;hyper::server::server::new_svc::NewSvcTask&lt;I,N,S,E,W&gt; as core::future::future::Future&gt;::poll (111 samples, 0.03%)</title><rect x="48.8236%" y="1077" width="0.0304%" height="15" fill="rgb(211,110,34)" fg:x="177984" fg:w="111"/><text x="49.0736%" y="1087.50"></text></g><g><title>&lt;hyper::server::conn::upgrades::UpgradeableConnection&lt;I,S,E&gt; as core::future::future::Future&gt;::poll (111 samples, 0.03%)</title><rect x="48.8236%" y="1061" width="0.0304%" height="15" fill="rgb(215,124,48)" fg:x="177984" fg:w="111"/><text x="49.0736%" y="1071.50"></text></g><g><title>&lt;hyper::proto::h2::server::Server&lt;T,S,B,E&gt; as core::future::future::Future&gt;::poll (111 samples, 0.03%)</title><rect x="48.8236%" y="1045" width="0.0304%" height="15" fill="rgb(216,46,13)" fg:x="177984" fg:w="111"/><text x="49.0736%" y="1055.50"></text></g><g><title>__rust_probestack (111 samples, 0.03%)</title><rect x="48.8236%" y="1029" width="0.0304%" height="15" fill="rgb(205,184,25)" fg:x="177984" fg:w="111"/><text x="49.0736%" y="1039.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (280 samples, 0.08%)</title><rect x="48.7778%" y="1125" width="0.0768%" height="15" fill="rgb(228,1,10)" fg:x="177817" fg:w="280"/><text x="49.0278%" y="1135.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (114 samples, 0.03%)</title><rect x="48.8233%" y="1109" width="0.0313%" height="15" fill="rgb(213,116,27)" fg:x="177983" fg:w="114"/><text x="49.0733%" y="1119.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (114 samples, 0.03%)</title><rect x="48.8233%" y="1093" width="0.0313%" height="15" fill="rgb(241,95,50)" fg:x="177983" fg:w="114"/><text x="49.0733%" y="1103.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_idle (53 samples, 0.01%)</title><rect x="48.8601%" y="1125" width="0.0145%" height="15" fill="rgb(238,48,32)" fg:x="178117" fg:w="53"/><text x="49.1101%" y="1135.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (92 samples, 0.03%)</title><rect x="48.8831%" y="1125" width="0.0252%" height="15" fill="rgb(235,113,49)" fg:x="178201" fg:w="92"/><text x="49.1331%" y="1135.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_expiration (79 samples, 0.02%)</title><rect x="48.9221%" y="1125" width="0.0217%" height="15" fill="rgb(205,127,43)" fg:x="178343" fg:w="79"/><text x="49.1721%" y="1135.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::add_permits_locked (64 samples, 0.02%)</title><rect x="48.9440%" y="1125" width="0.0176%" height="15" fill="rgb(250,162,2)" fg:x="178423" fg:w="64"/><text x="49.1940%" y="1135.50"></text></g><g><title>tokio::sync::mpsc::list::Rx&lt;T&gt;::pop (143 samples, 0.04%)</title><rect x="48.9657%" y="1125" width="0.0392%" height="15" fill="rgb(220,13,41)" fg:x="178502" fg:w="143"/><text x="49.2157%" y="1135.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::register_by_ref (37 samples, 0.01%)</title><rect x="49.0074%" y="1125" width="0.0101%" height="15" fill="rgb(249,221,25)" fg:x="178654" fg:w="37"/><text x="49.2574%" y="1135.50"></text></g><g><title>tracing::span::Span::in_scope (308 samples, 0.08%)</title><rect x="49.0277%" y="1125" width="0.0845%" height="15" fill="rgb(215,208,19)" fg:x="178728" fg:w="308"/><text x="49.2777%" y="1135.50"></text></g><g><title>[unknown] (145,578 samples, 39.93%)</title><rect x="9.1947%" y="1141" width="39.9342%" height="15" fill="rgb(236,175,2)" fg:x="33519" fg:w="145578"/><text x="9.4447%" y="1151.50">[unknown]</text></g><g><title>unlink_chunk (52 samples, 0.01%)</title><rect x="49.1146%" y="1125" width="0.0143%" height="15" fill="rgb(241,52,2)" fg:x="179045" fg:w="52"/><text x="49.3646%" y="1135.50"></text></g><g><title>[unknown] (50 samples, 0.01%)</title><rect x="49.4644%" y="917" width="0.0137%" height="15" fill="rgb(248,140,14)" fg:x="180320" fg:w="50"/><text x="49.7144%" y="927.50"></text></g><g><title>[unknown] (47 samples, 0.01%)</title><rect x="49.4652%" y="901" width="0.0129%" height="15" fill="rgb(253,22,42)" fg:x="180323" fg:w="47"/><text x="49.7152%" y="911.50"></text></g><g><title>[unknown] (45 samples, 0.01%)</title><rect x="49.4658%" y="885" width="0.0123%" height="15" fill="rgb(234,61,47)" fg:x="180325" fg:w="45"/><text x="49.7158%" y="895.50"></text></g><g><title>[unknown] (43 samples, 0.01%)</title><rect x="49.4663%" y="869" width="0.0118%" height="15" fill="rgb(208,226,15)" fg:x="180327" fg:w="43"/><text x="49.7163%" y="879.50"></text></g><g><title>[unknown] (43 samples, 0.01%)</title><rect x="49.4663%" y="853" width="0.0118%" height="15" fill="rgb(217,221,4)" fg:x="180327" fg:w="43"/><text x="49.7163%" y="863.50"></text></g><g><title>[unknown] (41 samples, 0.01%)</title><rect x="49.4669%" y="837" width="0.0112%" height="15" fill="rgb(212,174,34)" fg:x="180329" fg:w="41"/><text x="49.7169%" y="847.50"></text></g><g><title>[unknown] (40 samples, 0.01%)</title><rect x="49.4671%" y="821" width="0.0110%" height="15" fill="rgb(253,83,4)" fg:x="180330" fg:w="40"/><text x="49.7171%" y="831.50"></text></g><g><title>[unknown] (37 samples, 0.01%)</title><rect x="49.4680%" y="805" width="0.0101%" height="15" fill="rgb(250,195,49)" fg:x="180333" fg:w="37"/><text x="49.7180%" y="815.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::transition_worker_to_parked (116 samples, 0.03%)</title><rect x="49.4814%" y="917" width="0.0318%" height="15" fill="rgb(241,192,25)" fg:x="180382" fg:w="116"/><text x="49.7314%" y="927.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::unpark_worker_by_id (94 samples, 0.03%)</title><rect x="49.5132%" y="917" width="0.0258%" height="15" fill="rgb(208,124,10)" fg:x="180498" fg:w="94"/><text x="49.7632%" y="927.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into (769 samples, 0.21%)</title><rect x="49.5390%" y="917" width="0.2109%" height="15" fill="rgb(222,33,0)" fg:x="180592" fg:w="769"/><text x="49.7890%" y="927.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_if_work_pending (58 samples, 0.02%)</title><rect x="49.7500%" y="917" width="0.0159%" height="15" fill="rgb(234,209,28)" fg:x="181361" fg:w="58"/><text x="50.0000%" y="927.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (72 samples, 0.02%)</title><rect x="49.8235%" y="901" width="0.0198%" height="15" fill="rgb(224,11,23)" fg:x="181629" fg:w="72"/><text x="50.0735%" y="911.50"></text></g><g><title>syscall (65 samples, 0.02%)</title><rect x="49.8254%" y="885" width="0.0178%" height="15" fill="rgb(232,99,1)" fg:x="181636" fg:w="65"/><text x="50.0754%" y="895.50"></text></g><g><title>[unknown] (65 samples, 0.02%)</title><rect x="49.8254%" y="869" width="0.0178%" height="15" fill="rgb(237,95,45)" fg:x="181636" fg:w="65"/><text x="50.0754%" y="879.50"></text></g><g><title>[unknown] (65 samples, 0.02%)</title><rect x="49.8254%" y="853" width="0.0178%" height="15" fill="rgb(208,109,11)" fg:x="181636" fg:w="65"/><text x="50.0754%" y="863.50"></text></g><g><title>[unknown] (64 samples, 0.02%)</title><rect x="49.8257%" y="837" width="0.0176%" height="15" fill="rgb(216,190,48)" fg:x="181637" fg:w="64"/><text x="50.0757%" y="847.50"></text></g><g><title>[unknown] (63 samples, 0.02%)</title><rect x="49.8259%" y="821" width="0.0173%" height="15" fill="rgb(251,171,36)" fg:x="181638" fg:w="63"/><text x="50.0759%" y="831.50"></text></g><g><title>[unknown] (61 samples, 0.02%)</title><rect x="49.8265%" y="805" width="0.0167%" height="15" fill="rgb(230,62,22)" fg:x="181640" fg:w="61"/><text x="50.0765%" y="815.50"></text></g><g><title>[unknown] (59 samples, 0.02%)</title><rect x="49.8270%" y="789" width="0.0162%" height="15" fill="rgb(225,114,35)" fg:x="181642" fg:w="59"/><text x="50.0770%" y="799.50"></text></g><g><title>[unknown] (56 samples, 0.02%)</title><rect x="49.8279%" y="773" width="0.0154%" height="15" fill="rgb(215,118,42)" fg:x="181645" fg:w="56"/><text x="50.0779%" y="783.50"></text></g><g><title>[unknown] (53 samples, 0.01%)</title><rect x="49.8287%" y="757" width="0.0145%" height="15" fill="rgb(243,119,21)" fg:x="181648" fg:w="53"/><text x="50.0787%" y="767.50"></text></g><g><title>[unknown] (47 samples, 0.01%)</title><rect x="49.8303%" y="741" width="0.0129%" height="15" fill="rgb(252,177,53)" fg:x="181654" fg:w="47"/><text x="50.0803%" y="751.50"></text></g><g><title>[unknown] (38 samples, 0.01%)</title><rect x="49.8328%" y="725" width="0.0104%" height="15" fill="rgb(237,209,29)" fg:x="181663" fg:w="38"/><text x="50.0828%" y="735.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (174 samples, 0.05%)</title><rect x="49.8432%" y="901" width="0.0477%" height="15" fill="rgb(212,65,23)" fg:x="181701" fg:w="174"/><text x="50.0932%" y="911.50"></text></g><g><title>tokio::runtime::context::CONTEXT::__getit (96 samples, 0.03%)</title><rect x="49.8646%" y="885" width="0.0263%" height="15" fill="rgb(230,222,46)" fg:x="181779" fg:w="96"/><text x="50.1146%" y="895.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (4,535 samples, 1.24%)</title><rect x="50.0923%" y="885" width="1.2440%" height="15" fill="rgb(215,135,32)" fg:x="182609" fg:w="4535"/><text x="50.3423%" y="895.50"></text></g><g><title>syscall (4,084 samples, 1.12%)</title><rect x="50.2160%" y="869" width="1.1203%" height="15" fill="rgb(246,101,22)" fg:x="183060" fg:w="4084"/><text x="50.4660%" y="879.50"></text></g><g><title>[unknown] (3,967 samples, 1.09%)</title><rect x="50.2481%" y="853" width="1.0882%" height="15" fill="rgb(206,107,13)" fg:x="183177" fg:w="3967"/><text x="50.4981%" y="863.50"></text></g><g><title>[unknown] (3,820 samples, 1.05%)</title><rect x="50.2884%" y="837" width="1.0479%" height="15" fill="rgb(250,100,44)" fg:x="183324" fg:w="3820"/><text x="50.5384%" y="847.50"></text></g><g><title>[unknown] (3,777 samples, 1.04%)</title><rect x="50.3002%" y="821" width="1.0361%" height="15" fill="rgb(231,147,38)" fg:x="183367" fg:w="3777"/><text x="50.5502%" y="831.50"></text></g><g><title>[unknown] (3,706 samples, 1.02%)</title><rect x="50.3197%" y="805" width="1.0166%" height="15" fill="rgb(229,8,40)" fg:x="183438" fg:w="3706"/><text x="50.5697%" y="815.50"></text></g><g><title>[unknown] (3,575 samples, 0.98%)</title><rect x="50.3556%" y="789" width="0.9807%" height="15" fill="rgb(221,135,30)" fg:x="183569" fg:w="3575"/><text x="50.6056%" y="799.50"></text></g><g><title>[unknown] (3,397 samples, 0.93%)</title><rect x="50.4045%" y="773" width="0.9318%" height="15" fill="rgb(249,193,18)" fg:x="183747" fg:w="3397"/><text x="50.6545%" y="783.50"></text></g><g><title>[unknown] (3,009 samples, 0.83%)</title><rect x="50.5109%" y="757" width="0.8254%" height="15" fill="rgb(209,133,39)" fg:x="184135" fg:w="3009"/><text x="50.7609%" y="767.50"></text></g><g><title>[unknown] (2,940 samples, 0.81%)</title><rect x="50.5298%" y="741" width="0.8065%" height="15" fill="rgb(232,100,14)" fg:x="184204" fg:w="2940"/><text x="50.7798%" y="751.50"></text></g><g><title>[unknown] (2,747 samples, 0.75%)</title><rect x="50.5828%" y="725" width="0.7535%" height="15" fill="rgb(224,185,1)" fg:x="184397" fg:w="2747"/><text x="50.8328%" y="735.50"></text></g><g><title>[unknown] (2,347 samples, 0.64%)</title><rect x="50.6925%" y="709" width="0.6438%" height="15" fill="rgb(223,139,8)" fg:x="184797" fg:w="2347"/><text x="50.9425%" y="719.50"></text></g><g><title>[unknown] (1,550 samples, 0.43%)</title><rect x="50.9111%" y="693" width="0.4252%" height="15" fill="rgb(232,213,38)" fg:x="185594" fg:w="1550"/><text x="51.1611%" y="703.50"></text></g><g><title>[unknown] (1,273 samples, 0.35%)</title><rect x="50.9871%" y="677" width="0.3492%" height="15" fill="rgb(207,94,22)" fg:x="185871" fg:w="1273"/><text x="51.2371%" y="687.50"></text></g><g><title>[unknown] (921 samples, 0.25%)</title><rect x="51.0837%" y="661" width="0.2526%" height="15" fill="rgb(219,183,54)" fg:x="186223" fg:w="921"/><text x="51.3337%" y="671.50"></text></g><g><title>[unknown] (656 samples, 0.18%)</title><rect x="51.1564%" y="645" width="0.1800%" height="15" fill="rgb(216,185,54)" fg:x="186488" fg:w="656"/><text x="51.4064%" y="655.50"></text></g><g><title>[unknown] (159 samples, 0.04%)</title><rect x="51.2927%" y="629" width="0.0436%" height="15" fill="rgb(254,217,39)" fg:x="186985" fg:w="159"/><text x="51.5427%" y="639.50"></text></g><g><title>[unknown] (126 samples, 0.03%)</title><rect x="51.3018%" y="613" width="0.0346%" height="15" fill="rgb(240,178,23)" fg:x="187018" fg:w="126"/><text x="51.5518%" y="623.50"></text></g><g><title>[unknown] (97 samples, 0.03%)</title><rect x="51.3097%" y="597" width="0.0266%" height="15" fill="rgb(218,11,47)" fg:x="187047" fg:w="97"/><text x="51.5597%" y="607.50"></text></g><g><title>[unknown] (77 samples, 0.02%)</title><rect x="51.3152%" y="581" width="0.0211%" height="15" fill="rgb(218,51,51)" fg:x="187067" fg:w="77"/><text x="51.5652%" y="591.50"></text></g><g><title>[unknown] (63 samples, 0.02%)</title><rect x="51.3190%" y="565" width="0.0173%" height="15" fill="rgb(238,126,27)" fg:x="187081" fg:w="63"/><text x="51.5690%" y="575.50"></text></g><g><title>[unknown] (54 samples, 0.01%)</title><rect x="51.3215%" y="549" width="0.0148%" height="15" fill="rgb(249,202,22)" fg:x="187090" fg:w="54"/><text x="51.5715%" y="559.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (40 samples, 0.01%)</title><rect x="51.3991%" y="869" width="0.0110%" height="15" fill="rgb(254,195,49)" fg:x="187373" fg:w="40"/><text x="51.6491%" y="879.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time (428 samples, 0.12%)</title><rect x="51.3402%" y="885" width="0.1174%" height="15" fill="rgb(208,123,14)" fg:x="187158" fg:w="428"/><text x="51.5902%" y="895.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::poll (173 samples, 0.05%)</title><rect x="51.4101%" y="869" width="0.0475%" height="15" fill="rgb(224,200,8)" fg:x="187413" fg:w="173"/><text x="51.6601%" y="879.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (137 samples, 0.04%)</title><rect x="51.4200%" y="853" width="0.0376%" height="15" fill="rgb(217,61,36)" fg:x="187449" fg:w="137"/><text x="51.6700%" y="863.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_expiration (108 samples, 0.03%)</title><rect x="51.4279%" y="837" width="0.0296%" height="15" fill="rgb(206,35,45)" fg:x="187478" fg:w="108"/><text x="51.6779%" y="847.50"></text></g><g><title>__GI___clock_gettime (260 samples, 0.07%)</title><rect x="51.5058%" y="853" width="0.0713%" height="15" fill="rgb(217,65,33)" fg:x="187762" fg:w="260"/><text x="51.7558%" y="863.50"></text></g><g><title>__vdso_clock_gettime (74 samples, 0.02%)</title><rect x="51.5569%" y="837" width="0.0203%" height="15" fill="rgb(222,158,48)" fg:x="187948" fg:w="74"/><text x="51.8069%" y="847.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (268 samples, 0.07%)</title><rect x="51.5039%" y="869" width="0.0735%" height="15" fill="rgb(254,2,54)" fg:x="187755" fg:w="268"/><text x="51.7539%" y="879.50"></text></g><g><title>std::time::Instant::now (44 samples, 0.01%)</title><rect x="51.5843%" y="869" width="0.0121%" height="15" fill="rgb(250,143,38)" fg:x="188048" fg:w="44"/><text x="51.8343%" y="879.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (44 samples, 0.01%)</title><rect x="51.5843%" y="853" width="0.0121%" height="15" fill="rgb(248,25,0)" fg:x="188048" fg:w="44"/><text x="51.8343%" y="863.50"></text></g><g><title>tokio::process::imp::orphan::OrphanQueueImpl&lt;T&gt;::reap_orphans (127 samples, 0.03%)</title><rect x="51.5964%" y="869" width="0.0348%" height="15" fill="rgb(206,152,27)" fg:x="188092" fg:w="127"/><text x="51.8464%" y="879.50"></text></g><g><title>&lt;&amp;mio::event::events::Events as core::iter::traits::collect::IntoIterator&gt;::into_iter (44 samples, 0.01%)</title><rect x="51.7066%" y="853" width="0.0121%" height="15" fill="rgb(240,77,30)" fg:x="188494" fg:w="44"/><text x="51.9566%" y="863.50"></text></g><g><title>mio::event::event::Event::token (38 samples, 0.01%)</title><rect x="51.7486%" y="853" width="0.0104%" height="15" fill="rgb(231,5,3)" fg:x="188647" fg:w="38"/><text x="51.9986%" y="863.50"></text></g><g><title>[unknown] (4,742 samples, 1.30%)</title><rect x="51.8394%" y="821" width="1.3008%" height="15" fill="rgb(207,226,32)" fg:x="188978" fg:w="4742"/><text x="52.0894%" y="831.50"></text></g><g><title>[unknown] (4,581 samples, 1.26%)</title><rect x="51.8836%" y="805" width="1.2566%" height="15" fill="rgb(222,207,47)" fg:x="189139" fg:w="4581"/><text x="52.1336%" y="815.50"></text></g><g><title>[unknown] (4,518 samples, 1.24%)</title><rect x="51.9009%" y="789" width="1.2394%" height="15" fill="rgb(229,115,45)" fg:x="189202" fg:w="4518"/><text x="52.1509%" y="799.50"></text></g><g><title>[unknown] (4,465 samples, 1.22%)</title><rect x="51.9154%" y="773" width="1.2248%" height="15" fill="rgb(224,191,6)" fg:x="189255" fg:w="4465"/><text x="52.1654%" y="783.50"></text></g><g><title>[unknown] (4,351 samples, 1.19%)</title><rect x="51.9467%" y="757" width="1.1935%" height="15" fill="rgb(230,227,24)" fg:x="189369" fg:w="4351"/><text x="52.1967%" y="767.50"></text></g><g><title>[unknown] (3,783 samples, 1.04%)</title><rect x="52.1025%" y="741" width="1.0377%" height="15" fill="rgb(228,80,19)" fg:x="189937" fg:w="3783"/><text x="52.3525%" y="751.50"></text></g><g><title>[unknown] (3,123 samples, 0.86%)</title><rect x="52.2835%" y="725" width="0.8567%" height="15" fill="rgb(247,229,0)" fg:x="190597" fg:w="3123"/><text x="52.5335%" y="735.50"></text></g><g><title>[unknown] (2,808 samples, 0.77%)</title><rect x="52.3699%" y="709" width="0.7703%" height="15" fill="rgb(237,194,15)" fg:x="190912" fg:w="2808"/><text x="52.6199%" y="719.50"></text></g><g><title>[unknown] (2,647 samples, 0.73%)</title><rect x="52.4141%" y="693" width="0.7261%" height="15" fill="rgb(219,203,20)" fg:x="191073" fg:w="2647"/><text x="52.6641%" y="703.50"></text></g><g><title>[unknown] (2,443 samples, 0.67%)</title><rect x="52.4701%" y="677" width="0.6702%" height="15" fill="rgb(234,128,8)" fg:x="191277" fg:w="2443"/><text x="52.7201%" y="687.50"></text></g><g><title>[unknown] (2,075 samples, 0.57%)</title><rect x="52.5710%" y="661" width="0.5692%" height="15" fill="rgb(248,202,8)" fg:x="191645" fg:w="2075"/><text x="52.8210%" y="671.50"></text></g><g><title>[unknown] (1,321 samples, 0.36%)</title><rect x="52.7778%" y="645" width="0.3624%" height="15" fill="rgb(206,104,37)" fg:x="192399" fg:w="1321"/><text x="53.0278%" y="655.50"></text></g><g><title>[unknown] (1,068 samples, 0.29%)</title><rect x="52.8472%" y="629" width="0.2930%" height="15" fill="rgb(223,8,27)" fg:x="192652" fg:w="1068"/><text x="53.0972%" y="639.50"></text></g><g><title>[unknown] (742 samples, 0.20%)</title><rect x="52.9367%" y="613" width="0.2035%" height="15" fill="rgb(216,217,28)" fg:x="192978" fg:w="742"/><text x="53.1867%" y="623.50"></text></g><g><title>[unknown] (525 samples, 0.14%)</title><rect x="52.9962%" y="597" width="0.1440%" height="15" fill="rgb(249,199,1)" fg:x="193195" fg:w="525"/><text x="53.2462%" y="607.50"></text></g><g><title>[unknown] (144 samples, 0.04%)</title><rect x="53.1007%" y="581" width="0.0395%" height="15" fill="rgb(240,85,17)" fg:x="193576" fg:w="144"/><text x="53.3507%" y="591.50"></text></g><g><title>[unknown] (115 samples, 0.03%)</title><rect x="53.1087%" y="565" width="0.0315%" height="15" fill="rgb(206,108,45)" fg:x="193605" fg:w="115"/><text x="53.3587%" y="575.50"></text></g><g><title>[unknown] (86 samples, 0.02%)</title><rect x="53.1166%" y="549" width="0.0236%" height="15" fill="rgb(245,210,41)" fg:x="193634" fg:w="86"/><text x="53.3666%" y="559.50"></text></g><g><title>[unknown] (70 samples, 0.02%)</title><rect x="53.1210%" y="533" width="0.0192%" height="15" fill="rgb(206,13,37)" fg:x="193650" fg:w="70"/><text x="53.3710%" y="543.50"></text></g><g><title>[unknown] (53 samples, 0.01%)</title><rect x="53.1257%" y="517" width="0.0145%" height="15" fill="rgb(250,61,18)" fg:x="193667" fg:w="53"/><text x="53.3757%" y="527.50"></text></g><g><title>[unknown] (41 samples, 0.01%)</title><rect x="53.1290%" y="501" width="0.0112%" height="15" fill="rgb(235,172,48)" fg:x="193679" fg:w="41"/><text x="53.3790%" y="511.50"></text></g><g><title>__libc_disable_asynccancel (81 samples, 0.02%)</title><rect x="53.1402%" y="821" width="0.0222%" height="15" fill="rgb(249,201,17)" fg:x="193720" fg:w="81"/><text x="53.3902%" y="831.50"></text></g><g><title>mio::poll::Poll::poll (5,165 samples, 1.42%)</title><rect x="51.7590%" y="853" width="1.4168%" height="15" fill="rgb(219,208,6)" fg:x="188685" fg:w="5165"/><text x="52.0090%" y="863.50"></text></g><g><title>epoll_wait (5,090 samples, 1.40%)</title><rect x="51.7796%" y="837" width="1.3963%" height="15" fill="rgb(248,31,23)" fg:x="188760" fg:w="5090"/><text x="52.0296%" y="847.50"></text></g><g><title>__libc_enable_asynccancel (49 samples, 0.01%)</title><rect x="53.1624%" y="821" width="0.0134%" height="15" fill="rgb(245,15,42)" fg:x="193801" fg:w="49"/><text x="53.4124%" y="831.50"></text></g><g><title>&lt;tokio_tungstenite::compat::WakerProxy as futures_task::arc_wake::ArcWake&gt;::wake_by_ref (66 samples, 0.02%)</title><rect x="53.2088%" y="821" width="0.0181%" height="15" fill="rgb(222,217,39)" fg:x="193970" fg:w="66"/><text x="53.4588%" y="831.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (43 samples, 0.01%)</title><rect x="53.2151%" y="805" width="0.0118%" height="15" fill="rgb(210,219,27)" fg:x="193993" fg:w="43"/><text x="53.4651%" y="815.50"></text></g><g><title>futures_task::waker::wake_arc_raw (69 samples, 0.02%)</title><rect x="53.2088%" y="837" width="0.0189%" height="15" fill="rgb(252,166,36)" fg:x="193970" fg:w="69"/><text x="53.4588%" y="847.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_local (44 samples, 0.01%)</title><rect x="53.2711%" y="789" width="0.0121%" height="15" fill="rgb(245,132,34)" fg:x="194197" fg:w="44"/><text x="53.5211%" y="799.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::schedule (182 samples, 0.05%)</title><rect x="53.2376%" y="821" width="0.0499%" height="15" fill="rgb(236,54,3)" fg:x="194075" fg:w="182"/><text x="53.4876%" y="831.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (175 samples, 0.05%)</title><rect x="53.2395%" y="805" width="0.0480%" height="15" fill="rgb(241,173,43)" fg:x="194082" fg:w="175"/><text x="53.4895%" y="815.50"></text></g><g><title>tokio::runtime::task::raw::schedule (56 samples, 0.02%)</title><rect x="53.2875%" y="821" width="0.0154%" height="15" fill="rgb(215,190,9)" fg:x="194257" fg:w="56"/><text x="53.5375%" y="831.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::wake (620 samples, 0.17%)</title><rect x="53.1759%" y="853" width="0.1701%" height="15" fill="rgb(242,101,16)" fg:x="193850" fg:w="620"/><text x="53.4259%" y="863.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (431 samples, 0.12%)</title><rect x="53.2277%" y="837" width="0.1182%" height="15" fill="rgb(223,190,21)" fg:x="194039" fg:w="431"/><text x="53.4777%" y="847.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_val (157 samples, 0.04%)</title><rect x="53.3029%" y="821" width="0.0431%" height="15" fill="rgb(215,228,25)" fg:x="194313" fg:w="157"/><text x="53.5529%" y="831.50"></text></g><g><title>tokio::runtime::io::Driver::turn (6,254 samples, 1.72%)</title><rect x="51.6312%" y="869" width="1.7156%" height="15" fill="rgb(225,36,22)" fg:x="188219" fg:w="6254"/><text x="51.8812%" y="879.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Parker::park (12,685 samples, 3.48%)</title><rect x="49.8923%" y="901" width="3.4797%" height="15" fill="rgb(251,106,46)" fg:x="181880" fg:w="12685"/><text x="50.1423%" y="911.50">tok..</text></g><g><title>tokio::runtime::time::Driver::park_internal (6,979 samples, 1.91%)</title><rect x="51.4576%" y="885" width="1.9144%" height="15" fill="rgb(208,90,1)" fg:x="187586" fg:w="6979"/><text x="51.7076%" y="895.50">t..</text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (85 samples, 0.02%)</title><rect x="53.3487%" y="869" width="0.0233%" height="15" fill="rgb(243,10,4)" fg:x="194480" fg:w="85"/><text x="53.5987%" y="879.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_expiration (62 samples, 0.02%)</title><rect x="53.3550%" y="853" width="0.0170%" height="15" fill="rgb(212,137,27)" fg:x="194503" fg:w="62"/><text x="53.6050%" y="863.50"></text></g><g><title>[unknown] (68 samples, 0.02%)</title><rect x="53.3896%" y="837" width="0.0187%" height="15" fill="rgb(231,220,49)" fg:x="194629" fg:w="68"/><text x="53.6396%" y="847.50"></text></g><g><title>[unknown] (66 samples, 0.02%)</title><rect x="53.3901%" y="821" width="0.0181%" height="15" fill="rgb(237,96,20)" fg:x="194631" fg:w="66"/><text x="53.6401%" y="831.50"></text></g><g><title>[unknown] (63 samples, 0.02%)</title><rect x="53.3909%" y="805" width="0.0173%" height="15" fill="rgb(239,229,30)" fg:x="194634" fg:w="63"/><text x="53.6409%" y="815.50"></text></g><g><title>[unknown] (57 samples, 0.02%)</title><rect x="53.3926%" y="789" width="0.0156%" height="15" fill="rgb(219,65,33)" fg:x="194640" fg:w="57"/><text x="53.6426%" y="799.50"></text></g><g><title>[unknown] (52 samples, 0.01%)</title><rect x="53.3940%" y="773" width="0.0143%" height="15" fill="rgb(243,134,7)" fg:x="194645" fg:w="52"/><text x="53.6440%" y="783.50"></text></g><g><title>[unknown] (41 samples, 0.01%)</title><rect x="53.3970%" y="757" width="0.0112%" height="15" fill="rgb(216,177,54)" fg:x="194656" fg:w="41"/><text x="53.6470%" y="767.50"></text></g><g><title>mio::poll::Poll::poll (87 samples, 0.02%)</title><rect x="53.3857%" y="869" width="0.0239%" height="15" fill="rgb(211,160,20)" fg:x="194615" fg:w="87"/><text x="53.6357%" y="879.50"></text></g><g><title>epoll_wait (82 samples, 0.02%)</title><rect x="53.3871%" y="853" width="0.0225%" height="15" fill="rgb(239,85,39)" fg:x="194620" fg:w="82"/><text x="53.6371%" y="863.50"></text></g><g><title>tokio::runtime::io::Driver::turn (120 samples, 0.03%)</title><rect x="53.3819%" y="885" width="0.0329%" height="15" fill="rgb(232,125,22)" fg:x="194601" fg:w="120"/><text x="53.6319%" y="895.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (13,308 samples, 3.65%)</title><rect x="49.7659%" y="917" width="3.6506%" height="15" fill="rgb(244,57,34)" fg:x="181419" fg:w="13308"/><text x="50.0159%" y="927.50">toki..</text></g><g><title>tokio::runtime::time::Driver::park_internal (145 samples, 0.04%)</title><rect x="53.3767%" y="901" width="0.0398%" height="15" fill="rgb(214,203,32)" fg:x="194582" fg:w="145"/><text x="53.6267%" y="911.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket_pair (100 samples, 0.03%)</title><rect x="53.6436%" y="885" width="0.0274%" height="15" fill="rgb(207,58,43)" fg:x="195555" fg:w="100"/><text x="53.8936%" y="895.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (67 samples, 0.02%)</title><rect x="53.6710%" y="885" width="0.0184%" height="15" fill="rgb(215,193,15)" fg:x="195655" fg:w="67"/><text x="53.9210%" y="895.50"></text></g><g><title>__GI___clock_gettime (65 samples, 0.02%)</title><rect x="53.6716%" y="869" width="0.0178%" height="15" fill="rgb(232,15,44)" fg:x="195657" fg:w="65"/><text x="53.9216%" y="879.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (1,960 samples, 0.54%)</title><rect x="53.6046%" y="901" width="0.5377%" height="15" fill="rgb(212,3,48)" fg:x="195413" fg:w="1960"/><text x="53.8546%" y="911.50"></text></g><g><title>syscall (1,647 samples, 0.45%)</title><rect x="53.6905%" y="885" width="0.4518%" height="15" fill="rgb(218,128,7)" fg:x="195726" fg:w="1647"/><text x="53.9405%" y="895.50"></text></g><g><title>[unknown] (1,629 samples, 0.45%)</title><rect x="53.6954%" y="869" width="0.4469%" height="15" fill="rgb(226,216,39)" fg:x="195744" fg:w="1629"/><text x="53.9454%" y="879.50"></text></g><g><title>[unknown] (1,602 samples, 0.44%)</title><rect x="53.7028%" y="853" width="0.4395%" height="15" fill="rgb(243,47,51)" fg:x="195771" fg:w="1602"/><text x="53.9528%" y="863.50"></text></g><g><title>[unknown] (1,583 samples, 0.43%)</title><rect x="53.7080%" y="837" width="0.4342%" height="15" fill="rgb(241,183,40)" fg:x="195790" fg:w="1583"/><text x="53.9580%" y="847.50"></text></g><g><title>[unknown] (1,555 samples, 0.43%)</title><rect x="53.7157%" y="821" width="0.4266%" height="15" fill="rgb(231,217,32)" fg:x="195818" fg:w="1555"/><text x="53.9657%" y="831.50"></text></g><g><title>[unknown] (1,520 samples, 0.42%)</title><rect x="53.7253%" y="805" width="0.4170%" height="15" fill="rgb(229,61,38)" fg:x="195853" fg:w="1520"/><text x="53.9753%" y="815.50"></text></g><g><title>[unknown] (1,346 samples, 0.37%)</title><rect x="53.7731%" y="789" width="0.3692%" height="15" fill="rgb(225,210,5)" fg:x="196027" fg:w="1346"/><text x="54.0231%" y="799.50"></text></g><g><title>[unknown] (1,245 samples, 0.34%)</title><rect x="53.8008%" y="773" width="0.3415%" height="15" fill="rgb(231,79,45)" fg:x="196128" fg:w="1245"/><text x="54.0508%" y="783.50"></text></g><g><title>[unknown] (1,137 samples, 0.31%)</title><rect x="53.8304%" y="757" width="0.3119%" height="15" fill="rgb(224,100,7)" fg:x="196236" fg:w="1137"/><text x="54.0804%" y="767.50"></text></g><g><title>[unknown] (938 samples, 0.26%)</title><rect x="53.8850%" y="741" width="0.2573%" height="15" fill="rgb(241,198,18)" fg:x="196435" fg:w="938"/><text x="54.1350%" y="751.50"></text></g><g><title>[unknown] (759 samples, 0.21%)</title><rect x="53.9341%" y="725" width="0.2082%" height="15" fill="rgb(252,97,53)" fg:x="196614" fg:w="759"/><text x="54.1841%" y="735.50"></text></g><g><title>[unknown] (341 samples, 0.09%)</title><rect x="54.0487%" y="709" width="0.0935%" height="15" fill="rgb(220,88,7)" fg:x="197032" fg:w="341"/><text x="54.2987%" y="719.50"></text></g><g><title>[unknown] (124 samples, 0.03%)</title><rect x="54.1083%" y="693" width="0.0340%" height="15" fill="rgb(213,176,14)" fg:x="197249" fg:w="124"/><text x="54.3583%" y="703.50"></text></g><g><title>[unknown] (44 samples, 0.01%)</title><rect x="54.1302%" y="677" width="0.0121%" height="15" fill="rgb(246,73,7)" fg:x="197329" fg:w="44"/><text x="54.3802%" y="687.50"></text></g><g><title>[unknown] (619 samples, 0.17%)</title><rect x="54.1530%" y="789" width="0.1698%" height="15" fill="rgb(245,64,36)" fg:x="197412" fg:w="619"/><text x="54.4030%" y="799.50"></text></g><g><title>[unknown] (600 samples, 0.16%)</title><rect x="54.1582%" y="773" width="0.1646%" height="15" fill="rgb(245,80,10)" fg:x="197431" fg:w="600"/><text x="54.4082%" y="783.50"></text></g><g><title>[unknown] (588 samples, 0.16%)</title><rect x="54.1615%" y="757" width="0.1613%" height="15" fill="rgb(232,107,50)" fg:x="197443" fg:w="588"/><text x="54.4115%" y="767.50"></text></g><g><title>[unknown] (586 samples, 0.16%)</title><rect x="54.1620%" y="741" width="0.1607%" height="15" fill="rgb(253,3,0)" fg:x="197445" fg:w="586"/><text x="54.4120%" y="751.50"></text></g><g><title>[unknown] (575 samples, 0.16%)</title><rect x="54.1651%" y="725" width="0.1577%" height="15" fill="rgb(212,99,53)" fg:x="197456" fg:w="575"/><text x="54.4151%" y="735.50"></text></g><g><title>[unknown] (541 samples, 0.15%)</title><rect x="54.1744%" y="709" width="0.1484%" height="15" fill="rgb(249,111,54)" fg:x="197490" fg:w="541"/><text x="54.4244%" y="719.50"></text></g><g><title>[unknown] (486 samples, 0.13%)</title><rect x="54.1895%" y="693" width="0.1333%" height="15" fill="rgb(249,55,30)" fg:x="197545" fg:w="486"/><text x="54.4395%" y="703.50"></text></g><g><title>[unknown] (437 samples, 0.12%)</title><rect x="54.2029%" y="677" width="0.1199%" height="15" fill="rgb(237,47,42)" fg:x="197594" fg:w="437"/><text x="54.4529%" y="687.50"></text></g><g><title>[unknown] (398 samples, 0.11%)</title><rect x="54.2136%" y="661" width="0.1092%" height="15" fill="rgb(211,20,18)" fg:x="197633" fg:w="398"/><text x="54.4636%" y="671.50"></text></g><g><title>[unknown] (348 samples, 0.10%)</title><rect x="54.2273%" y="645" width="0.0955%" height="15" fill="rgb(231,203,46)" fg:x="197683" fg:w="348"/><text x="54.4773%" y="655.50"></text></g><g><title>[unknown] (327 samples, 0.09%)</title><rect x="54.2331%" y="629" width="0.0897%" height="15" fill="rgb(237,142,3)" fg:x="197704" fg:w="327"/><text x="54.4831%" y="639.50"></text></g><g><title>[unknown] (322 samples, 0.09%)</title><rect x="54.2345%" y="613" width="0.0883%" height="15" fill="rgb(241,107,1)" fg:x="197709" fg:w="322"/><text x="54.4845%" y="623.50"></text></g><g><title>[unknown] (304 samples, 0.08%)</title><rect x="54.2394%" y="597" width="0.0834%" height="15" fill="rgb(229,83,13)" fg:x="197727" fg:w="304"/><text x="54.4894%" y="607.50"></text></g><g><title>[unknown] (299 samples, 0.08%)</title><rect x="54.2408%" y="581" width="0.0820%" height="15" fill="rgb(241,91,40)" fg:x="197732" fg:w="299"/><text x="54.4908%" y="591.50"></text></g><g><title>[unknown] (298 samples, 0.08%)</title><rect x="54.2410%" y="565" width="0.0817%" height="15" fill="rgb(225,3,45)" fg:x="197733" fg:w="298"/><text x="54.4910%" y="575.50"></text></g><g><title>[unknown] (279 samples, 0.08%)</title><rect x="54.2463%" y="549" width="0.0765%" height="15" fill="rgb(244,223,14)" fg:x="197752" fg:w="279"/><text x="54.4963%" y="559.50"></text></g><g><title>[unknown] (204 samples, 0.06%)</title><rect x="54.2668%" y="533" width="0.0560%" height="15" fill="rgb(224,124,37)" fg:x="197827" fg:w="204"/><text x="54.5168%" y="543.50"></text></g><g><title>[unknown] (154 samples, 0.04%)</title><rect x="54.2805%" y="517" width="0.0422%" height="15" fill="rgb(251,171,30)" fg:x="197877" fg:w="154"/><text x="54.5305%" y="527.50"></text></g><g><title>[unknown] (69 samples, 0.02%)</title><rect x="54.3039%" y="501" width="0.0189%" height="15" fill="rgb(236,46,54)" fg:x="197962" fg:w="69"/><text x="54.5539%" y="511.50"></text></g><g><title>__libc_write (648 samples, 0.18%)</title><rect x="54.1500%" y="821" width="0.1778%" height="15" fill="rgb(245,213,5)" fg:x="197401" fg:w="648"/><text x="54.4000%" y="831.50"></text></g><g><title>__libc_write (641 samples, 0.18%)</title><rect x="54.1519%" y="805" width="0.1758%" height="15" fill="rgb(230,144,27)" fg:x="197408" fg:w="641"/><text x="54.4019%" y="815.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (657 samples, 0.18%)</title><rect x="54.1478%" y="869" width="0.1802%" height="15" fill="rgb(220,86,6)" fg:x="197393" fg:w="657"/><text x="54.3978%" y="879.50"></text></g><g><title>std::sys::unix::fs::File::write (653 samples, 0.18%)</title><rect x="54.1489%" y="853" width="0.1791%" height="15" fill="rgb(240,20,13)" fg:x="197397" fg:w="653"/><text x="54.3989%" y="863.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (653 samples, 0.18%)</title><rect x="54.1489%" y="837" width="0.1791%" height="15" fill="rgb(217,89,34)" fg:x="197397" fg:w="653"/><text x="54.3989%" y="847.50"></text></g><g><title>mio::sys::unix::waker::eventfd::Waker::wake (665 samples, 0.18%)</title><rect x="54.1464%" y="885" width="0.1824%" height="15" fill="rgb(229,13,5)" fg:x="197388" fg:w="665"/><text x="54.3964%" y="895.50"></text></g><g><title>tokio::runtime::driver::Handle::unpark (681 samples, 0.19%)</title><rect x="54.1423%" y="901" width="0.1868%" height="15" fill="rgb(244,67,35)" fg:x="197373" fg:w="681"/><text x="54.3923%" y="911.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::worker_to_notify (65 samples, 0.02%)</title><rect x="54.3291%" y="901" width="0.0178%" height="15" fill="rgb(221,40,2)" fg:x="198054" fg:w="65"/><text x="54.5791%" y="911.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (94 samples, 0.03%)</title><rect x="54.3469%" y="901" width="0.0258%" height="15" fill="rgb(237,157,21)" fg:x="198119" fg:w="94"/><text x="54.5969%" y="911.50"></text></g><g><title>&lt;http_body::combinators::map_err::MapErr&lt;B,F&gt; as http_body::Body&gt;::is_end_stream (197 samples, 0.05%)</title><rect x="54.7203%" y="821" width="0.0540%" height="15" fill="rgb(222,94,11)" fg:x="199480" fg:w="197"/><text x="54.9703%" y="831.50"></text></g><g><title>__GI___libc_free (59 samples, 0.02%)</title><rect x="55.0291%" y="741" width="0.0162%" height="15" fill="rgb(249,113,6)" fg:x="200606" fg:w="59"/><text x="55.2791%" y="751.50"></text></g><g><title>[unknown] (102 samples, 0.03%)</title><rect x="55.1674%" y="725" width="0.0280%" height="15" fill="rgb(238,137,36)" fg:x="201110" fg:w="102"/><text x="55.4174%" y="735.50"></text></g><g><title>[unknown] (91 samples, 0.02%)</title><rect x="55.1704%" y="709" width="0.0250%" height="15" fill="rgb(210,102,26)" fg:x="201121" fg:w="91"/><text x="55.4204%" y="719.50"></text></g><g><title>[unknown] (88 samples, 0.02%)</title><rect x="55.1712%" y="693" width="0.0241%" height="15" fill="rgb(218,30,30)" fg:x="201124" fg:w="88"/><text x="55.4212%" y="703.50"></text></g><g><title>[unknown] (86 samples, 0.02%)</title><rect x="55.1718%" y="677" width="0.0236%" height="15" fill="rgb(214,67,26)" fg:x="201126" fg:w="86"/><text x="55.4218%" y="687.50"></text></g><g><title>[unknown] (75 samples, 0.02%)</title><rect x="55.1748%" y="661" width="0.0206%" height="15" fill="rgb(251,9,53)" fg:x="201137" fg:w="75"/><text x="55.4248%" y="671.50"></text></g><g><title>[unknown] (52 samples, 0.01%)</title><rect x="55.1811%" y="645" width="0.0143%" height="15" fill="rgb(228,204,25)" fg:x="201160" fg:w="52"/><text x="55.4311%" y="655.50"></text></g><g><title>[unknown] (47 samples, 0.01%)</title><rect x="55.1825%" y="629" width="0.0129%" height="15" fill="rgb(207,153,8)" fg:x="201165" fg:w="47"/><text x="55.4325%" y="639.50"></text></g><g><title>__lll_lock_wait_private (504 samples, 0.14%)</title><rect x="55.1954%" y="725" width="0.1383%" height="15" fill="rgb(242,9,16)" fg:x="201212" fg:w="504"/><text x="55.4454%" y="735.50"></text></g><g><title>[unknown] (449 samples, 0.12%)</title><rect x="55.2105%" y="709" width="0.1232%" height="15" fill="rgb(217,211,10)" fg:x="201267" fg:w="449"/><text x="55.4605%" y="719.50"></text></g><g><title>[unknown] (431 samples, 0.12%)</title><rect x="55.2154%" y="693" width="0.1182%" height="15" fill="rgb(219,228,52)" fg:x="201285" fg:w="431"/><text x="55.4654%" y="703.50"></text></g><g><title>[unknown] (426 samples, 0.12%)</title><rect x="55.2168%" y="677" width="0.1169%" height="15" fill="rgb(231,92,29)" fg:x="201290" fg:w="426"/><text x="55.4668%" y="687.50"></text></g><g><title>[unknown] (419 samples, 0.11%)</title><rect x="55.2187%" y="661" width="0.1149%" height="15" fill="rgb(232,8,23)" fg:x="201297" fg:w="419"/><text x="55.4687%" y="671.50"></text></g><g><title>[unknown] (408 samples, 0.11%)</title><rect x="55.2217%" y="645" width="0.1119%" height="15" fill="rgb(216,211,34)" fg:x="201308" fg:w="408"/><text x="55.4717%" y="655.50"></text></g><g><title>[unknown] (381 samples, 0.10%)</title><rect x="55.2291%" y="629" width="0.1045%" height="15" fill="rgb(236,151,0)" fg:x="201335" fg:w="381"/><text x="55.4791%" y="639.50"></text></g><g><title>[unknown] (328 samples, 0.09%)</title><rect x="55.2437%" y="613" width="0.0900%" height="15" fill="rgb(209,168,3)" fg:x="201388" fg:w="328"/><text x="55.4937%" y="623.50"></text></g><g><title>[unknown] (316 samples, 0.09%)</title><rect x="55.2470%" y="597" width="0.0867%" height="15" fill="rgb(208,129,28)" fg:x="201400" fg:w="316"/><text x="55.4970%" y="607.50"></text></g><g><title>[unknown] (290 samples, 0.08%)</title><rect x="55.2541%" y="581" width="0.0796%" height="15" fill="rgb(229,78,22)" fg:x="201426" fg:w="290"/><text x="55.5041%" y="591.50"></text></g><g><title>[unknown] (258 samples, 0.07%)</title><rect x="55.2629%" y="565" width="0.0708%" height="15" fill="rgb(228,187,13)" fg:x="201458" fg:w="258"/><text x="55.5129%" y="575.50"></text></g><g><title>[unknown] (143 samples, 0.04%)</title><rect x="55.2944%" y="549" width="0.0392%" height="15" fill="rgb(240,119,24)" fg:x="201573" fg:w="143"/><text x="55.5444%" y="559.50"></text></g><g><title>[unknown] (110 samples, 0.03%)</title><rect x="55.3035%" y="533" width="0.0302%" height="15" fill="rgb(209,194,42)" fg:x="201606" fg:w="110"/><text x="55.5535%" y="543.50"></text></g><g><title>[unknown] (67 samples, 0.02%)</title><rect x="55.3153%" y="517" width="0.0184%" height="15" fill="rgb(247,200,46)" fg:x="201649" fg:w="67"/><text x="55.5653%" y="527.50"></text></g><g><title>_int_free (1,094 samples, 0.30%)</title><rect x="55.0494%" y="741" width="0.3001%" height="15" fill="rgb(218,76,16)" fg:x="200680" fg:w="1094"/><text x="55.2994%" y="751.50"></text></g><g><title>unlink_chunk (53 samples, 0.01%)</title><rect x="55.3350%" y="725" width="0.0145%" height="15" fill="rgb(225,21,48)" fg:x="201721" fg:w="53"/><text x="55.5850%" y="735.50"></text></g><g><title>__GI___libc_free (2,639 samples, 0.72%)</title><rect x="55.5619%" y="725" width="0.7239%" height="15" fill="rgb(239,223,50)" fg:x="202548" fg:w="2639"/><text x="55.8119%" y="735.50"></text></g><g><title>__rdl_dealloc (306 samples, 0.08%)</title><rect x="56.2858%" y="725" width="0.0839%" height="15" fill="rgb(244,45,21)" fg:x="205187" fg:w="306"/><text x="56.5358%" y="735.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (306 samples, 0.08%)</title><rect x="56.2858%" y="709" width="0.0839%" height="15" fill="rgb(232,33,43)" fg:x="205187" fg:w="306"/><text x="56.5358%" y="719.50"></text></g><g><title>__rust_dealloc (221 samples, 0.06%)</title><rect x="56.3697%" y="725" width="0.0606%" height="15" fill="rgb(209,8,3)" fg:x="205493" fg:w="221"/><text x="56.6197%" y="735.50"></text></g><g><title>[unknown] (204 samples, 0.06%)</title><rect x="59.4832%" y="709" width="0.0560%" height="15" fill="rgb(214,25,53)" fg:x="216843" fg:w="204"/><text x="59.7332%" y="719.50"></text></g><g><title>[unknown] (188 samples, 0.05%)</title><rect x="59.4876%" y="693" width="0.0516%" height="15" fill="rgb(254,186,54)" fg:x="216859" fg:w="188"/><text x="59.7376%" y="703.50"></text></g><g><title>[unknown] (181 samples, 0.05%)</title><rect x="59.4895%" y="677" width="0.0497%" height="15" fill="rgb(208,174,49)" fg:x="216866" fg:w="181"/><text x="59.7395%" y="687.50"></text></g><g><title>[unknown] (174 samples, 0.05%)</title><rect x="59.4914%" y="661" width="0.0477%" height="15" fill="rgb(233,191,51)" fg:x="216873" fg:w="174"/><text x="59.7414%" y="671.50"></text></g><g><title>[unknown] (163 samples, 0.04%)</title><rect x="59.4944%" y="645" width="0.0447%" height="15" fill="rgb(222,134,10)" fg:x="216884" fg:w="163"/><text x="59.7444%" y="655.50"></text></g><g><title>[unknown] (131 samples, 0.04%)</title><rect x="59.5032%" y="629" width="0.0359%" height="15" fill="rgb(230,226,20)" fg:x="216916" fg:w="131"/><text x="59.7532%" y="639.50"></text></g><g><title>[unknown] (117 samples, 0.03%)</title><rect x="59.5071%" y="613" width="0.0321%" height="15" fill="rgb(251,111,25)" fg:x="216930" fg:w="117"/><text x="59.7571%" y="623.50"></text></g><g><title>[unknown] (90 samples, 0.02%)</title><rect x="59.5145%" y="597" width="0.0247%" height="15" fill="rgb(224,40,46)" fg:x="216957" fg:w="90"/><text x="59.7645%" y="607.50"></text></g><g><title>[unknown] (83 samples, 0.02%)</title><rect x="59.5164%" y="581" width="0.0228%" height="15" fill="rgb(236,108,47)" fg:x="216964" fg:w="83"/><text x="59.7664%" y="591.50"></text></g><g><title>[unknown] (60 samples, 0.02%)</title><rect x="59.5227%" y="565" width="0.0165%" height="15" fill="rgb(234,93,0)" fg:x="216987" fg:w="60"/><text x="59.7727%" y="575.50"></text></g><g><title>[unknown] (47 samples, 0.01%)</title><rect x="59.5263%" y="549" width="0.0129%" height="15" fill="rgb(224,213,32)" fg:x="217000" fg:w="47"/><text x="59.7763%" y="559.50"></text></g><g><title>__lll_lock_wait_private (566 samples, 0.16%)</title><rect x="59.5392%" y="709" width="0.1553%" height="15" fill="rgb(251,11,48)" fg:x="217047" fg:w="566"/><text x="59.7892%" y="719.50"></text></g><g><title>[unknown] (514 samples, 0.14%)</title><rect x="59.5534%" y="693" width="0.1410%" height="15" fill="rgb(236,173,5)" fg:x="217099" fg:w="514"/><text x="59.8034%" y="703.50"></text></g><g><title>[unknown] (481 samples, 0.13%)</title><rect x="59.5625%" y="677" width="0.1319%" height="15" fill="rgb(230,95,12)" fg:x="217132" fg:w="481"/><text x="59.8125%" y="687.50"></text></g><g><title>[unknown] (477 samples, 0.13%)</title><rect x="59.5636%" y="661" width="0.1308%" height="15" fill="rgb(232,209,1)" fg:x="217136" fg:w="477"/><text x="59.8136%" y="671.50"></text></g><g><title>[unknown] (461 samples, 0.13%)</title><rect x="59.5680%" y="645" width="0.1265%" height="15" fill="rgb(232,6,1)" fg:x="217152" fg:w="461"/><text x="59.8180%" y="655.50"></text></g><g><title>[unknown] (444 samples, 0.12%)</title><rect x="59.5726%" y="629" width="0.1218%" height="15" fill="rgb(210,224,50)" fg:x="217169" fg:w="444"/><text x="59.8226%" y="639.50"></text></g><g><title>[unknown] (418 samples, 0.11%)</title><rect x="59.5798%" y="613" width="0.1147%" height="15" fill="rgb(228,127,35)" fg:x="217195" fg:w="418"/><text x="59.8298%" y="623.50"></text></g><g><title>[unknown] (336 samples, 0.09%)</title><rect x="59.6022%" y="597" width="0.0922%" height="15" fill="rgb(245,102,45)" fg:x="217277" fg:w="336"/><text x="59.8522%" y="607.50"></text></g><g><title>[unknown] (322 samples, 0.09%)</title><rect x="59.6061%" y="581" width="0.0883%" height="15" fill="rgb(214,1,49)" fg:x="217291" fg:w="322"/><text x="59.8561%" y="591.50"></text></g><g><title>[unknown] (285 samples, 0.08%)</title><rect x="59.6162%" y="565" width="0.0782%" height="15" fill="rgb(226,163,40)" fg:x="217328" fg:w="285"/><text x="59.8662%" y="575.50"></text></g><g><title>[unknown] (247 samples, 0.07%)</title><rect x="59.6267%" y="549" width="0.0678%" height="15" fill="rgb(239,212,28)" fg:x="217366" fg:w="247"/><text x="59.8767%" y="559.50"></text></g><g><title>[unknown] (147 samples, 0.04%)</title><rect x="59.6541%" y="533" width="0.0403%" height="15" fill="rgb(220,20,13)" fg:x="217466" fg:w="147"/><text x="59.9041%" y="543.50"></text></g><g><title>[unknown] (115 samples, 0.03%)</title><rect x="59.6629%" y="517" width="0.0315%" height="15" fill="rgb(210,164,35)" fg:x="217498" fg:w="115"/><text x="59.9129%" y="527.50"></text></g><g><title>[unknown] (80 samples, 0.02%)</title><rect x="59.6725%" y="501" width="0.0219%" height="15" fill="rgb(248,109,41)" fg:x="217533" fg:w="80"/><text x="59.9225%" y="511.50"></text></g><g><title>[unknown] (38 samples, 0.01%)</title><rect x="59.6840%" y="485" width="0.0104%" height="15" fill="rgb(238,23,50)" fg:x="217575" fg:w="38"/><text x="59.9340%" y="495.50"></text></g><g><title>free_perturb (122 samples, 0.03%)</title><rect x="59.6944%" y="709" width="0.0335%" height="15" fill="rgb(211,48,49)" fg:x="217613" fg:w="122"/><text x="59.9444%" y="719.50"></text></g><g><title>malloc_consolidate (38 samples, 0.01%)</title><rect x="59.7279%" y="709" width="0.0104%" height="15" fill="rgb(223,36,21)" fg:x="217735" fg:w="38"/><text x="59.9779%" y="719.50"></text></g><g><title>tcache_put (76 samples, 0.02%)</title><rect x="59.7383%" y="709" width="0.0208%" height="15" fill="rgb(207,123,46)" fg:x="217773" fg:w="76"/><text x="59.9883%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;stream_book::grpc_routes::grpc_impl::order_book_proto::Summary&gt; (16,116 samples, 4.42%)</title><rect x="55.3559%" y="741" width="4.4209%" height="15" fill="rgb(240,218,32)" fg:x="201797" fg:w="16116"/><text x="55.6059%" y="751.50">core:..</text></g><g><title>_int_free (12,199 samples, 3.35%)</title><rect x="56.4303%" y="725" width="3.3464%" height="15" fill="rgb(252,5,43)" fg:x="205714" fg:w="12199"/><text x="56.6803%" y="735.50">_in..</text></g><g><title>unlink_chunk (64 samples, 0.02%)</title><rect x="59.7592%" y="709" width="0.0176%" height="15" fill="rgb(252,84,19)" fg:x="217849" fg:w="64"/><text x="60.0092%" y="719.50"></text></g><g><title>[unknown] (52 samples, 0.01%)</title><rect x="61.8972%" y="709" width="0.0143%" height="15" fill="rgb(243,152,39)" fg:x="225643" fg:w="52"/><text x="62.1472%" y="719.50"></text></g><g><title>[unknown] (48 samples, 0.01%)</title><rect x="61.8983%" y="693" width="0.0132%" height="15" fill="rgb(234,160,15)" fg:x="225647" fg:w="48"/><text x="62.1483%" y="703.50"></text></g><g><title>[unknown] (48 samples, 0.01%)</title><rect x="61.8983%" y="677" width="0.0132%" height="15" fill="rgb(237,34,20)" fg:x="225647" fg:w="48"/><text x="62.1483%" y="687.50"></text></g><g><title>[unknown] (47 samples, 0.01%)</title><rect x="61.8985%" y="661" width="0.0129%" height="15" fill="rgb(229,97,13)" fg:x="225648" fg:w="47"/><text x="62.1485%" y="671.50"></text></g><g><title>[unknown] (47 samples, 0.01%)</title><rect x="61.8985%" y="645" width="0.0129%" height="15" fill="rgb(234,71,50)" fg:x="225648" fg:w="47"/><text x="62.1485%" y="655.50"></text></g><g><title>[unknown] (44 samples, 0.01%)</title><rect x="61.8994%" y="629" width="0.0121%" height="15" fill="rgb(253,155,4)" fg:x="225651" fg:w="44"/><text x="62.1494%" y="639.50"></text></g><g><title>[unknown] (42 samples, 0.01%)</title><rect x="61.8999%" y="613" width="0.0115%" height="15" fill="rgb(222,185,37)" fg:x="225653" fg:w="42"/><text x="62.1499%" y="623.50"></text></g><g><title>[unknown] (39 samples, 0.01%)</title><rect x="61.9007%" y="597" width="0.0107%" height="15" fill="rgb(251,177,13)" fg:x="225656" fg:w="39"/><text x="62.1507%" y="607.50"></text></g><g><title>[unknown] (248 samples, 0.07%)</title><rect x="66.1611%" y="693" width="0.0680%" height="15" fill="rgb(250,179,40)" fg:x="241187" fg:w="248"/><text x="66.4111%" y="703.50"></text></g><g><title>[unknown] (235 samples, 0.06%)</title><rect x="66.1647%" y="677" width="0.0645%" height="15" fill="rgb(242,44,2)" fg:x="241200" fg:w="235"/><text x="66.4147%" y="687.50"></text></g><g><title>[unknown] (229 samples, 0.06%)</title><rect x="66.1663%" y="661" width="0.0628%" height="15" fill="rgb(216,177,13)" fg:x="241206" fg:w="229"/><text x="66.4163%" y="671.50"></text></g><g><title>[unknown] (223 samples, 0.06%)</title><rect x="66.1680%" y="645" width="0.0612%" height="15" fill="rgb(216,106,43)" fg:x="241212" fg:w="223"/><text x="66.4180%" y="655.50"></text></g><g><title>[unknown] (216 samples, 0.06%)</title><rect x="66.1699%" y="629" width="0.0593%" height="15" fill="rgb(216,183,2)" fg:x="241219" fg:w="216"/><text x="66.4199%" y="639.50"></text></g><g><title>[unknown] (203 samples, 0.06%)</title><rect x="66.1734%" y="613" width="0.0557%" height="15" fill="rgb(249,75,3)" fg:x="241232" fg:w="203"/><text x="66.4234%" y="623.50"></text></g><g><title>[unknown] (187 samples, 0.05%)</title><rect x="66.1778%" y="597" width="0.0513%" height="15" fill="rgb(219,67,39)" fg:x="241248" fg:w="187"/><text x="66.4278%" y="607.50"></text></g><g><title>[unknown] (157 samples, 0.04%)</title><rect x="66.1861%" y="581" width="0.0431%" height="15" fill="rgb(253,228,2)" fg:x="241278" fg:w="157"/><text x="66.4361%" y="591.50"></text></g><g><title>[unknown] (144 samples, 0.04%)</title><rect x="66.1896%" y="565" width="0.0395%" height="15" fill="rgb(235,138,27)" fg:x="241291" fg:w="144"/><text x="66.4396%" y="575.50"></text></g><g><title>[unknown] (115 samples, 0.03%)</title><rect x="66.1976%" y="549" width="0.0315%" height="15" fill="rgb(236,97,51)" fg:x="241320" fg:w="115"/><text x="66.4476%" y="559.50"></text></g><g><title>[unknown] (100 samples, 0.03%)</title><rect x="66.2017%" y="533" width="0.0274%" height="15" fill="rgb(240,80,30)" fg:x="241335" fg:w="100"/><text x="66.4517%" y="543.50"></text></g><g><title>[unknown] (58 samples, 0.02%)</title><rect x="66.2132%" y="517" width="0.0159%" height="15" fill="rgb(230,178,19)" fg:x="241377" fg:w="58"/><text x="66.4632%" y="527.50"></text></g><g><title>[unknown] (39 samples, 0.01%)</title><rect x="66.2184%" y="501" width="0.0107%" height="15" fill="rgb(210,190,27)" fg:x="241396" fg:w="39"/><text x="66.4684%" y="511.50"></text></g><g><title>__memmove_avx_unaligned_erms (12,609 samples, 3.46%)</title><rect x="66.2291%" y="693" width="3.4588%" height="15" fill="rgb(222,107,31)" fg:x="241435" fg:w="12609"/><text x="66.4791%" y="703.50">__m..</text></g><g><title>[unknown] (150 samples, 0.04%)</title><rect x="69.6468%" y="677" width="0.0411%" height="15" fill="rgb(216,127,34)" fg:x="253894" fg:w="150"/><text x="69.8968%" y="687.50"></text></g><g><title>[unknown] (143 samples, 0.04%)</title><rect x="69.6487%" y="661" width="0.0392%" height="15" fill="rgb(234,116,52)" fg:x="253901" fg:w="143"/><text x="69.8987%" y="671.50"></text></g><g><title>[unknown] (137 samples, 0.04%)</title><rect x="69.6504%" y="645" width="0.0376%" height="15" fill="rgb(222,124,15)" fg:x="253907" fg:w="137"/><text x="69.9004%" y="655.50"></text></g><g><title>[unknown] (136 samples, 0.04%)</title><rect x="69.6507%" y="629" width="0.0373%" height="15" fill="rgb(231,179,28)" fg:x="253908" fg:w="136"/><text x="69.9007%" y="639.50"></text></g><g><title>[unknown] (130 samples, 0.04%)</title><rect x="69.6523%" y="613" width="0.0357%" height="15" fill="rgb(226,93,45)" fg:x="253914" fg:w="130"/><text x="69.9023%" y="623.50"></text></g><g><title>[unknown] (125 samples, 0.03%)</title><rect x="69.6537%" y="597" width="0.0343%" height="15" fill="rgb(215,8,51)" fg:x="253919" fg:w="125"/><text x="69.9037%" y="607.50"></text></g><g><title>[unknown] (120 samples, 0.03%)</title><rect x="69.6550%" y="581" width="0.0329%" height="15" fill="rgb(223,106,5)" fg:x="253924" fg:w="120"/><text x="69.9050%" y="591.50"></text></g><g><title>[unknown] (107 samples, 0.03%)</title><rect x="69.6586%" y="565" width="0.0294%" height="15" fill="rgb(250,191,5)" fg:x="253937" fg:w="107"/><text x="69.9086%" y="575.50"></text></g><g><title>[unknown] (95 samples, 0.03%)</title><rect x="69.6619%" y="549" width="0.0261%" height="15" fill="rgb(242,132,44)" fg:x="253949" fg:w="95"/><text x="69.9119%" y="559.50"></text></g><g><title>[unknown] (80 samples, 0.02%)</title><rect x="69.6660%" y="533" width="0.0219%" height="15" fill="rgb(251,152,29)" fg:x="253964" fg:w="80"/><text x="69.9160%" y="543.50"></text></g><g><title>[unknown] (62 samples, 0.02%)</title><rect x="69.6710%" y="517" width="0.0170%" height="15" fill="rgb(218,179,5)" fg:x="253982" fg:w="62"/><text x="69.9210%" y="527.50"></text></g><g><title>[unknown] (37 samples, 0.01%)</title><rect x="69.6778%" y="501" width="0.0101%" height="15" fill="rgb(227,67,19)" fg:x="254007" fg:w="37"/><text x="69.9278%" y="511.50"></text></g><g><title>bytes::buf::uninit_slice::UninitSlice::from_slice (384 samples, 0.11%)</title><rect x="69.6880%" y="693" width="0.1053%" height="15" fill="rgb(233,119,31)" fg:x="254044" fg:w="384"/><text x="69.9380%" y="703.50"></text></g><g><title>[unknown] (41 samples, 0.01%)</title><rect x="69.8921%" y="661" width="0.0112%" height="15" fill="rgb(241,120,22)" fg:x="254788" fg:w="41"/><text x="70.1421%" y="671.50"></text></g><g><title>[unknown] (41 samples, 0.01%)</title><rect x="69.8921%" y="645" width="0.0112%" height="15" fill="rgb(224,102,30)" fg:x="254788" fg:w="41"/><text x="70.1421%" y="655.50"></text></g><g><title>[unknown] (41 samples, 0.01%)</title><rect x="69.8921%" y="629" width="0.0112%" height="15" fill="rgb(210,164,37)" fg:x="254788" fg:w="41"/><text x="70.1421%" y="639.50"></text></g><g><title>[unknown] (39 samples, 0.01%)</title><rect x="69.8926%" y="613" width="0.0107%" height="15" fill="rgb(226,191,16)" fg:x="254790" fg:w="39"/><text x="70.1426%" y="623.50"></text></g><g><title>[unknown] (38 samples, 0.01%)</title><rect x="69.8929%" y="597" width="0.0104%" height="15" fill="rgb(214,40,45)" fg:x="254791" fg:w="38"/><text x="70.1429%" y="607.50"></text></g><g><title>[unknown] (37 samples, 0.01%)</title><rect x="69.8932%" y="581" width="0.0101%" height="15" fill="rgb(244,29,26)" fg:x="254792" fg:w="37"/><text x="70.1432%" y="591.50"></text></g><g><title>[unknown] (46 samples, 0.01%)</title><rect x="71.1638%" y="629" width="0.0126%" height="15" fill="rgb(216,16,5)" fg:x="259424" fg:w="46"/><text x="71.4138%" y="639.50"></text></g><g><title>[unknown] (46 samples, 0.01%)</title><rect x="71.1638%" y="613" width="0.0126%" height="15" fill="rgb(249,76,35)" fg:x="259424" fg:w="46"/><text x="71.4138%" y="623.50"></text></g><g><title>[unknown] (43 samples, 0.01%)</title><rect x="71.1646%" y="597" width="0.0118%" height="15" fill="rgb(207,11,44)" fg:x="259427" fg:w="43"/><text x="71.4146%" y="607.50"></text></g><g><title>[unknown] (43 samples, 0.01%)</title><rect x="71.1646%" y="581" width="0.0118%" height="15" fill="rgb(228,190,49)" fg:x="259427" fg:w="43"/><text x="71.4146%" y="591.50"></text></g><g><title>[unknown] (40 samples, 0.01%)</title><rect x="71.1654%" y="565" width="0.0110%" height="15" fill="rgb(214,173,12)" fg:x="259430" fg:w="40"/><text x="71.4154%" y="575.50"></text></g><g><title>[unknown] (38 samples, 0.01%)</title><rect x="71.1660%" y="549" width="0.0104%" height="15" fill="rgb(218,26,35)" fg:x="259432" fg:w="38"/><text x="71.4160%" y="559.50"></text></g><g><title>malloc_consolidate (3,995 samples, 1.10%)</title><rect x="70.2031%" y="645" width="1.0959%" height="15" fill="rgb(220,200,19)" fg:x="255922" fg:w="3995"/><text x="70.4531%" y="655.50"></text></g><g><title>unlink_chunk (447 samples, 0.12%)</title><rect x="71.1764%" y="629" width="0.1226%" height="15" fill="rgb(239,95,49)" fg:x="259470" fg:w="447"/><text x="71.4264%" y="639.50"></text></g><g><title>_int_malloc (5,190 samples, 1.42%)</title><rect x="69.9033%" y="661" width="1.4237%" height="15" fill="rgb(235,85,53)" fg:x="254829" fg:w="5190"/><text x="70.1533%" y="671.50"></text></g><g><title>unlink_chunk (97 samples, 0.03%)</title><rect x="71.3004%" y="645" width="0.0266%" height="15" fill="rgb(233,133,31)" fg:x="259922" fg:w="97"/><text x="71.5504%" y="655.50"></text></g><g><title>__GI___libc_malloc (5,419 samples, 1.49%)</title><rect x="69.8408%" y="677" width="1.4865%" height="15" fill="rgb(218,25,20)" fg:x="254601" fg:w="5419"/><text x="70.0908%" y="687.50"></text></g><g><title>__memmove_avx_unaligned_erms (352 samples, 0.10%)</title><rect x="71.3273%" y="677" width="0.0966%" height="15" fill="rgb(252,210,38)" fg:x="260020" fg:w="352"/><text x="71.5773%" y="687.50"></text></g><g><title>&lt;stream_book::grpc_routes::grpc_impl::order_book_proto::Level as prost::message::Message&gt;::encode_raw (38,193 samples, 10.48%)</title><rect x="60.9554%" y="725" width="10.4769%" height="15" fill="rgb(242,134,21)" fg:x="222210" fg:w="38193"/><text x="61.2054%" y="735.50">&lt;stream_book::g..</text></g><g><title>bytes::buf::buf_mut::BufMut::put_slice (34,708 samples, 9.52%)</title><rect x="61.9114%" y="709" width="9.5209%" height="15" fill="rgb(213,28,48)" fg:x="225695" fg:w="34708"/><text x="62.1614%" y="719.50">bytes::buf::bu..</text></g><g><title>bytes::bytes_mut::BytesMut::reserve_inner (5,975 samples, 1.64%)</title><rect x="69.7933%" y="693" width="1.6390%" height="15" fill="rgb(250,196,2)" fg:x="254428" fg:w="5975"/><text x="70.0433%" y="703.50"></text></g><g><title>[unknown] (45 samples, 0.01%)</title><rect x="71.4323%" y="725" width="0.0123%" height="15" fill="rgb(227,5,17)" fg:x="260403" fg:w="45"/><text x="71.6823%" y="735.50"></text></g><g><title>[unknown] (44 samples, 0.01%)</title><rect x="71.4326%" y="709" width="0.0121%" height="15" fill="rgb(221,226,24)" fg:x="260404" fg:w="44"/><text x="71.6826%" y="719.50"></text></g><g><title>[unknown] (43 samples, 0.01%)</title><rect x="71.4329%" y="693" width="0.0118%" height="15" fill="rgb(211,5,48)" fg:x="260405" fg:w="43"/><text x="71.6829%" y="703.50"></text></g><g><title>[unknown] (40 samples, 0.01%)</title><rect x="71.4337%" y="677" width="0.0110%" height="15" fill="rgb(219,150,6)" fg:x="260408" fg:w="40"/><text x="71.6837%" y="687.50"></text></g><g><title>[unknown] (37 samples, 0.01%)</title><rect x="71.4345%" y="661" width="0.0101%" height="15" fill="rgb(251,46,16)" fg:x="260411" fg:w="37"/><text x="71.6845%" y="671.50"></text></g><g><title>__memmove_avx_unaligned_erms (98 samples, 0.03%)</title><rect x="71.4658%" y="709" width="0.0269%" height="15" fill="rgb(220,204,40)" fg:x="260525" fg:w="98"/><text x="71.7158%" y="719.50"></text></g><g><title>bytes::buf::buf_mut::BufMut::put_slice (215 samples, 0.06%)</title><rect x="71.4447%" y="725" width="0.0590%" height="15" fill="rgb(211,85,2)" fg:x="260448" fg:w="215"/><text x="71.6947%" y="735.50"></text></g><g><title>bytes::buf::uninit_slice::UninitSlice::from_slice (40 samples, 0.01%)</title><rect x="71.4927%" y="709" width="0.0110%" height="15" fill="rgb(229,17,7)" fg:x="260623" fg:w="40"/><text x="71.7427%" y="719.50"></text></g><g><title>[unknown] (44 samples, 0.01%)</title><rect x="72.5096%" y="709" width="0.0121%" height="15" fill="rgb(239,72,28)" fg:x="264330" fg:w="44"/><text x="72.7596%" y="719.50"></text></g><g><title>[unknown] (39 samples, 0.01%)</title><rect x="72.5109%" y="693" width="0.0107%" height="15" fill="rgb(230,47,54)" fg:x="264335" fg:w="39"/><text x="72.7609%" y="703.50"></text></g><g><title>[unknown] (37 samples, 0.01%)</title><rect x="72.5115%" y="677" width="0.0101%" height="15" fill="rgb(214,50,8)" fg:x="264337" fg:w="37"/><text x="72.7615%" y="687.50"></text></g><g><title>[unknown] (37 samples, 0.01%)</title><rect x="72.5115%" y="661" width="0.0101%" height="15" fill="rgb(216,198,43)" fg:x="264337" fg:w="37"/><text x="72.7615%" y="671.50"></text></g><g><title>[unknown] (37 samples, 0.01%)</title><rect x="72.5115%" y="645" width="0.0101%" height="15" fill="rgb(234,20,35)" fg:x="264337" fg:w="37"/><text x="72.7615%" y="655.50"></text></g><g><title>[unknown] (66 samples, 0.02%)</title><rect x="73.7972%" y="693" width="0.0181%" height="15" fill="rgb(254,45,19)" fg:x="269024" fg:w="66"/><text x="74.0472%" y="703.50"></text></g><g><title>[unknown] (65 samples, 0.02%)</title><rect x="73.7975%" y="677" width="0.0178%" height="15" fill="rgb(219,14,44)" fg:x="269025" fg:w="65"/><text x="74.0475%" y="687.50"></text></g><g><title>[unknown] (64 samples, 0.02%)</title><rect x="73.7977%" y="661" width="0.0176%" height="15" fill="rgb(217,220,26)" fg:x="269026" fg:w="64"/><text x="74.0477%" y="671.50"></text></g><g><title>[unknown] (61 samples, 0.02%)</title><rect x="73.7986%" y="645" width="0.0167%" height="15" fill="rgb(213,158,28)" fg:x="269029" fg:w="61"/><text x="74.0486%" y="655.50"></text></g><g><title>[unknown] (61 samples, 0.02%)</title><rect x="73.7986%" y="629" width="0.0167%" height="15" fill="rgb(252,51,52)" fg:x="269029" fg:w="61"/><text x="74.0486%" y="639.50"></text></g><g><title>[unknown] (56 samples, 0.02%)</title><rect x="73.7999%" y="613" width="0.0154%" height="15" fill="rgb(246,89,16)" fg:x="269034" fg:w="56"/><text x="74.0499%" y="623.50"></text></g><g><title>[unknown] (54 samples, 0.01%)</title><rect x="73.8005%" y="597" width="0.0148%" height="15" fill="rgb(216,158,49)" fg:x="269036" fg:w="54"/><text x="74.0505%" y="607.50"></text></g><g><title>[unknown] (46 samples, 0.01%)</title><rect x="73.8027%" y="581" width="0.0126%" height="15" fill="rgb(236,107,19)" fg:x="269044" fg:w="46"/><text x="74.0527%" y="591.50"></text></g><g><title>[unknown] (41 samples, 0.01%)</title><rect x="73.8041%" y="565" width="0.0112%" height="15" fill="rgb(228,185,30)" fg:x="269049" fg:w="41"/><text x="74.0541%" y="575.50"></text></g><g><title>__memmove_avx_unaligned_erms (2,038 samples, 0.56%)</title><rect x="73.8153%" y="693" width="0.5591%" height="15" fill="rgb(246,134,8)" fg:x="269090" fg:w="2038"/><text x="74.0653%" y="703.50"></text></g><g><title>bytes::buf::uninit_slice::UninitSlice::from_slice (151 samples, 0.04%)</title><rect x="74.3744%" y="693" width="0.0414%" height="15" fill="rgb(214,143,50)" fg:x="271128" fg:w="151"/><text x="74.6244%" y="703.50"></text></g><g><title>prost::message::Message::encode (53,369 samples, 14.64%)</title><rect x="59.7767%" y="741" width="14.6399%" height="15" fill="rgb(228,75,8)" fg:x="217913" fg:w="53369"/><text x="60.0267%" y="751.50">prost::message::Messag..</text></g><g><title>prost::encoding::message::encode (10,619 samples, 2.91%)</title><rect x="71.5037%" y="725" width="2.9129%" height="15" fill="rgb(207,175,4)" fg:x="260663" fg:w="10619"/><text x="71.7537%" y="735.50">pr..</text></g><g><title>bytes::buf::buf_mut::BufMut::put_slice (6,908 samples, 1.89%)</title><rect x="72.5216%" y="709" width="1.8950%" height="15" fill="rgb(205,108,24)" fg:x="264374" fg:w="6908"/><text x="72.7716%" y="719.50">b..</text></g><g><title>tonic::codec::buffer::EncodeBuf::new (62 samples, 0.02%)</title><rect x="74.4166%" y="741" width="0.0170%" height="15" fill="rgb(244,120,49)" fg:x="271282" fg:w="62"/><text x="74.6666%" y="751.50"></text></g><g><title>__GI___libc_malloc (105 samples, 0.03%)</title><rect x="74.5200%" y="709" width="0.0288%" height="15" fill="rgb(223,47,38)" fg:x="271659" fg:w="105"/><text x="74.7700%" y="719.50"></text></g><g><title>tcache_get (78 samples, 0.02%)</title><rect x="74.5274%" y="693" width="0.0214%" height="15" fill="rgb(229,179,11)" fg:x="271686" fg:w="78"/><text x="74.7774%" y="703.50"></text></g><g><title>&lt;T as futures_util::fns::FnMut1&lt;A&gt;&gt;::call_mut (71,332 samples, 19.57%)</title><rect x="54.9880%" y="757" width="19.5674%" height="15" fill="rgb(231,122,1)" fg:x="200456" fg:w="71332"/><text x="55.2380%" y="767.50">&lt;T as futures_util::fns::FnMut1..</text></g><g><title>tonic::codec::encode::finish_encoding (444 samples, 0.12%)</title><rect x="74.4336%" y="741" width="0.1218%" height="15" fill="rgb(245,119,9)" fg:x="271344" fg:w="444"/><text x="74.6836%" y="751.50"></text></g><g><title>bytes::bytes_mut::BytesMut::split_to (283 samples, 0.08%)</title><rect x="74.4778%" y="725" width="0.0776%" height="15" fill="rgb(241,163,25)" fg:x="271505" fg:w="283"/><text x="74.7278%" y="735.50"></text></g><g><title>__memmove_avx_unaligned_erms (134 samples, 0.04%)</title><rect x="74.7430%" y="741" width="0.0368%" height="15" fill="rgb(217,214,3)" fg:x="272472" fg:w="134"/><text x="74.9930%" y="751.50"></text></g><g><title>&lt;tokio::sync::mpsc::bounded::Semaphore as tokio::sync::mpsc::chan::Semaphore&gt;::add_permit (100 samples, 0.03%)</title><rect x="74.8495%" y="709" width="0.0274%" height="15" fill="rgb(240,86,28)" fg:x="272860" fg:w="100"/><text x="75.0995%" y="719.50"></text></g><g><title>__memmove_avx_unaligned_erms (222 samples, 0.06%)</title><rect x="74.8774%" y="709" width="0.0609%" height="15" fill="rgb(215,47,9)" fg:x="272962" fg:w="222"/><text x="75.1274%" y="719.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (192 samples, 0.05%)</title><rect x="75.0357%" y="645" width="0.0527%" height="15" fill="rgb(252,25,45)" fg:x="273539" fg:w="192"/><text x="75.2857%" y="655.50"></text></g><g><title>syscall (161 samples, 0.04%)</title><rect x="75.0442%" y="629" width="0.0442%" height="15" fill="rgb(251,164,9)" fg:x="273570" fg:w="161"/><text x="75.2942%" y="639.50"></text></g><g><title>[unknown] (155 samples, 0.04%)</title><rect x="75.0459%" y="613" width="0.0425%" height="15" fill="rgb(233,194,0)" fg:x="273576" fg:w="155"/><text x="75.2959%" y="623.50"></text></g><g><title>[unknown] (147 samples, 0.04%)</title><rect x="75.0481%" y="597" width="0.0403%" height="15" fill="rgb(249,111,24)" fg:x="273584" fg:w="147"/><text x="75.2981%" y="607.50"></text></g><g><title>[unknown] (146 samples, 0.04%)</title><rect x="75.0483%" y="581" width="0.0400%" height="15" fill="rgb(250,223,3)" fg:x="273585" fg:w="146"/><text x="75.2983%" y="591.50"></text></g><g><title>[unknown] (145 samples, 0.04%)</title><rect x="75.0486%" y="565" width="0.0398%" height="15" fill="rgb(236,178,37)" fg:x="273586" fg:w="145"/><text x="75.2986%" y="575.50"></text></g><g><title>[unknown] (142 samples, 0.04%)</title><rect x="75.0494%" y="549" width="0.0390%" height="15" fill="rgb(241,158,50)" fg:x="273589" fg:w="142"/><text x="75.2994%" y="559.50"></text></g><g><title>[unknown] (124 samples, 0.03%)</title><rect x="75.0544%" y="533" width="0.0340%" height="15" fill="rgb(213,121,41)" fg:x="273607" fg:w="124"/><text x="75.3044%" y="543.50"></text></g><g><title>[unknown] (119 samples, 0.03%)</title><rect x="75.0558%" y="517" width="0.0326%" height="15" fill="rgb(240,92,3)" fg:x="273612" fg:w="119"/><text x="75.3058%" y="527.50"></text></g><g><title>[unknown] (86 samples, 0.02%)</title><rect x="75.0648%" y="501" width="0.0236%" height="15" fill="rgb(205,123,3)" fg:x="273645" fg:w="86"/><text x="75.3148%" y="511.50"></text></g><g><title>[unknown] (66 samples, 0.02%)</title><rect x="75.0703%" y="485" width="0.0181%" height="15" fill="rgb(205,97,47)" fg:x="273665" fg:w="66"/><text x="75.3203%" y="495.50"></text></g><g><title>[unknown] (51 samples, 0.01%)</title><rect x="75.0744%" y="469" width="0.0140%" height="15" fill="rgb(247,152,14)" fg:x="273680" fg:w="51"/><text x="75.3244%" y="479.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_local (66 samples, 0.02%)</title><rect x="75.1013%" y="645" width="0.0181%" height="15" fill="rgb(248,195,53)" fg:x="273778" fg:w="66"/><text x="75.3513%" y="655.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::schedule (354 samples, 0.10%)</title><rect x="75.0226%" y="677" width="0.0971%" height="15" fill="rgb(226,201,16)" fg:x="273491" fg:w="354"/><text x="75.2726%" y="687.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (350 samples, 0.10%)</title><rect x="75.0237%" y="661" width="0.0960%" height="15" fill="rgb(205,98,0)" fg:x="273495" fg:w="350"/><text x="75.2737%" y="671.50"></text></g><g><title>tokio::runtime::task::raw::schedule (37 samples, 0.01%)</title><rect x="75.1197%" y="677" width="0.0101%" height="15" fill="rgb(214,191,48)" fg:x="273845" fg:w="37"/><text x="75.3697%" y="687.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::add_permits_locked (735 samples, 0.20%)</title><rect x="74.9436%" y="709" width="0.2016%" height="15" fill="rgb(237,112,39)" fg:x="273203" fg:w="735"/><text x="75.1936%" y="719.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (476 samples, 0.13%)</title><rect x="75.0146%" y="693" width="0.1306%" height="15" fill="rgb(247,203,27)" fg:x="273462" fg:w="476"/><text x="75.2646%" y="703.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_val (56 samples, 0.02%)</title><rect x="75.1298%" y="677" width="0.0154%" height="15" fill="rgb(235,124,28)" fg:x="273882" fg:w="56"/><text x="75.3798%" y="687.50"></text></g><g><title>tokio::sync::mpsc::list::Rx&lt;T&gt;::pop (636 samples, 0.17%)</title><rect x="75.1452%" y="709" width="0.1745%" height="15" fill="rgb(208,207,46)" fg:x="273938" fg:w="636"/><text x="75.3952%" y="719.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (1,840 samples, 0.50%)</title><rect x="74.8360%" y="725" width="0.5047%" height="15" fill="rgb(234,176,4)" fg:x="272811" fg:w="1840"/><text x="75.0860%" y="735.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::register_by_ref (77 samples, 0.02%)</title><rect x="75.3196%" y="709" width="0.0211%" height="15" fill="rgb(230,133,28)" fg:x="274574" fg:w="77"/><text x="75.5696%" y="719.50"></text></g><g><title>tokio::runtime::coop::Budget::decrement (53 samples, 0.01%)</title><rect x="75.3408%" y="725" width="0.0145%" height="15" fill="rgb(211,137,40)" fg:x="274651" fg:w="53"/><text x="75.5908%" y="735.50"></text></g><g><title>&lt;futures_util::stream::unfold::Unfold&lt;T,F,Fut&gt; as futures_core::stream::Stream&gt;::poll_next (2,943 samples, 0.81%)</title><rect x="74.5554%" y="757" width="0.8073%" height="15" fill="rgb(254,35,13)" fg:x="271788" fg:w="2943"/><text x="74.8054%" y="767.50"></text></g><g><title>tokio::sync::mpsc::chan::Rx&lt;T,S&gt;::recv (2,114 samples, 0.58%)</title><rect x="74.7828%" y="741" width="0.5799%" height="15" fill="rgb(225,49,51)" fg:x="272617" fg:w="2114"/><text x="75.0328%" y="751.50"></text></g><g><title>&lt;tonic::codec::encode::EncodeBody&lt;S&gt; as http_body::Body&gt;::poll_data (74,607 samples, 20.47%)</title><rect x="54.8997%" y="773" width="20.4658%" height="15" fill="rgb(251,10,15)" fg:x="200134" fg:w="74607"/><text x="55.1497%" y="783.50">&lt;tonic::codec::encode::EncodeBod..</text></g><g><title>&lt;http_body::combinators::map_err::MapErr&lt;B,F&gt; as http_body::Body&gt;::poll_data (74,757 samples, 20.51%)</title><rect x="54.8602%" y="789" width="20.5069%" height="15" fill="rgb(228,207,15)" fg:x="199990" fg:w="74757"/><text x="55.1102%" y="799.50">&lt;http_body::combinators::map_err..</text></g><g><title>&lt;http_body::combinators::map_err::MapErr&lt;B,F&gt; as http_body::Body&gt;::poll_data (74,929 samples, 20.55%)</title><rect x="54.8149%" y="805" width="20.5541%" height="15" fill="rgb(241,99,19)" fg:x="199825" fg:w="74929"/><text x="55.0649%" y="815.50">&lt;http_body::combinators::map_err..</text></g><g><title>&lt;http_body::combinators::map_err::MapErr&lt;B,F&gt; as http_body::Body&gt;::poll_data (75,087 samples, 20.60%)</title><rect x="54.7743%" y="821" width="20.5975%" height="15" fill="rgb(207,104,49)" fg:x="199677" fg:w="75087"/><text x="55.0243%" y="831.50">&lt;http_body::combinators::map_err..</text></g><g><title>&lt;tonic::codec::encode::EncodeBody&lt;S&gt; as http_body::Body&gt;::is_end_stream (87 samples, 0.02%)</title><rect x="75.3718%" y="821" width="0.0239%" height="15" fill="rgb(234,99,18)" fg:x="274764" fg:w="87"/><text x="75.6218%" y="831.50"></text></g><g><title>h2::proto::streams::state::State::ensure_reason (40 samples, 0.01%)</title><rect x="75.4974%" y="789" width="0.0110%" height="15" fill="rgb(213,191,49)" fg:x="275222" fg:w="40"/><text x="75.7474%" y="799.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (74 samples, 0.02%)</title><rect x="75.5103%" y="789" width="0.0203%" height="15" fill="rgb(210,226,19)" fg:x="275269" fg:w="74"/><text x="75.7603%" y="799.50"></text></g><g><title>h2::proto::streams::send::Send::poll_reset (271 samples, 0.07%)</title><rect x="75.4620%" y="805" width="0.0743%" height="15" fill="rgb(229,97,18)" fg:x="275093" fg:w="271"/><text x="75.7120%" y="815.50"></text></g><g><title>h2::proto::streams::streams::StreamRef&lt;B&gt;::poll_reset (532 samples, 0.15%)</title><rect x="75.3995%" y="821" width="0.1459%" height="15" fill="rgb(211,167,15)" fg:x="274865" fg:w="532"/><text x="75.6495%" y="831.50"></text></g><g><title>h2::proto::streams::send::Send::capacity (71 samples, 0.02%)</title><rect x="75.5973%" y="805" width="0.0195%" height="15" fill="rgb(210,169,34)" fg:x="275586" fg:w="71"/><text x="75.8473%" y="815.50"></text></g><g><title>h2::share::SendStream&lt;B&gt;::capacity (286 samples, 0.08%)</title><rect x="75.5454%" y="821" width="0.0785%" height="15" fill="rgb(241,121,31)" fg:x="275397" fg:w="286"/><text x="75.7954%" y="831.50"></text></g><g><title>h2::proto::streams::send::Send::poll_capacity (47 samples, 0.01%)</title><rect x="75.6340%" y="805" width="0.0129%" height="15" fill="rgb(232,40,11)" fg:x="275720" fg:w="47"/><text x="75.8840%" y="815.50"></text></g><g><title>h2::share::SendStream&lt;B&gt;::poll_capacity (104 samples, 0.03%)</title><rect x="75.6239%" y="821" width="0.0285%" height="15" fill="rgb(205,86,26)" fg:x="275683" fg:w="104"/><text x="75.8739%" y="831.50"></text></g><g><title>h2::proto::streams::prioritize::Prioritize::reserve_capacity (1,043 samples, 0.29%)</title><rect x="75.7421%" y="805" width="0.2861%" height="15" fill="rgb(231,126,28)" fg:x="276114" fg:w="1043"/><text x="75.9921%" y="815.50"></text></g><g><title>h2::proto::streams::prioritize::Prioritize::try_assign_capacity (555 samples, 0.15%)</title><rect x="75.8760%" y="789" width="0.1522%" height="15" fill="rgb(219,221,18)" fg:x="276602" fg:w="555"/><text x="76.1260%" y="799.50"></text></g><g><title>h2::proto::streams::stream::Stream::assign_capacity (216 samples, 0.06%)</title><rect x="75.9689%" y="773" width="0.0593%" height="15" fill="rgb(211,40,0)" fg:x="276941" fg:w="216"/><text x="76.2189%" y="783.50"></text></g><g><title>h2::proto::streams::stream::Stream::notify_capacity (178 samples, 0.05%)</title><rect x="75.9794%" y="757" width="0.0488%" height="15" fill="rgb(239,85,43)" fg:x="276979" fg:w="178"/><text x="76.2294%" y="767.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (87 samples, 0.02%)</title><rect x="76.0043%" y="741" width="0.0239%" height="15" fill="rgb(231,55,21)" fg:x="277070" fg:w="87"/><text x="76.2543%" y="751.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_val (82 samples, 0.02%)</title><rect x="76.0057%" y="725" width="0.0225%" height="15" fill="rgb(225,184,43)" fg:x="277075" fg:w="82"/><text x="76.2557%" y="735.50"></text></g><g><title>h2::proto::streams::send::Send::reserve_capacity (73 samples, 0.02%)</title><rect x="76.0282%" y="805" width="0.0200%" height="15" fill="rgb(251,158,41)" fg:x="277157" fg:w="73"/><text x="76.2782%" y="815.50"></text></g><g><title>std::sys::unix::futex::futex_wait (861 samples, 0.24%)</title><rect x="76.0545%" y="789" width="0.2362%" height="15" fill="rgb(234,159,37)" fg:x="277253" fg:w="861"/><text x="76.3045%" y="799.50"></text></g><g><title>syscall (847 samples, 0.23%)</title><rect x="76.0584%" y="773" width="0.2323%" height="15" fill="rgb(216,204,22)" fg:x="277267" fg:w="847"/><text x="76.3084%" y="783.50"></text></g><g><title>[unknown] (829 samples, 0.23%)</title><rect x="76.0633%" y="757" width="0.2274%" height="15" fill="rgb(214,17,3)" fg:x="277285" fg:w="829"/><text x="76.3133%" y="767.50"></text></g><g><title>[unknown] (780 samples, 0.21%)</title><rect x="76.0768%" y="741" width="0.2140%" height="15" fill="rgb(212,111,17)" fg:x="277334" fg:w="780"/><text x="76.3268%" y="751.50"></text></g><g><title>[unknown] (771 samples, 0.21%)</title><rect x="76.0792%" y="725" width="0.2115%" height="15" fill="rgb(221,157,24)" fg:x="277343" fg:w="771"/><text x="76.3292%" y="735.50"></text></g><g><title>[unknown] (765 samples, 0.21%)</title><rect x="76.0809%" y="709" width="0.2099%" height="15" fill="rgb(252,16,13)" fg:x="277349" fg:w="765"/><text x="76.3309%" y="719.50"></text></g><g><title>[unknown] (736 samples, 0.20%)</title><rect x="76.0888%" y="693" width="0.2019%" height="15" fill="rgb(221,62,2)" fg:x="277378" fg:w="736"/><text x="76.3388%" y="703.50"></text></g><g><title>[unknown] (701 samples, 0.19%)</title><rect x="76.0984%" y="677" width="0.1923%" height="15" fill="rgb(247,87,22)" fg:x="277413" fg:w="701"/><text x="76.3484%" y="687.50"></text></g><g><title>[unknown] (611 samples, 0.17%)</title><rect x="76.1231%" y="661" width="0.1676%" height="15" fill="rgb(215,73,9)" fg:x="277503" fg:w="611"/><text x="76.3731%" y="671.50"></text></g><g><title>[unknown] (589 samples, 0.16%)</title><rect x="76.1291%" y="645" width="0.1616%" height="15" fill="rgb(207,175,33)" fg:x="277525" fg:w="589"/><text x="76.3791%" y="655.50"></text></g><g><title>[unknown] (542 samples, 0.15%)</title><rect x="76.1420%" y="629" width="0.1487%" height="15" fill="rgb(243,129,54)" fg:x="277572" fg:w="542"/><text x="76.3920%" y="639.50"></text></g><g><title>[unknown] (459 samples, 0.13%)</title><rect x="76.1648%" y="613" width="0.1259%" height="15" fill="rgb(227,119,45)" fg:x="277655" fg:w="459"/><text x="76.4148%" y="623.50"></text></g><g><title>[unknown] (297 samples, 0.08%)</title><rect x="76.2092%" y="597" width="0.0815%" height="15" fill="rgb(205,109,36)" fg:x="277817" fg:w="297"/><text x="76.4592%" y="607.50"></text></g><g><title>[unknown] (246 samples, 0.07%)</title><rect x="76.2232%" y="581" width="0.0675%" height="15" fill="rgb(205,6,39)" fg:x="277868" fg:w="246"/><text x="76.4732%" y="591.50"></text></g><g><title>[unknown] (185 samples, 0.05%)</title><rect x="76.2400%" y="565" width="0.0507%" height="15" fill="rgb(221,32,16)" fg:x="277929" fg:w="185"/><text x="76.4900%" y="575.50"></text></g><g><title>[unknown] (130 samples, 0.04%)</title><rect x="76.2551%" y="549" width="0.0357%" height="15" fill="rgb(228,144,50)" fg:x="277984" fg:w="130"/><text x="76.5051%" y="559.50"></text></g><g><title>[unknown] (38 samples, 0.01%)</title><rect x="76.2803%" y="533" width="0.0104%" height="15" fill="rgb(229,201,53)" fg:x="278076" fg:w="38"/><text x="76.5303%" y="543.50"></text></g><g><title>core::hint::spin_loop (1,195 samples, 0.33%)</title><rect x="76.2937%" y="773" width="0.3278%" height="15" fill="rgb(249,153,27)" fg:x="278125" fg:w="1195"/><text x="76.5437%" y="783.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (1,195 samples, 0.33%)</title><rect x="76.2937%" y="757" width="0.3278%" height="15" fill="rgb(227,106,25)" fg:x="278125" fg:w="1195"/><text x="76.5437%" y="767.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock_contended (2,144 samples, 0.59%)</title><rect x="76.0482%" y="805" width="0.5881%" height="15" fill="rgb(230,65,29)" fg:x="277230" fg:w="2144"/><text x="76.2982%" y="815.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::spin (1,260 samples, 0.35%)</title><rect x="76.2907%" y="789" width="0.3456%" height="15" fill="rgb(221,57,46)" fg:x="278114" fg:w="1260"/><text x="76.5407%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (54 samples, 0.01%)</title><rect x="76.6215%" y="773" width="0.0148%" height="15" fill="rgb(229,161,17)" fg:x="279320" fg:w="54"/><text x="76.8715%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_load (54 samples, 0.01%)</title><rect x="76.6215%" y="757" width="0.0148%" height="15" fill="rgb(222,213,11)" fg:x="279320" fg:w="54"/><text x="76.8715%" y="767.50"></text></g><g><title>h2::share::SendStream&lt;B&gt;::reserve_capacity (3,687 samples, 1.01%)</title><rect x="75.6524%" y="821" width="1.0114%" height="15" fill="rgb(235,35,13)" fg:x="275787" fg:w="3687"/><text x="75.9024%" y="831.50"></text></g><g><title>syscall (95 samples, 0.03%)</title><rect x="76.6377%" y="805" width="0.0261%" height="15" fill="rgb(233,158,34)" fg:x="279379" fg:w="95"/><text x="76.8877%" y="815.50"></text></g><g><title>[unknown] (89 samples, 0.02%)</title><rect x="76.6394%" y="789" width="0.0244%" height="15" fill="rgb(215,151,48)" fg:x="279385" fg:w="89"/><text x="76.8894%" y="799.50"></text></g><g><title>[unknown] (75 samples, 0.02%)</title><rect x="76.6432%" y="773" width="0.0206%" height="15" fill="rgb(229,84,14)" fg:x="279399" fg:w="75"/><text x="76.8932%" y="783.50"></text></g><g><title>[unknown] (70 samples, 0.02%)</title><rect x="76.6446%" y="757" width="0.0192%" height="15" fill="rgb(229,68,14)" fg:x="279404" fg:w="70"/><text x="76.8946%" y="767.50"></text></g><g><title>[unknown] (67 samples, 0.02%)</title><rect x="76.6454%" y="741" width="0.0184%" height="15" fill="rgb(243,106,26)" fg:x="279407" fg:w="67"/><text x="76.8954%" y="751.50"></text></g><g><title>[unknown] (54 samples, 0.01%)</title><rect x="76.6490%" y="725" width="0.0148%" height="15" fill="rgb(206,45,38)" fg:x="279420" fg:w="54"/><text x="76.8990%" y="735.50"></text></g><g><title>&lt;h2::proto::streams::store::Ptr as core::ops::deref::Deref&gt;::deref (94 samples, 0.03%)</title><rect x="76.8399%" y="789" width="0.0258%" height="15" fill="rgb(226,6,15)" fg:x="280116" fg:w="94"/><text x="77.0899%" y="799.50"></text></g><g><title>h2::frame::stream_id::StreamId::is_zero (61 samples, 0.02%)</title><rect x="76.8753%" y="789" width="0.0167%" height="15" fill="rgb(232,22,54)" fg:x="280245" fg:w="61"/><text x="77.1253%" y="799.50"></text></g><g><title>h2::proto::streams::counts::Counts::transition_after (185 samples, 0.05%)</title><rect x="76.8920%" y="789" width="0.0507%" height="15" fill="rgb(229,222,32)" fg:x="280306" fg:w="185"/><text x="77.1420%" y="799.50"></text></g><g><title>&lt;h2::proto::streams::flow_control::Window as core::cmp::PartialOrd&lt;usize&gt;&gt;::partial_cmp (105 samples, 0.03%)</title><rect x="77.0377%" y="773" width="0.0288%" height="15" fill="rgb(228,62,29)" fg:x="280837" fg:w="105"/><text x="77.2877%" y="783.50"></text></g><g><title>&lt;h2::proto::streams::store::Ptr as core::ops::deref::Deref&gt;::deref (104 samples, 0.03%)</title><rect x="77.0665%" y="773" width="0.0285%" height="15" fill="rgb(251,103,34)" fg:x="280942" fg:w="104"/><text x="77.3165%" y="783.50"></text></g><g><title>h2::proto::streams::flow_control::FlowControl::available (59 samples, 0.02%)</title><rect x="77.1145%" y="773" width="0.0162%" height="15" fill="rgb(233,12,30)" fg:x="281117" fg:w="59"/><text x="77.3645%" y="783.50"></text></g><g><title>__memmove_avx_unaligned_erms (387 samples, 0.11%)</title><rect x="77.1968%" y="757" width="0.1062%" height="15" fill="rgb(238,52,0)" fg:x="281417" fg:w="387"/><text x="77.4468%" y="767.50"></text></g><g><title>h2::proto::streams::store::Queue&lt;N&gt;::push (56 samples, 0.02%)</title><rect x="77.3556%" y="741" width="0.0154%" height="15" fill="rgb(223,98,5)" fg:x="281996" fg:w="56"/><text x="77.6056%" y="751.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket_pair (55 samples, 0.02%)</title><rect x="77.4149%" y="677" width="0.0151%" height="15" fill="rgb(228,75,37)" fg:x="282212" fg:w="55"/><text x="77.6649%" y="687.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (1,101 samples, 0.30%)</title><rect x="77.3913%" y="693" width="0.3020%" height="15" fill="rgb(205,115,49)" fg:x="282126" fg:w="1101"/><text x="77.6413%" y="703.50"></text></g><g><title>syscall (930 samples, 0.26%)</title><rect x="77.4382%" y="677" width="0.2551%" height="15" fill="rgb(250,154,43)" fg:x="282297" fg:w="930"/><text x="77.6882%" y="687.50"></text></g><g><title>[unknown] (896 samples, 0.25%)</title><rect x="77.4475%" y="661" width="0.2458%" height="15" fill="rgb(226,43,29)" fg:x="282331" fg:w="896"/><text x="77.6975%" y="671.50"></text></g><g><title>[unknown] (885 samples, 0.24%)</title><rect x="77.4505%" y="645" width="0.2428%" height="15" fill="rgb(249,228,39)" fg:x="282342" fg:w="885"/><text x="77.7005%" y="655.50"></text></g><g><title>[unknown] (876 samples, 0.24%)</title><rect x="77.4530%" y="629" width="0.2403%" height="15" fill="rgb(216,79,43)" fg:x="282351" fg:w="876"/><text x="77.7030%" y="639.50"></text></g><g><title>[unknown] (857 samples, 0.24%)</title><rect x="77.4582%" y="613" width="0.2351%" height="15" fill="rgb(228,95,12)" fg:x="282370" fg:w="857"/><text x="77.7082%" y="623.50"></text></g><g><title>[unknown] (826 samples, 0.23%)</title><rect x="77.4667%" y="597" width="0.2266%" height="15" fill="rgb(249,221,15)" fg:x="282401" fg:w="826"/><text x="77.7167%" y="607.50"></text></g><g><title>[unknown] (714 samples, 0.20%)</title><rect x="77.4974%" y="581" width="0.1959%" height="15" fill="rgb(233,34,13)" fg:x="282513" fg:w="714"/><text x="77.7474%" y="591.50"></text></g><g><title>[unknown] (641 samples, 0.18%)</title><rect x="77.5175%" y="565" width="0.1758%" height="15" fill="rgb(214,103,39)" fg:x="282586" fg:w="641"/><text x="77.7675%" y="575.50"></text></g><g><title>[unknown] (588 samples, 0.16%)</title><rect x="77.5320%" y="549" width="0.1613%" height="15" fill="rgb(251,126,39)" fg:x="282639" fg:w="588"/><text x="77.7820%" y="559.50"></text></g><g><title>[unknown] (482 samples, 0.13%)</title><rect x="77.5611%" y="533" width="0.1322%" height="15" fill="rgb(214,216,36)" fg:x="282745" fg:w="482"/><text x="77.8111%" y="543.50"></text></g><g><title>[unknown] (406 samples, 0.11%)</title><rect x="77.5819%" y="517" width="0.1114%" height="15" fill="rgb(220,221,8)" fg:x="282821" fg:w="406"/><text x="77.8319%" y="527.50"></text></g><g><title>[unknown] (198 samples, 0.05%)</title><rect x="77.6390%" y="501" width="0.0543%" height="15" fill="rgb(240,216,3)" fg:x="283029" fg:w="198"/><text x="77.8890%" y="511.50"></text></g><g><title>[unknown] (71 samples, 0.02%)</title><rect x="77.6738%" y="485" width="0.0195%" height="15" fill="rgb(232,218,17)" fg:x="283156" fg:w="71"/><text x="77.9238%" y="495.50"></text></g><g><title>[unknown] (103 samples, 0.03%)</title><rect x="77.6949%" y="581" width="0.0283%" height="15" fill="rgb(229,163,45)" fg:x="283233" fg:w="103"/><text x="77.9449%" y="591.50"></text></g><g><title>[unknown] (101 samples, 0.03%)</title><rect x="77.6955%" y="565" width="0.0277%" height="15" fill="rgb(231,110,42)" fg:x="283235" fg:w="101"/><text x="77.9455%" y="575.50"></text></g><g><title>[unknown] (99 samples, 0.03%)</title><rect x="77.6960%" y="549" width="0.0272%" height="15" fill="rgb(208,170,48)" fg:x="283237" fg:w="99"/><text x="77.9460%" y="559.50"></text></g><g><title>[unknown] (99 samples, 0.03%)</title><rect x="77.6960%" y="533" width="0.0272%" height="15" fill="rgb(239,116,25)" fg:x="283237" fg:w="99"/><text x="77.9460%" y="543.50"></text></g><g><title>[unknown] (96 samples, 0.03%)</title><rect x="77.6969%" y="517" width="0.0263%" height="15" fill="rgb(219,200,50)" fg:x="283240" fg:w="96"/><text x="77.9469%" y="527.50"></text></g><g><title>[unknown] (87 samples, 0.02%)</title><rect x="77.6993%" y="501" width="0.0239%" height="15" fill="rgb(245,200,0)" fg:x="283249" fg:w="87"/><text x="77.9493%" y="511.50"></text></g><g><title>[unknown] (82 samples, 0.02%)</title><rect x="77.7007%" y="485" width="0.0225%" height="15" fill="rgb(245,119,33)" fg:x="283254" fg:w="82"/><text x="77.9507%" y="495.50"></text></g><g><title>[unknown] (73 samples, 0.02%)</title><rect x="77.7032%" y="469" width="0.0200%" height="15" fill="rgb(231,125,12)" fg:x="283263" fg:w="73"/><text x="77.9532%" y="479.50"></text></g><g><title>[unknown] (72 samples, 0.02%)</title><rect x="77.7034%" y="453" width="0.0198%" height="15" fill="rgb(216,96,41)" fg:x="283264" fg:w="72"/><text x="77.9534%" y="463.50"></text></g><g><title>[unknown] (70 samples, 0.02%)</title><rect x="77.7040%" y="437" width="0.0192%" height="15" fill="rgb(248,43,45)" fg:x="283266" fg:w="70"/><text x="77.9540%" y="447.50"></text></g><g><title>[unknown] (63 samples, 0.02%)</title><rect x="77.7059%" y="421" width="0.0173%" height="15" fill="rgb(217,222,7)" fg:x="283273" fg:w="63"/><text x="77.9559%" y="431.50"></text></g><g><title>[unknown] (62 samples, 0.02%)</title><rect x="77.7062%" y="405" width="0.0170%" height="15" fill="rgb(233,28,6)" fg:x="283274" fg:w="62"/><text x="77.9562%" y="415.50"></text></g><g><title>[unknown] (60 samples, 0.02%)</title><rect x="77.7067%" y="389" width="0.0165%" height="15" fill="rgb(231,218,15)" fg:x="283276" fg:w="60"/><text x="77.9567%" y="399.50"></text></g><g><title>[unknown] (55 samples, 0.02%)</title><rect x="77.7081%" y="373" width="0.0151%" height="15" fill="rgb(226,171,48)" fg:x="283281" fg:w="55"/><text x="77.9581%" y="383.50"></text></g><g><title>[unknown] (55 samples, 0.02%)</title><rect x="77.7081%" y="357" width="0.0151%" height="15" fill="rgb(235,201,9)" fg:x="283281" fg:w="55"/><text x="77.9581%" y="367.50"></text></g><g><title>[unknown] (54 samples, 0.01%)</title><rect x="77.7084%" y="341" width="0.0148%" height="15" fill="rgb(217,80,15)" fg:x="283282" fg:w="54"/><text x="77.9584%" y="351.50"></text></g><g><title>[unknown] (44 samples, 0.01%)</title><rect x="77.7111%" y="325" width="0.0121%" height="15" fill="rgb(219,152,8)" fg:x="283292" fg:w="44"/><text x="77.9611%" y="335.50"></text></g><g><title>__libc_write (108 samples, 0.03%)</title><rect x="77.6938%" y="613" width="0.0296%" height="15" fill="rgb(243,107,38)" fg:x="283229" fg:w="108"/><text x="77.9438%" y="623.50"></text></g><g><title>__libc_write (106 samples, 0.03%)</title><rect x="77.6944%" y="597" width="0.0291%" height="15" fill="rgb(231,17,5)" fg:x="283231" fg:w="106"/><text x="77.9444%" y="607.50"></text></g><g><title>tokio::runtime::driver::Handle::unpark (111 samples, 0.03%)</title><rect x="77.6933%" y="693" width="0.0304%" height="15" fill="rgb(209,25,54)" fg:x="283227" fg:w="111"/><text x="77.9433%" y="703.50"></text></g><g><title>mio::sys::unix::waker::eventfd::Waker::wake (110 samples, 0.03%)</title><rect x="77.6936%" y="677" width="0.0302%" height="15" fill="rgb(219,0,2)" fg:x="283228" fg:w="110"/><text x="77.9436%" y="687.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (110 samples, 0.03%)</title><rect x="77.6936%" y="661" width="0.0302%" height="15" fill="rgb(246,9,5)" fg:x="283228" fg:w="110"/><text x="77.9436%" y="671.50"></text></g><g><title>std::sys::unix::fs::File::write (109 samples, 0.03%)</title><rect x="77.6938%" y="645" width="0.0299%" height="15" fill="rgb(226,159,4)" fg:x="283229" fg:w="109"/><text x="77.9438%" y="655.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (109 samples, 0.03%)</title><rect x="77.6938%" y="629" width="0.0299%" height="15" fill="rgb(219,175,34)" fg:x="283229" fg:w="109"/><text x="77.9438%" y="639.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (61 samples, 0.02%)</title><rect x="77.7237%" y="693" width="0.0167%" height="15" fill="rgb(236,10,46)" fg:x="283338" fg:w="61"/><text x="77.9737%" y="703.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_local (157 samples, 0.04%)</title><rect x="77.7405%" y="693" width="0.0431%" height="15" fill="rgb(240,211,16)" fg:x="283399" fg:w="157"/><text x="77.9905%" y="703.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::schedule (1,486 samples, 0.41%)</title><rect x="77.3770%" y="725" width="0.4076%" height="15" fill="rgb(205,3,43)" fg:x="282074" fg:w="1486"/><text x="77.6270%" y="735.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (1,480 samples, 0.41%)</title><rect x="77.3787%" y="709" width="0.4060%" height="15" fill="rgb(245,7,22)" fg:x="282080" fg:w="1480"/><text x="77.6287%" y="719.50"></text></g><g><title>h2::proto::streams::prioritize::Prioritize::schedule_send (1,873 samples, 0.51%)</title><rect x="77.3087%" y="757" width="0.5138%" height="15" fill="rgb(239,132,32)" fg:x="281825" fg:w="1873"/><text x="77.5587%" y="767.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (1,646 samples, 0.45%)</title><rect x="77.3710%" y="741" width="0.4515%" height="15" fill="rgb(228,202,34)" fg:x="282052" fg:w="1646"/><text x="77.6210%" y="751.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_val (121 samples, 0.03%)</title><rect x="77.7893%" y="725" width="0.0332%" height="15" fill="rgb(254,200,22)" fg:x="283577" fg:w="121"/><text x="78.0393%" y="735.50"></text></g><g><title>h2::proto::streams::prioritize::Prioritize::queue_frame (3,025 samples, 0.83%)</title><rect x="77.1307%" y="773" width="0.8298%" height="15" fill="rgb(219,10,39)" fg:x="281176" fg:w="3025"/><text x="77.3807%" y="783.50"></text></g><g><title>slab::Slab&lt;T&gt;::insert (503 samples, 0.14%)</title><rect x="77.8225%" y="757" width="0.1380%" height="15" fill="rgb(226,210,39)" fg:x="283698" fg:w="503"/><text x="78.0725%" y="767.50"></text></g><g><title>__memmove_avx_unaligned_erms (128 samples, 0.04%)</title><rect x="77.9254%" y="741" width="0.0351%" height="15" fill="rgb(208,219,16)" fg:x="284073" fg:w="128"/><text x="78.1754%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Span&gt; (47 samples, 0.01%)</title><rect x="78.1583%" y="757" width="0.0129%" height="15" fill="rgb(216,158,51)" fg:x="284922" fg:w="47"/><text x="78.4083%" y="767.50"></text></g><g><title>h2::proto::streams::store::Queue&lt;N&gt;::push (247 samples, 0.07%)</title><rect x="78.1711%" y="757" width="0.0678%" height="15" fill="rgb(233,14,44)" fg:x="284969" fg:w="247"/><text x="78.4211%" y="767.50"></text></g><g><title>h2::proto::streams::prioritize::Prioritize::try_assign_capacity (1,127 samples, 0.31%)</title><rect x="77.9605%" y="773" width="0.3092%" height="15" fill="rgb(237,97,39)" fg:x="284201" fg:w="1127"/><text x="78.2105%" y="783.50"></text></g><g><title>h2::proto::streams::stream::Stream::assign_capacity (112 samples, 0.03%)</title><rect x="78.2389%" y="757" width="0.0307%" height="15" fill="rgb(218,198,43)" fg:x="285216" fg:w="112"/><text x="78.4889%" y="767.50"></text></g><g><title>h2::proto::streams::prioritize::Prioritize::send_data (4,903 samples, 1.34%)</title><rect x="76.9428%" y="789" width="1.3450%" height="15" fill="rgb(231,104,20)" fg:x="280491" fg:w="4903"/><text x="77.1928%" y="799.50"></text></g><g><title>h2::proto::streams::state::State::is_send_streaming (66 samples, 0.02%)</title><rect x="78.2696%" y="773" width="0.0181%" height="15" fill="rgb(254,36,13)" fg:x="285328" fg:w="66"/><text x="78.5196%" y="783.50"></text></g><g><title>h2::proto::streams::counts::Counts::transition (5,460 samples, 1.50%)</title><rect x="76.7993%" y="805" width="1.4978%" height="15" fill="rgb(248,14,50)" fg:x="279968" fg:w="5460"/><text x="77.0493%" y="815.50"></text></g><g><title>std::sys::unix::futex::futex_wait (676 samples, 0.19%)</title><rect x="78.3012%" y="789" width="0.1854%" height="15" fill="rgb(217,107,29)" fg:x="285443" fg:w="676"/><text x="78.5512%" y="799.50"></text></g><g><title>syscall (666 samples, 0.18%)</title><rect x="78.3039%" y="773" width="0.1827%" height="15" fill="rgb(251,169,33)" fg:x="285453" fg:w="666"/><text x="78.5539%" y="783.50"></text></g><g><title>[unknown] (645 samples, 0.18%)</title><rect x="78.3097%" y="757" width="0.1769%" height="15" fill="rgb(217,108,32)" fg:x="285474" fg:w="645"/><text x="78.5597%" y="767.50"></text></g><g><title>[unknown] (625 samples, 0.17%)</title><rect x="78.3152%" y="741" width="0.1714%" height="15" fill="rgb(219,66,42)" fg:x="285494" fg:w="625"/><text x="78.5652%" y="751.50"></text></g><g><title>[unknown] (615 samples, 0.17%)</title><rect x="78.3179%" y="725" width="0.1687%" height="15" fill="rgb(206,180,7)" fg:x="285504" fg:w="615"/><text x="78.5679%" y="735.50"></text></g><g><title>[unknown] (601 samples, 0.16%)</title><rect x="78.3217%" y="709" width="0.1649%" height="15" fill="rgb(208,226,31)" fg:x="285518" fg:w="601"/><text x="78.5717%" y="719.50"></text></g><g><title>[unknown] (584 samples, 0.16%)</title><rect x="78.3264%" y="693" width="0.1602%" height="15" fill="rgb(218,26,49)" fg:x="285535" fg:w="584"/><text x="78.5764%" y="703.50"></text></g><g><title>[unknown] (560 samples, 0.15%)</title><rect x="78.3330%" y="677" width="0.1536%" height="15" fill="rgb(233,197,48)" fg:x="285559" fg:w="560"/><text x="78.5830%" y="687.50"></text></g><g><title>[unknown] (508 samples, 0.14%)</title><rect x="78.3473%" y="661" width="0.1394%" height="15" fill="rgb(252,181,51)" fg:x="285611" fg:w="508"/><text x="78.5973%" y="671.50"></text></g><g><title>[unknown] (497 samples, 0.14%)</title><rect x="78.3503%" y="645" width="0.1363%" height="15" fill="rgb(253,90,19)" fg:x="285622" fg:w="497"/><text x="78.6003%" y="655.50"></text></g><g><title>[unknown] (457 samples, 0.13%)</title><rect x="78.3612%" y="629" width="0.1254%" height="15" fill="rgb(215,171,30)" fg:x="285662" fg:w="457"/><text x="78.6112%" y="639.50"></text></g><g><title>[unknown] (399 samples, 0.11%)</title><rect x="78.3772%" y="613" width="0.1095%" height="15" fill="rgb(214,222,9)" fg:x="285720" fg:w="399"/><text x="78.6272%" y="623.50"></text></g><g><title>[unknown] (256 samples, 0.07%)</title><rect x="78.4164%" y="597" width="0.0702%" height="15" fill="rgb(223,3,22)" fg:x="285863" fg:w="256"/><text x="78.6664%" y="607.50"></text></g><g><title>[unknown] (208 samples, 0.06%)</title><rect x="78.4295%" y="581" width="0.0571%" height="15" fill="rgb(225,196,46)" fg:x="285911" fg:w="208"/><text x="78.6795%" y="591.50"></text></g><g><title>[unknown] (142 samples, 0.04%)</title><rect x="78.4477%" y="565" width="0.0390%" height="15" fill="rgb(209,110,37)" fg:x="285977" fg:w="142"/><text x="78.6977%" y="575.50"></text></g><g><title>[unknown] (85 samples, 0.02%)</title><rect x="78.4633%" y="549" width="0.0233%" height="15" fill="rgb(249,89,12)" fg:x="286034" fg:w="85"/><text x="78.7133%" y="559.50"></text></g><g><title>core::hint::spin_loop (1,094 samples, 0.30%)</title><rect x="78.4899%" y="773" width="0.3001%" height="15" fill="rgb(226,27,33)" fg:x="286131" fg:w="1094"/><text x="78.7399%" y="783.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (1,094 samples, 0.30%)</title><rect x="78.4899%" y="757" width="0.3001%" height="15" fill="rgb(213,82,22)" fg:x="286131" fg:w="1094"/><text x="78.7399%" y="767.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock_contended (1,844 samples, 0.51%)</title><rect x="78.2971%" y="805" width="0.5058%" height="15" fill="rgb(248,140,0)" fg:x="285428" fg:w="1844"/><text x="78.5471%" y="815.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::spin (1,153 samples, 0.32%)</title><rect x="78.4866%" y="789" width="0.3163%" height="15" fill="rgb(228,106,3)" fg:x="286119" fg:w="1153"/><text x="78.7366%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (47 samples, 0.01%)</title><rect x="78.7900%" y="773" width="0.0129%" height="15" fill="rgb(209,23,37)" fg:x="287225" fg:w="47"/><text x="79.0400%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_load (47 samples, 0.01%)</title><rect x="78.7900%" y="757" width="0.0129%" height="15" fill="rgb(241,93,50)" fg:x="287225" fg:w="47"/><text x="79.0400%" y="767.50"></text></g><g><title>&lt;hyper::proto::h2::PipeToSendStream&lt;S&gt; as core::future::future::Future&gt;::poll (88,254 samples, 24.21%)</title><rect x="54.6330%" y="837" width="24.2094%" height="15" fill="rgb(253,46,43)" fg:x="199162" fg:w="88254"/><text x="54.8830%" y="847.50">&lt;hyper::proto::h2::PipeToSendStream&lt;S&gt; ..</text></g><g><title>h2::share::SendStream&lt;B&gt;::send_data (7,942 samples, 2.18%)</title><rect x="76.6638%" y="821" width="2.1786%" height="15" fill="rgb(226,206,43)" fg:x="279474" fg:w="7942"/><text x="76.9138%" y="831.50">h..</text></g><g><title>syscall (140 samples, 0.04%)</title><rect x="78.8040%" y="805" width="0.0384%" height="15" fill="rgb(217,54,7)" fg:x="287276" fg:w="140"/><text x="79.0540%" y="815.50"></text></g><g><title>[unknown] (131 samples, 0.04%)</title><rect x="78.8065%" y="789" width="0.0359%" height="15" fill="rgb(223,5,52)" fg:x="287285" fg:w="131"/><text x="79.0565%" y="799.50"></text></g><g><title>[unknown] (123 samples, 0.03%)</title><rect x="78.8087%" y="773" width="0.0337%" height="15" fill="rgb(206,52,46)" fg:x="287293" fg:w="123"/><text x="79.0587%" y="783.50"></text></g><g><title>[unknown] (118 samples, 0.03%)</title><rect x="78.8100%" y="757" width="0.0324%" height="15" fill="rgb(253,136,11)" fg:x="287298" fg:w="118"/><text x="79.0600%" y="767.50"></text></g><g><title>[unknown] (113 samples, 0.03%)</title><rect x="78.8114%" y="741" width="0.0310%" height="15" fill="rgb(208,106,33)" fg:x="287303" fg:w="113"/><text x="79.0614%" y="751.50"></text></g><g><title>[unknown] (102 samples, 0.03%)</title><rect x="78.8144%" y="725" width="0.0280%" height="15" fill="rgb(206,54,4)" fg:x="287314" fg:w="102"/><text x="79.0644%" y="735.50"></text></g><g><title>[unknown] (71 samples, 0.02%)</title><rect x="78.8229%" y="709" width="0.0195%" height="15" fill="rgb(213,3,15)" fg:x="287345" fg:w="71"/><text x="79.0729%" y="719.50"></text></g><g><title>[unknown] (64 samples, 0.02%)</title><rect x="78.8248%" y="693" width="0.0176%" height="15" fill="rgb(252,211,39)" fg:x="287352" fg:w="64"/><text x="79.0748%" y="703.50"></text></g><g><title>&lt;hyper::proto::h2::server::H2Stream&lt;F,B&gt; as core::future::future::Future&gt;::poll (88,371 samples, 24.24%)</title><rect x="54.6020%" y="853" width="24.2415%" height="15" fill="rgb(223,6,36)" fg:x="199049" fg:w="88371"/><text x="54.8520%" y="863.50">&lt;hyper::proto::h2::server::H2Stream&lt;F,B..</text></g><g><title>&lt;hyper::server::conn::upgrades::UpgradeableConnection&lt;I,S,E&gt; as core::future::future::Future&gt;::poll (115 samples, 0.03%)</title><rect x="78.8685%" y="837" width="0.0315%" height="15" fill="rgb(252,169,45)" fg:x="287511" fg:w="115"/><text x="79.1185%" y="847.50"></text></g><g><title>&lt;hyper::server::server::new_svc::NewSvcTask&lt;I,N,S,E,W&gt; as core::future::future::Future&gt;::poll (321 samples, 0.09%)</title><rect x="78.8435%" y="853" width="0.0881%" height="15" fill="rgb(212,48,26)" fg:x="287420" fg:w="321"/><text x="79.0935%" y="863.50"></text></g><g><title>__rust_probestack (110 samples, 0.03%)</title><rect x="78.9014%" y="837" width="0.0302%" height="15" fill="rgb(251,102,48)" fg:x="287631" fg:w="110"/><text x="79.1514%" y="847.50"></text></g><g><title>[unknown] (325 samples, 0.09%)</title><rect x="84.3018%" y="629" width="0.0892%" height="15" fill="rgb(243,208,16)" fg:x="307318" fg:w="325"/><text x="84.5518%" y="639.50"></text></g><g><title>[unknown] (305 samples, 0.08%)</title><rect x="84.3073%" y="613" width="0.0837%" height="15" fill="rgb(219,96,24)" fg:x="307338" fg:w="305"/><text x="84.5573%" y="623.50"></text></g><g><title>[unknown] (296 samples, 0.08%)</title><rect x="84.3098%" y="597" width="0.0812%" height="15" fill="rgb(219,33,29)" fg:x="307347" fg:w="296"/><text x="84.5598%" y="607.50"></text></g><g><title>[unknown] (286 samples, 0.08%)</title><rect x="84.3125%" y="581" width="0.0785%" height="15" fill="rgb(223,176,5)" fg:x="307357" fg:w="286"/><text x="84.5625%" y="591.50"></text></g><g><title>[unknown] (274 samples, 0.08%)</title><rect x="84.3158%" y="565" width="0.0752%" height="15" fill="rgb(228,140,14)" fg:x="307369" fg:w="274"/><text x="84.5658%" y="575.50"></text></g><g><title>[unknown] (220 samples, 0.06%)</title><rect x="84.3306%" y="549" width="0.0603%" height="15" fill="rgb(217,179,31)" fg:x="307423" fg:w="220"/><text x="84.5806%" y="559.50"></text></g><g><title>[unknown] (201 samples, 0.06%)</title><rect x="84.3358%" y="533" width="0.0551%" height="15" fill="rgb(230,9,30)" fg:x="307442" fg:w="201"/><text x="84.5858%" y="543.50"></text></g><g><title>[unknown] (108 samples, 0.03%)</title><rect x="84.3613%" y="517" width="0.0296%" height="15" fill="rgb(230,136,20)" fg:x="307535" fg:w="108"/><text x="84.6113%" y="527.50"></text></g><g><title>[unknown] (94 samples, 0.03%)</title><rect x="84.3652%" y="501" width="0.0258%" height="15" fill="rgb(215,210,22)" fg:x="307549" fg:w="94"/><text x="84.6152%" y="511.50"></text></g><g><title>[unknown] (68 samples, 0.02%)</title><rect x="84.3723%" y="485" width="0.0187%" height="15" fill="rgb(218,43,5)" fg:x="307575" fg:w="68"/><text x="84.6223%" y="495.50"></text></g><g><title>[unknown] (49 samples, 0.01%)</title><rect x="84.3775%" y="469" width="0.0134%" height="15" fill="rgb(216,11,5)" fg:x="307594" fg:w="49"/><text x="84.6275%" y="479.50"></text></g><g><title>__lll_lock_wait_private (74 samples, 0.02%)</title><rect x="84.3910%" y="629" width="0.0203%" height="15" fill="rgb(209,82,29)" fg:x="307643" fg:w="74"/><text x="84.6410%" y="639.50"></text></g><g><title>[unknown] (60 samples, 0.02%)</title><rect x="84.3948%" y="613" width="0.0165%" height="15" fill="rgb(244,115,12)" fg:x="307657" fg:w="60"/><text x="84.6448%" y="623.50"></text></g><g><title>[unknown] (57 samples, 0.02%)</title><rect x="84.3956%" y="597" width="0.0156%" height="15" fill="rgb(222,82,18)" fg:x="307660" fg:w="57"/><text x="84.6456%" y="607.50"></text></g><g><title>[unknown] (56 samples, 0.02%)</title><rect x="84.3959%" y="581" width="0.0154%" height="15" fill="rgb(249,227,8)" fg:x="307661" fg:w="56"/><text x="84.6459%" y="591.50"></text></g><g><title>[unknown] (54 samples, 0.01%)</title><rect x="84.3964%" y="565" width="0.0148%" height="15" fill="rgb(253,141,45)" fg:x="307663" fg:w="54"/><text x="84.6464%" y="575.50"></text></g><g><title>[unknown] (52 samples, 0.01%)</title><rect x="84.3970%" y="549" width="0.0143%" height="15" fill="rgb(234,184,4)" fg:x="307665" fg:w="52"/><text x="84.6470%" y="559.50"></text></g><g><title>[unknown] (43 samples, 0.01%)</title><rect x="84.3995%" y="533" width="0.0118%" height="15" fill="rgb(218,194,23)" fg:x="307674" fg:w="43"/><text x="84.6495%" y="543.50"></text></g><g><title>[unknown] (141 samples, 0.04%)</title><rect x="87.8992%" y="613" width="0.0387%" height="15" fill="rgb(235,66,41)" fg:x="320432" fg:w="141"/><text x="88.1492%" y="623.50"></text></g><g><title>[unknown] (135 samples, 0.04%)</title><rect x="87.9008%" y="597" width="0.0370%" height="15" fill="rgb(245,217,1)" fg:x="320438" fg:w="135"/><text x="88.1508%" y="607.50"></text></g><g><title>[unknown] (135 samples, 0.04%)</title><rect x="87.9008%" y="581" width="0.0370%" height="15" fill="rgb(229,91,1)" fg:x="320438" fg:w="135"/><text x="88.1508%" y="591.50"></text></g><g><title>[unknown] (133 samples, 0.04%)</title><rect x="87.9014%" y="565" width="0.0365%" height="15" fill="rgb(207,101,30)" fg:x="320440" fg:w="133"/><text x="88.1514%" y="575.50"></text></g><g><title>[unknown] (132 samples, 0.04%)</title><rect x="87.9016%" y="549" width="0.0362%" height="15" fill="rgb(223,82,49)" fg:x="320441" fg:w="132"/><text x="88.1516%" y="559.50"></text></g><g><title>[unknown] (126 samples, 0.03%)</title><rect x="87.9033%" y="533" width="0.0346%" height="15" fill="rgb(218,167,17)" fg:x="320447" fg:w="126"/><text x="88.1533%" y="543.50"></text></g><g><title>[unknown] (120 samples, 0.03%)</title><rect x="87.9049%" y="517" width="0.0329%" height="15" fill="rgb(208,103,14)" fg:x="320453" fg:w="120"/><text x="88.1549%" y="527.50"></text></g><g><title>[unknown] (107 samples, 0.03%)</title><rect x="87.9085%" y="501" width="0.0294%" height="15" fill="rgb(238,20,8)" fg:x="320466" fg:w="107"/><text x="88.1585%" y="511.50"></text></g><g><title>[unknown] (97 samples, 0.03%)</title><rect x="87.9112%" y="485" width="0.0266%" height="15" fill="rgb(218,80,54)" fg:x="320476" fg:w="97"/><text x="88.1612%" y="495.50"></text></g><g><title>[unknown] (80 samples, 0.02%)</title><rect x="87.9159%" y="469" width="0.0219%" height="15" fill="rgb(240,144,17)" fg:x="320493" fg:w="80"/><text x="88.1659%" y="479.50"></text></g><g><title>[unknown] (66 samples, 0.02%)</title><rect x="87.9197%" y="453" width="0.0181%" height="15" fill="rgb(245,27,50)" fg:x="320507" fg:w="66"/><text x="88.1697%" y="463.50"></text></g><g><title>alloc_perturb (71 samples, 0.02%)</title><rect x="87.9378%" y="613" width="0.0195%" height="15" fill="rgb(251,51,7)" fg:x="320573" fg:w="71"/><text x="88.1878%" y="623.50"></text></g><g><title>checked_request2size (419 samples, 0.11%)</title><rect x="87.9573%" y="613" width="0.1149%" height="15" fill="rgb(245,217,29)" fg:x="320644" fg:w="419"/><text x="88.2073%" y="623.50"></text></g><g><title>tcache_get (154 samples, 0.04%)</title><rect x="88.0731%" y="613" width="0.0422%" height="15" fill="rgb(221,176,29)" fg:x="321066" fg:w="154"/><text x="88.3231%" y="623.50"></text></g><g><title>tcache_put (103 samples, 0.03%)</title><rect x="88.1153%" y="613" width="0.0283%" height="15" fill="rgb(212,180,24)" fg:x="321220" fg:w="103"/><text x="88.3653%" y="623.50"></text></g><g><title>_int_malloc (14,956 samples, 4.10%)</title><rect x="84.4113%" y="629" width="4.1026%" height="15" fill="rgb(254,24,2)" fg:x="307717" fg:w="14956"/><text x="84.6613%" y="639.50">_int..</text></g><g><title>unlink_chunk (1,350 samples, 0.37%)</title><rect x="88.1436%" y="613" width="0.3703%" height="15" fill="rgb(230,100,2)" fg:x="321323" fg:w="1350"/><text x="88.3936%" y="623.50"></text></g><g><title>checked_request2size (190 samples, 0.05%)</title><rect x="88.5139%" y="629" width="0.0521%" height="15" fill="rgb(219,142,25)" fg:x="322673" fg:w="190"/><text x="88.7639%" y="639.50"></text></g><g><title>__GI___libc_malloc (26,052 samples, 7.15%)</title><rect x="81.4687%" y="645" width="7.1464%" height="15" fill="rgb(240,73,43)" fg:x="296990" fg:w="26052"/><text x="81.7187%" y="655.50">__GI___lib..</text></g><g><title>tcache_get (179 samples, 0.05%)</title><rect x="88.5660%" y="629" width="0.0491%" height="15" fill="rgb(214,114,15)" fg:x="322863" fg:w="179"/><text x="88.8160%" y="639.50"></text></g><g><title>__rdl_alloc (334 samples, 0.09%)</title><rect x="88.6151%" y="645" width="0.0916%" height="15" fill="rgb(207,130,4)" fg:x="323042" fg:w="334"/><text x="88.8651%" y="655.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (332 samples, 0.09%)</title><rect x="88.6157%" y="629" width="0.0911%" height="15" fill="rgb(221,25,40)" fg:x="323044" fg:w="332"/><text x="88.8657%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (26,557 samples, 7.28%)</title><rect x="81.4651%" y="693" width="7.2850%" height="15" fill="rgb(241,184,7)" fg:x="296977" fg:w="26557"/><text x="81.7151%" y="703.50">&lt;alloc::al..</text></g><g><title>alloc::alloc::Global::alloc_impl (26,557 samples, 7.28%)</title><rect x="81.4651%" y="677" width="7.2850%" height="15" fill="rgb(235,159,4)" fg:x="296977" fg:w="26557"/><text x="81.7151%" y="687.50">alloc::all..</text></g><g><title>alloc::alloc::alloc (26,557 samples, 7.28%)</title><rect x="81.4651%" y="661" width="7.2850%" height="15" fill="rgb(214,87,48)" fg:x="296977" fg:w="26557"/><text x="81.7151%" y="671.50">alloc::all..</text></g><g><title>__rust_alloc (158 samples, 0.04%)</title><rect x="88.7067%" y="645" width="0.0433%" height="15" fill="rgb(246,198,24)" fg:x="323376" fg:w="158"/><text x="88.9567%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (26,904 samples, 7.38%)</title><rect x="81.3732%" y="741" width="7.3802%" height="15" fill="rgb(209,66,40)" fg:x="296642" fg:w="26904"/><text x="81.6232%" y="751.50">alloc::vec..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (26,904 samples, 7.38%)</title><rect x="81.3732%" y="725" width="7.3802%" height="15" fill="rgb(233,147,39)" fg:x="296642" fg:w="26904"/><text x="81.6232%" y="735.50">alloc::raw..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (26,904 samples, 7.38%)</title><rect x="81.3732%" y="709" width="7.3802%" height="15" fill="rgb(231,145,52)" fg:x="296642" fg:w="26904"/><text x="81.6232%" y="719.50">alloc::raw..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (31,054 samples, 8.52%)</title><rect x="81.3732%" y="805" width="8.5186%" height="15" fill="rgb(206,20,26)" fg:x="296642" fg:w="31054"/><text x="81.6232%" y="815.50">&lt;alloc::vec:..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (31,054 samples, 8.52%)</title><rect x="81.3732%" y="789" width="8.5186%" height="15" fill="rgb(238,220,4)" fg:x="296642" fg:w="31054"/><text x="81.6232%" y="799.50">alloc::slice..</text></g><g><title>alloc::slice::hack::to_vec (31,054 samples, 8.52%)</title><rect x="81.3732%" y="773" width="8.5186%" height="15" fill="rgb(252,195,42)" fg:x="296642" fg:w="31054"/><text x="81.6232%" y="783.50">alloc::slice..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (31,054 samples, 8.52%)</title><rect x="81.3732%" y="757" width="8.5186%" height="15" fill="rgb(209,10,6)" fg:x="296642" fg:w="31054"/><text x="81.6232%" y="767.50">&lt;T as alloc:..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (4,150 samples, 1.14%)</title><rect x="88.7534%" y="741" width="1.1384%" height="15" fill="rgb(229,3,52)" fg:x="323546" fg:w="4150"/><text x="89.0034%" y="751.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4,150 samples, 1.14%)</title><rect x="88.7534%" y="725" width="1.1384%" height="15" fill="rgb(253,49,37)" fg:x="323546" fg:w="4150"/><text x="89.0034%" y="735.50"></text></g><g><title>__memmove_avx_unaligned_erms (4,144 samples, 1.14%)</title><rect x="88.7550%" y="709" width="1.1368%" height="15" fill="rgb(240,103,49)" fg:x="323552" fg:w="4144"/><text x="89.0050%" y="719.50"></text></g><g><title>[unknown] (59 samples, 0.02%)</title><rect x="89.8756%" y="693" width="0.0162%" height="15" fill="rgb(250,182,30)" fg:x="327637" fg:w="59"/><text x="90.1256%" y="703.50"></text></g><g><title>[unknown] (53 samples, 0.01%)</title><rect x="89.8772%" y="677" width="0.0145%" height="15" fill="rgb(248,8,30)" fg:x="327643" fg:w="53"/><text x="90.1272%" y="687.50"></text></g><g><title>[unknown] (50 samples, 0.01%)</title><rect x="89.8781%" y="661" width="0.0137%" height="15" fill="rgb(237,120,30)" fg:x="327646" fg:w="50"/><text x="90.1281%" y="671.50"></text></g><g><title>[unknown] (49 samples, 0.01%)</title><rect x="89.8783%" y="645" width="0.0134%" height="15" fill="rgb(221,146,34)" fg:x="327647" fg:w="49"/><text x="90.1283%" y="655.50"></text></g><g><title>[unknown] (48 samples, 0.01%)</title><rect x="89.8786%" y="629" width="0.0132%" height="15" fill="rgb(242,55,13)" fg:x="327648" fg:w="48"/><text x="90.1286%" y="639.50"></text></g><g><title>[unknown] (45 samples, 0.01%)</title><rect x="89.8794%" y="613" width="0.0123%" height="15" fill="rgb(242,112,31)" fg:x="327651" fg:w="45"/><text x="90.1294%" y="623.50"></text></g><g><title>[unknown] (43 samples, 0.01%)</title><rect x="89.8800%" y="597" width="0.0118%" height="15" fill="rgb(249,192,27)" fg:x="327653" fg:w="43"/><text x="90.1300%" y="607.50"></text></g><g><title>[unknown] (38 samples, 0.01%)</title><rect x="89.8814%" y="581" width="0.0104%" height="15" fill="rgb(208,204,44)" fg:x="327658" fg:w="38"/><text x="90.1314%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (31,683 samples, 8.69%)</title><rect x="81.2040%" y="821" width="8.6911%" height="15" fill="rgb(208,93,54)" fg:x="296025" fg:w="31683"/><text x="81.4540%" y="831.50">&lt;alloc::stri..</text></g><g><title>[unknown] (52 samples, 0.01%)</title><rect x="89.8951%" y="821" width="0.0143%" height="15" fill="rgb(242,1,31)" fg:x="327708" fg:w="52"/><text x="90.1451%" y="831.50"></text></g><g><title>[unknown] (52 samples, 0.01%)</title><rect x="89.8951%" y="805" width="0.0143%" height="15" fill="rgb(241,83,25)" fg:x="327708" fg:w="52"/><text x="90.1451%" y="815.50"></text></g><g><title>[unknown] (51 samples, 0.01%)</title><rect x="89.8953%" y="789" width="0.0140%" height="15" fill="rgb(205,169,50)" fg:x="327709" fg:w="51"/><text x="90.1453%" y="799.50"></text></g><g><title>[unknown] (50 samples, 0.01%)</title><rect x="89.8956%" y="773" width="0.0137%" height="15" fill="rgb(239,186,37)" fg:x="327710" fg:w="50"/><text x="90.1456%" y="783.50"></text></g><g><title>[unknown] (50 samples, 0.01%)</title><rect x="89.8956%" y="757" width="0.0137%" height="15" fill="rgb(205,221,10)" fg:x="327710" fg:w="50"/><text x="90.1456%" y="767.50"></text></g><g><title>[unknown] (48 samples, 0.01%)</title><rect x="89.8962%" y="741" width="0.0132%" height="15" fill="rgb(218,196,15)" fg:x="327712" fg:w="48"/><text x="90.1462%" y="751.50"></text></g><g><title>[unknown] (45 samples, 0.01%)</title><rect x="89.8970%" y="725" width="0.0123%" height="15" fill="rgb(218,196,35)" fg:x="327715" fg:w="45"/><text x="90.1470%" y="735.50"></text></g><g><title>[unknown] (38 samples, 0.01%)</title><rect x="89.8989%" y="709" width="0.0104%" height="15" fill="rgb(233,63,24)" fg:x="327722" fg:w="38"/><text x="90.1489%" y="719.50"></text></g><g><title>[unknown] (351 samples, 0.10%)</title><rect x="90.0449%" y="805" width="0.0963%" height="15" fill="rgb(225,8,4)" fg:x="328254" fg:w="351"/><text x="90.2949%" y="815.50"></text></g><g><title>[unknown] (337 samples, 0.09%)</title><rect x="90.0487%" y="789" width="0.0924%" height="15" fill="rgb(234,105,35)" fg:x="328268" fg:w="337"/><text x="90.2987%" y="799.50"></text></g><g><title>[unknown] (333 samples, 0.09%)</title><rect x="90.0498%" y="773" width="0.0913%" height="15" fill="rgb(236,21,32)" fg:x="328272" fg:w="333"/><text x="90.2998%" y="783.50"></text></g><g><title>[unknown] (330 samples, 0.09%)</title><rect x="90.0506%" y="757" width="0.0905%" height="15" fill="rgb(228,109,6)" fg:x="328275" fg:w="330"/><text x="90.3006%" y="767.50"></text></g><g><title>[unknown] (328 samples, 0.09%)</title><rect x="90.0512%" y="741" width="0.0900%" height="15" fill="rgb(229,215,31)" fg:x="328277" fg:w="328"/><text x="90.3012%" y="751.50"></text></g><g><title>[unknown] (306 samples, 0.08%)</title><rect x="90.0572%" y="725" width="0.0839%" height="15" fill="rgb(221,52,54)" fg:x="328299" fg:w="306"/><text x="90.3072%" y="735.50"></text></g><g><title>[unknown] (291 samples, 0.08%)</title><rect x="90.0613%" y="709" width="0.0798%" height="15" fill="rgb(252,129,43)" fg:x="328314" fg:w="291"/><text x="90.3113%" y="719.50"></text></g><g><title>[unknown] (121 samples, 0.03%)</title><rect x="90.1079%" y="693" width="0.0332%" height="15" fill="rgb(248,183,27)" fg:x="328484" fg:w="121"/><text x="90.3579%" y="703.50"></text></g><g><title>[unknown] (101 samples, 0.03%)</title><rect x="90.1134%" y="677" width="0.0277%" height="15" fill="rgb(250,0,22)" fg:x="328504" fg:w="101"/><text x="90.3634%" y="687.50"></text></g><g><title>[unknown] (81 samples, 0.02%)</title><rect x="90.1189%" y="661" width="0.0222%" height="15" fill="rgb(213,166,10)" fg:x="328524" fg:w="81"/><text x="90.3689%" y="671.50"></text></g><g><title>[unknown] (38 samples, 0.01%)</title><rect x="90.1307%" y="645" width="0.0104%" height="15" fill="rgb(207,163,36)" fg:x="328567" fg:w="38"/><text x="90.3807%" y="655.50"></text></g><g><title>[unknown] (104 samples, 0.03%)</title><rect x="92.0863%" y="773" width="0.0285%" height="15" fill="rgb(208,122,22)" fg:x="335696" fg:w="104"/><text x="92.3363%" y="783.50"></text></g><g><title>[unknown] (101 samples, 0.03%)</title><rect x="92.0871%" y="757" width="0.0277%" height="15" fill="rgb(207,104,49)" fg:x="335699" fg:w="101"/><text x="92.3371%" y="767.50"></text></g><g><title>[unknown] (99 samples, 0.03%)</title><rect x="92.0877%" y="741" width="0.0272%" height="15" fill="rgb(248,211,50)" fg:x="335701" fg:w="99"/><text x="92.3377%" y="751.50"></text></g><g><title>[unknown] (98 samples, 0.03%)</title><rect x="92.0879%" y="725" width="0.0269%" height="15" fill="rgb(217,13,45)" fg:x="335702" fg:w="98"/><text x="92.3379%" y="735.50"></text></g><g><title>[unknown] (97 samples, 0.03%)</title><rect x="92.0882%" y="709" width="0.0266%" height="15" fill="rgb(211,216,49)" fg:x="335703" fg:w="97"/><text x="92.3382%" y="719.50"></text></g><g><title>[unknown] (95 samples, 0.03%)</title><rect x="92.0888%" y="693" width="0.0261%" height="15" fill="rgb(221,58,53)" fg:x="335705" fg:w="95"/><text x="92.3388%" y="703.50"></text></g><g><title>[unknown] (86 samples, 0.02%)</title><rect x="92.0912%" y="677" width="0.0236%" height="15" fill="rgb(220,112,41)" fg:x="335714" fg:w="86"/><text x="92.3412%" y="687.50"></text></g><g><title>[unknown] (73 samples, 0.02%)</title><rect x="92.0948%" y="661" width="0.0200%" height="15" fill="rgb(236,38,28)" fg:x="335727" fg:w="73"/><text x="92.3448%" y="671.50"></text></g><g><title>[unknown] (56 samples, 0.02%)</title><rect x="92.0995%" y="645" width="0.0154%" height="15" fill="rgb(227,195,22)" fg:x="335744" fg:w="56"/><text x="92.3495%" y="655.50"></text></g><g><title>malloc_consolidate (5,899 samples, 1.62%)</title><rect x="90.6873%" y="789" width="1.6182%" height="15" fill="rgb(214,55,33)" fg:x="330596" fg:w="5899"/><text x="90.9373%" y="799.50"></text></g><g><title>unlink_chunk (695 samples, 0.19%)</title><rect x="92.1148%" y="773" width="0.1906%" height="15" fill="rgb(248,80,13)" fg:x="335800" fg:w="695"/><text x="92.3648%" y="783.50"></text></g><g><title>_int_malloc (8,122 samples, 2.23%)</title><rect x="90.1442%" y="805" width="2.2280%" height="15" fill="rgb(238,52,6)" fg:x="328616" fg:w="8122"/><text x="90.3942%" y="815.50">_..</text></g><g><title>unlink_chunk (241 samples, 0.07%)</title><rect x="92.3060%" y="789" width="0.0661%" height="15" fill="rgb(224,198,47)" fg:x="336497" fg:w="241"/><text x="92.5560%" y="799.50"></text></g><g><title>__GI___libc_malloc (8,993 samples, 2.47%)</title><rect x="89.9093%" y="821" width="2.4669%" height="15" fill="rgb(233,171,20)" fg:x="327760" fg:w="8993"/><text x="90.1593%" y="831.50">__..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (45,378 samples, 12.45%)</title><rect x="79.9440%" y="837" width="12.4478%" height="15" fill="rgb(241,30,25)" fg:x="291432" fg:w="45378"/><text x="80.1940%" y="847.50">&lt;alloc::vec::Vec&lt;T,..</text></g><g><title>&lt;tokio::sync::batch_semaphore::Acquire as core::future::future::Future&gt;::poll (533 samples, 0.15%)</title><rect x="92.3919%" y="837" width="0.1462%" height="15" fill="rgb(207,171,38)" fg:x="336810" fg:w="533"/><text x="92.6419%" y="847.50"></text></g><g><title>[unknown] (50 samples, 0.01%)</title><rect x="92.5400%" y="837" width="0.0137%" height="15" fill="rgb(234,70,1)" fg:x="337350" fg:w="50"/><text x="92.7900%" y="847.50"></text></g><g><title>[unknown] (46 samples, 0.01%)</title><rect x="92.5411%" y="821" width="0.0126%" height="15" fill="rgb(232,178,18)" fg:x="337354" fg:w="46"/><text x="92.7911%" y="831.50"></text></g><g><title>[unknown] (44 samples, 0.01%)</title><rect x="92.5417%" y="805" width="0.0121%" height="15" fill="rgb(241,78,40)" fg:x="337356" fg:w="44"/><text x="92.7917%" y="815.50"></text></g><g><title>[unknown] (42 samples, 0.01%)</title><rect x="92.5422%" y="789" width="0.0115%" height="15" fill="rgb(222,35,25)" fg:x="337358" fg:w="42"/><text x="92.7922%" y="799.50"></text></g><g><title>[unknown] (41 samples, 0.01%)</title><rect x="92.5425%" y="773" width="0.0112%" height="15" fill="rgb(207,92,16)" fg:x="337359" fg:w="41"/><text x="92.7925%" y="783.50"></text></g><g><title>[unknown] (39 samples, 0.01%)</title><rect x="92.5430%" y="757" width="0.0107%" height="15" fill="rgb(216,59,51)" fg:x="337361" fg:w="39"/><text x="92.7930%" y="767.50"></text></g><g><title>__GI___libc_free (89 samples, 0.02%)</title><rect x="92.5537%" y="837" width="0.0244%" height="15" fill="rgb(213,80,28)" fg:x="337400" fg:w="89"/><text x="92.8037%" y="847.50"></text></g><g><title>__memmove_avx_unaligned_erms (500 samples, 0.14%)</title><rect x="92.5781%" y="837" width="0.1372%" height="15" fill="rgb(220,93,7)" fg:x="337489" fg:w="500"/><text x="92.8281%" y="847.50"></text></g><g><title>_int_free (550 samples, 0.15%)</title><rect x="92.7263%" y="837" width="0.1509%" height="15" fill="rgb(225,24,44)" fg:x="338029" fg:w="550"/><text x="92.9763%" y="847.50"></text></g><g><title>__GI___libc_malloc (236 samples, 0.06%)</title><rect x="92.9828%" y="805" width="0.0647%" height="15" fill="rgb(243,74,40)" fg:x="338964" fg:w="236"/><text x="93.2328%" y="815.50"></text></g><g><title>tcache_get (143 samples, 0.04%)</title><rect x="93.0083%" y="789" width="0.0392%" height="15" fill="rgb(228,39,7)" fg:x="339057" fg:w="143"/><text x="93.2583%" y="799.50"></text></g><g><title>[unknown] (582 samples, 0.16%)</title><rect x="93.4930%" y="789" width="0.1597%" height="15" fill="rgb(227,79,8)" fg:x="340824" fg:w="582"/><text x="93.7430%" y="799.50"></text></g><g><title>[unknown] (574 samples, 0.16%)</title><rect x="93.4952%" y="773" width="0.1575%" height="15" fill="rgb(236,58,11)" fg:x="340832" fg:w="574"/><text x="93.7452%" y="783.50"></text></g><g><title>[unknown] (569 samples, 0.16%)</title><rect x="93.4966%" y="757" width="0.1561%" height="15" fill="rgb(249,63,35)" fg:x="340837" fg:w="569"/><text x="93.7466%" y="767.50"></text></g><g><title>[unknown] (564 samples, 0.15%)</title><rect x="93.4979%" y="741" width="0.1547%" height="15" fill="rgb(252,114,16)" fg:x="340842" fg:w="564"/><text x="93.7479%" y="751.50"></text></g><g><title>[unknown] (560 samples, 0.15%)</title><rect x="93.4990%" y="725" width="0.1536%" height="15" fill="rgb(254,151,24)" fg:x="340846" fg:w="560"/><text x="93.7490%" y="735.50"></text></g><g><title>[unknown] (504 samples, 0.14%)</title><rect x="93.5144%" y="709" width="0.1383%" height="15" fill="rgb(253,54,39)" fg:x="340902" fg:w="504"/><text x="93.7644%" y="719.50"></text></g><g><title>[unknown] (479 samples, 0.13%)</title><rect x="93.5212%" y="693" width="0.1314%" height="15" fill="rgb(243,25,45)" fg:x="340927" fg:w="479"/><text x="93.7712%" y="703.50"></text></g><g><title>[unknown] (231 samples, 0.06%)</title><rect x="93.5893%" y="677" width="0.0634%" height="15" fill="rgb(234,134,9)" fg:x="341175" fg:w="231"/><text x="93.8393%" y="687.50"></text></g><g><title>[unknown] (185 samples, 0.05%)</title><rect x="93.6019%" y="661" width="0.0507%" height="15" fill="rgb(227,166,31)" fg:x="341221" fg:w="185"/><text x="93.8519%" y="671.50"></text></g><g><title>[unknown] (148 samples, 0.04%)</title><rect x="93.6120%" y="645" width="0.0406%" height="15" fill="rgb(245,143,41)" fg:x="341258" fg:w="148"/><text x="93.8620%" y="655.50"></text></g><g><title>[unknown] (82 samples, 0.02%)</title><rect x="93.6301%" y="629" width="0.0225%" height="15" fill="rgb(238,181,32)" fg:x="341324" fg:w="82"/><text x="93.8801%" y="639.50"></text></g><g><title>[libc-2.31.so] (52 samples, 0.01%)</title><rect x="93.8035%" y="773" width="0.0143%" height="15" fill="rgb(224,113,18)" fg:x="341956" fg:w="52"/><text x="94.0535%" y="783.50"></text></g><g><title>__memmove_avx_unaligned_erms (998 samples, 0.27%)</title><rect x="93.8194%" y="773" width="0.2738%" height="15" fill="rgb(240,229,28)" fg:x="342014" fg:w="998"/><text x="94.0694%" y="783.50"></text></g><g><title>_int_free (805 samples, 0.22%)</title><rect x="94.0932%" y="773" width="0.2208%" height="15" fill="rgb(250,185,3)" fg:x="343012" fg:w="805"/><text x="94.3432%" y="783.50"></text></g><g><title>malloc_consolidate (410 samples, 0.11%)</title><rect x="95.1647%" y="757" width="0.1125%" height="15" fill="rgb(212,59,25)" fg:x="346918" fg:w="410"/><text x="95.4147%" y="767.50"></text></g><g><title>_int_malloc (4,069 samples, 1.12%)</title><rect x="94.3140%" y="773" width="1.1162%" height="15" fill="rgb(221,87,20)" fg:x="343817" fg:w="4069"/><text x="94.5640%" y="783.50"></text></g><g><title>unlink_chunk (556 samples, 0.15%)</title><rect x="95.2777%" y="757" width="0.1525%" height="15" fill="rgb(213,74,28)" fg:x="347330" fg:w="556"/><text x="95.5277%" y="767.50"></text></g><g><title>_int_realloc (6,460 samples, 1.77%)</title><rect x="93.6614%" y="789" width="1.7721%" height="15" fill="rgb(224,132,34)" fg:x="341438" fg:w="6460"/><text x="93.9114%" y="799.50">_..</text></g><g><title>__GI___libc_realloc (8,749 samples, 2.40%)</title><rect x="93.0475%" y="805" width="2.4000%" height="15" fill="rgb(222,101,24)" fg:x="339200" fg:w="8749"/><text x="93.2975%" y="815.50">__..</text></g><g><title>checked_request2size (51 samples, 0.01%)</title><rect x="95.4335%" y="789" width="0.0140%" height="15" fill="rgb(254,142,4)" fg:x="347898" fg:w="51"/><text x="95.6835%" y="799.50"></text></g><g><title>__rdl_realloc (65 samples, 0.02%)</title><rect x="95.4524%" y="805" width="0.0178%" height="15" fill="rgb(230,229,49)" fg:x="347967" fg:w="65"/><text x="95.7024%" y="815.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (54 samples, 0.01%)</title><rect x="95.4554%" y="789" width="0.0148%" height="15" fill="rgb(238,70,47)" fg:x="347978" fg:w="54"/><text x="95.7054%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (9,486 samples, 2.60%)</title><rect x="92.8771%" y="837" width="2.6021%" height="15" fill="rgb(231,160,17)" fg:x="338579" fg:w="9486"/><text x="93.1271%" y="847.50">al..</text></g><g><title>alloc::raw_vec::finish_grow (9,228 samples, 2.53%)</title><rect x="92.9479%" y="821" width="2.5314%" height="15" fill="rgb(218,68,53)" fg:x="338837" fg:w="9228"/><text x="93.1979%" y="831.50">al..</text></g><g><title>tokio::runtime::task::waker::wake_by_val (97 samples, 0.03%)</title><rect x="95.4812%" y="837" width="0.0266%" height="15" fill="rgb(236,111,10)" fg:x="348072" fg:w="97"/><text x="95.7312%" y="847.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_val (51 samples, 0.01%)</title><rect x="95.4938%" y="821" width="0.0140%" height="15" fill="rgb(224,34,41)" fg:x="348118" fg:w="51"/><text x="95.7438%" y="831.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::add_permits_locked (209 samples, 0.06%)</title><rect x="95.5117%" y="837" width="0.0573%" height="15" fill="rgb(241,118,19)" fg:x="348183" fg:w="209"/><text x="95.7617%" y="847.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::release (229 samples, 0.06%)</title><rect x="95.5690%" y="837" width="0.0628%" height="15" fill="rgb(238,129,25)" fg:x="348392" fg:w="229"/><text x="95.8190%" y="847.50"></text></g><g><title>__memmove_avx_unaligned_erms (56 samples, 0.02%)</title><rect x="95.7152%" y="821" width="0.0154%" height="15" fill="rgb(238,22,31)" fg:x="348925" fg:w="56"/><text x="95.9652%" y="831.50"></text></g><g><title>tokio::sync::mpsc::list::Tx&lt;T&gt;::push (469 samples, 0.13%)</title><rect x="95.6318%" y="837" width="0.1287%" height="15" fill="rgb(222,174,48)" fg:x="348621" fg:w="469"/><text x="95.8818%" y="847.50"></text></g><g><title>tokio::sync::mpsc::list::Tx&lt;T&gt;::find_block (109 samples, 0.03%)</title><rect x="95.7306%" y="821" width="0.0299%" height="15" fill="rgb(206,152,40)" fg:x="348981" fg:w="109"/><text x="95.9806%" y="831.50"></text></g><g><title>&lt;tokio::sync::batch_semaphore::Acquire as core::future::future::Future&gt;::poll (227 samples, 0.06%)</title><rect x="95.8005%" y="821" width="0.0623%" height="15" fill="rgb(218,99,54)" fg:x="349236" fg:w="227"/><text x="96.0505%" y="831.50"></text></g><g><title>tokio::sync::rwlock::RwLock&lt;T&gt;::read::{{closure}} (388 samples, 0.11%)</title><rect x="95.7605%" y="837" width="0.1064%" height="15" fill="rgb(220,174,26)" fg:x="349090" fg:w="388"/><text x="96.0105%" y="847.50"></text></g><g><title>&lt;stream_book::grpc_routes::grpc_impl::StreamBookAggregator as stream_book::grpc_routes::grpc_impl::order_book_proto::orderbook_aggregator_server::OrderbookAggregator&gt;::book_summary::_{{closure}}::_{{closure}} (61,876 samples, 16.97%)</title><rect x="78.9315%" y="853" width="16.9735%" height="15" fill="rgb(245,116,9)" fg:x="287741" fg:w="61876"/><text x="79.1815%" y="863.50">&lt;stream_book::grpc_routes:..</text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::wake (139 samples, 0.04%)</title><rect x="95.8669%" y="837" width="0.0381%" height="15" fill="rgb(209,72,35)" fg:x="349478" fg:w="139"/><text x="96.1169%" y="847.50"></text></g><g><title>&lt;tokio::runtime::task::core::TaskIdGuard as core::ops::drop::Drop&gt;::drop (84 samples, 0.02%)</title><rect x="95.9050%" y="853" width="0.0230%" height="15" fill="rgb(226,126,21)" fg:x="349617" fg:w="84"/><text x="96.1550%" y="863.50"></text></g><g><title>tungstenite::protocol::WebSocketContext::write_pending (44 samples, 0.01%)</title><rect x="95.9582%" y="789" width="0.0121%" height="15" fill="rgb(227,192,1)" fg:x="349811" fg:w="44"/><text x="96.2082%" y="799.50"></text></g><g><title>tungstenite::protocol::frame::FrameCodec::write_pending (37 samples, 0.01%)</title><rect x="95.9602%" y="773" width="0.0101%" height="15" fill="rgb(237,180,29)" fg:x="349818" fg:w="37"/><text x="96.2102%" y="783.50"></text></g><g><title>[unknown] (290 samples, 0.08%)</title><rect x="96.0554%" y="405" width="0.0796%" height="15" fill="rgb(230,197,35)" fg:x="350165" fg:w="290"/><text x="96.3054%" y="415.50"></text></g><g><title>[unknown] (277 samples, 0.08%)</title><rect x="96.0589%" y="389" width="0.0760%" height="15" fill="rgb(246,193,31)" fg:x="350178" fg:w="277"/><text x="96.3089%" y="399.50"></text></g><g><title>[unknown] (272 samples, 0.07%)</title><rect x="96.0603%" y="373" width="0.0746%" height="15" fill="rgb(241,36,4)" fg:x="350183" fg:w="272"/><text x="96.3103%" y="383.50"></text></g><g><title>[unknown] (270 samples, 0.07%)</title><rect x="96.0608%" y="357" width="0.0741%" height="15" fill="rgb(241,130,17)" fg:x="350185" fg:w="270"/><text x="96.3108%" y="367.50"></text></g><g><title>[unknown] (261 samples, 0.07%)</title><rect x="96.0633%" y="341" width="0.0716%" height="15" fill="rgb(206,137,32)" fg:x="350194" fg:w="261"/><text x="96.3133%" y="351.50"></text></g><g><title>[unknown] (250 samples, 0.07%)</title><rect x="96.0663%" y="325" width="0.0686%" height="15" fill="rgb(237,228,51)" fg:x="350205" fg:w="250"/><text x="96.3163%" y="335.50"></text></g><g><title>[unknown] (244 samples, 0.07%)</title><rect x="96.0680%" y="309" width="0.0669%" height="15" fill="rgb(243,6,42)" fg:x="350211" fg:w="244"/><text x="96.3180%" y="319.50"></text></g><g><title>[unknown] (226 samples, 0.06%)</title><rect x="96.0729%" y="293" width="0.0620%" height="15" fill="rgb(251,74,28)" fg:x="350229" fg:w="226"/><text x="96.3229%" y="303.50"></text></g><g><title>[unknown] (177 samples, 0.05%)</title><rect x="96.0864%" y="277" width="0.0486%" height="15" fill="rgb(218,20,49)" fg:x="350278" fg:w="177"/><text x="96.3364%" y="287.50"></text></g><g><title>[unknown] (167 samples, 0.05%)</title><rect x="96.0891%" y="261" width="0.0458%" height="15" fill="rgb(238,28,14)" fg:x="350288" fg:w="167"/><text x="96.3391%" y="271.50"></text></g><g><title>[unknown] (149 samples, 0.04%)</title><rect x="96.0940%" y="245" width="0.0409%" height="15" fill="rgb(229,40,46)" fg:x="350306" fg:w="149"/><text x="96.3440%" y="255.50"></text></g><g><title>[unknown] (120 samples, 0.03%)</title><rect x="96.1020%" y="229" width="0.0329%" height="15" fill="rgb(244,195,20)" fg:x="350335" fg:w="120"/><text x="96.3520%" y="239.50"></text></g><g><title>[unknown] (95 samples, 0.03%)</title><rect x="96.1088%" y="213" width="0.0261%" height="15" fill="rgb(253,56,35)" fg:x="350360" fg:w="95"/><text x="96.3588%" y="223.50"></text></g><g><title>[unknown] (51 samples, 0.01%)</title><rect x="96.1209%" y="197" width="0.0140%" height="15" fill="rgb(210,149,44)" fg:x="350404" fg:w="51"/><text x="96.3709%" y="207.50"></text></g><g><title>[unknown] (43 samples, 0.01%)</title><rect x="96.1231%" y="181" width="0.0118%" height="15" fill="rgb(240,135,12)" fg:x="350412" fg:w="43"/><text x="96.3731%" y="191.50"></text></g><g><title>[unknown] (42 samples, 0.01%)</title><rect x="96.1234%" y="165" width="0.0115%" height="15" fill="rgb(251,24,50)" fg:x="350413" fg:w="42"/><text x="96.3734%" y="175.50"></text></g><g><title>[unknown] (38 samples, 0.01%)</title><rect x="96.1245%" y="149" width="0.0104%" height="15" fill="rgb(243,200,47)" fg:x="350417" fg:w="38"/><text x="96.3745%" y="159.50"></text></g><g><title>__libc_recv (305 samples, 0.08%)</title><rect x="96.0523%" y="437" width="0.0837%" height="15" fill="rgb(224,166,26)" fg:x="350154" fg:w="305"/><text x="96.3023%" y="447.50"></text></g><g><title>__libc_recv (300 samples, 0.08%)</title><rect x="96.0537%" y="421" width="0.0823%" height="15" fill="rgb(233,0,47)" fg:x="350159" fg:w="300"/><text x="96.3037%" y="431.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (308 samples, 0.08%)</title><rect x="96.0518%" y="517" width="0.0845%" height="15" fill="rgb(253,80,5)" fg:x="350152" fg:w="308"/><text x="96.3018%" y="527.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (308 samples, 0.08%)</title><rect x="96.0518%" y="501" width="0.0845%" height="15" fill="rgb(214,133,25)" fg:x="350152" fg:w="308"/><text x="96.3018%" y="511.50"></text></g><g><title>std::sys_common::net::TcpStream::read (306 samples, 0.08%)</title><rect x="96.0523%" y="485" width="0.0839%" height="15" fill="rgb(209,27,14)" fg:x="350154" fg:w="306"/><text x="96.3023%" y="495.50"></text></g><g><title>std::sys::unix::net::Socket::read (306 samples, 0.08%)</title><rect x="96.0523%" y="469" width="0.0839%" height="15" fill="rgb(219,102,51)" fg:x="350154" fg:w="306"/><text x="96.3023%" y="479.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (306 samples, 0.08%)</title><rect x="96.0523%" y="453" width="0.0839%" height="15" fill="rgb(237,18,16)" fg:x="350154" fg:w="306"/><text x="96.3023%" y="463.50"></text></g><g><title>&lt;tokio_native_tls::AllowStd&lt;S&gt; as std::io::Read&gt;::read (350 samples, 0.10%)</title><rect x="96.0471%" y="549" width="0.0960%" height="15" fill="rgb(241,85,17)" fg:x="350135" fg:w="350"/><text x="96.2971%" y="559.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (346 samples, 0.09%)</title><rect x="96.0482%" y="533" width="0.0949%" height="15" fill="rgb(236,90,42)" fg:x="350139" fg:w="346"/><text x="96.2982%" y="543.50"></text></g><g><title>[libcrypto.so.1.1] (405 samples, 0.11%)</title><rect x="96.0392%" y="597" width="0.1111%" height="15" fill="rgb(249,57,21)" fg:x="350106" fg:w="405"/><text x="96.2892%" y="607.50"></text></g><g><title>[libcrypto.so.1.1] (386 samples, 0.11%)</title><rect x="96.0444%" y="581" width="0.1059%" height="15" fill="rgb(243,12,36)" fg:x="350125" fg:w="386"/><text x="96.2944%" y="591.50"></text></g><g><title>openssl::ssl::bio::bread (380 samples, 0.10%)</title><rect x="96.0460%" y="565" width="0.1042%" height="15" fill="rgb(253,128,47)" fg:x="350131" fg:w="380"/><text x="96.2960%" y="575.50"></text></g><g><title>BIO_read (411 samples, 0.11%)</title><rect x="96.0378%" y="613" width="0.1127%" height="15" fill="rgb(207,33,20)" fg:x="350101" fg:w="411"/><text x="96.2878%" y="623.50"></text></g><g><title>[libcrypto.so.1.1] (146 samples, 0.04%)</title><rect x="96.1640%" y="613" width="0.0400%" height="15" fill="rgb(233,215,35)" fg:x="350561" fg:w="146"/><text x="96.4140%" y="623.50"></text></g><g><title>[libcrypto.so.1.1] (40 samples, 0.01%)</title><rect x="96.1931%" y="597" width="0.0110%" height="15" fill="rgb(249,188,52)" fg:x="350667" fg:w="40"/><text x="96.4431%" y="607.50"></text></g><g><title>[libcrypto.so.1.1] (38 samples, 0.01%)</title><rect x="96.1936%" y="581" width="0.0104%" height="15" fill="rgb(225,12,32)" fg:x="350669" fg:w="38"/><text x="96.4436%" y="591.50"></text></g><g><title>[libssl.so.1.1] (672 samples, 0.18%)</title><rect x="96.0277%" y="629" width="0.1843%" height="15" fill="rgb(247,98,14)" fg:x="350064" fg:w="672"/><text x="96.2777%" y="639.50"></text></g><g><title>malloc_consolidate (222 samples, 0.06%)</title><rect x="96.2370%" y="597" width="0.0609%" height="15" fill="rgb(247,219,48)" fg:x="350827" fg:w="222"/><text x="96.4870%" y="607.50"></text></g><g><title>__GI___libc_malloc (316 samples, 0.09%)</title><rect x="96.2128%" y="629" width="0.0867%" height="15" fill="rgb(253,60,48)" fg:x="350739" fg:w="316"/><text x="96.4628%" y="639.50"></text></g><g><title>_int_malloc (302 samples, 0.08%)</title><rect x="96.2167%" y="613" width="0.0828%" height="15" fill="rgb(245,15,52)" fg:x="350753" fg:w="302"/><text x="96.4667%" y="623.50"></text></g><g><title>[libssl.so.1.1] (1,083 samples, 0.30%)</title><rect x="96.0076%" y="645" width="0.2971%" height="15" fill="rgb(220,133,28)" fg:x="349991" fg:w="1083"/><text x="96.2576%" y="655.50"></text></g><g><title>[libssl.so.1.1] (1,117 samples, 0.31%)</title><rect x="96.0002%" y="661" width="0.3064%" height="15" fill="rgb(217,180,4)" fg:x="349964" fg:w="1117"/><text x="96.2502%" y="671.50"></text></g><g><title>SSL_read (1,158 samples, 0.32%)</title><rect x="95.9920%" y="709" width="0.3177%" height="15" fill="rgb(251,24,1)" fg:x="349934" fg:w="1158"/><text x="96.2420%" y="719.50"></text></g><g><title>[libssl.so.1.1] (1,152 samples, 0.32%)</title><rect x="95.9936%" y="693" width="0.3160%" height="15" fill="rgb(212,185,49)" fg:x="349940" fg:w="1152"/><text x="96.2436%" y="703.50"></text></g><g><title>[libssl.so.1.1] (1,140 samples, 0.31%)</title><rect x="95.9969%" y="677" width="0.3127%" height="15" fill="rgb(215,175,22)" fg:x="349952" fg:w="1140"/><text x="96.2469%" y="687.50"></text></g><g><title>[libcrypto.so.1.1] (48 samples, 0.01%)</title><rect x="96.3132%" y="677" width="0.0132%" height="15" fill="rgb(250,205,14)" fg:x="351105" fg:w="48"/><text x="96.5632%" y="687.50"></text></g><g><title>ERR_get_state (47 samples, 0.01%)</title><rect x="96.3135%" y="661" width="0.0129%" height="15" fill="rgb(225,211,22)" fg:x="351106" fg:w="47"/><text x="96.5635%" y="671.50"></text></g><g><title>SSL_get_error (67 samples, 0.02%)</title><rect x="96.3099%" y="693" width="0.0184%" height="15" fill="rgb(251,179,42)" fg:x="351093" fg:w="67"/><text x="96.5599%" y="703.50"></text></g><g><title>openssl::ssl::SslStream&lt;S&gt;::make_error (73 samples, 0.02%)</title><rect x="96.3096%" y="709" width="0.0200%" height="15" fill="rgb(208,216,51)" fg:x="351092" fg:w="73"/><text x="96.5596%" y="719.50"></text></g><g><title>&lt;openssl::ssl::SslStream&lt;S&gt; as std::io::Read&gt;::read (1,241 samples, 0.34%)</title><rect x="95.9903%" y="725" width="0.3404%" height="15" fill="rgb(235,36,11)" fg:x="349928" fg:w="1241"/><text x="96.2403%" y="735.50"></text></g><g><title>&lt;tokio_native_tls::TlsStream&lt;S&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (1,250 samples, 0.34%)</title><rect x="95.9890%" y="741" width="0.3429%" height="15" fill="rgb(213,189,28)" fg:x="349923" fg:w="1250"/><text x="96.2390%" y="751.50"></text></g><g><title>&lt;tokio_tungstenite::compat::AllowStd&lt;S&gt; as std::io::Read&gt;::read (1,258 samples, 0.35%)</title><rect x="95.9876%" y="757" width="0.3451%" height="15" fill="rgb(227,203,42)" fg:x="349918" fg:w="1258"/><text x="96.2376%" y="767.50"></text></g><g><title>tungstenite::buffer::ReadBuffer&lt;_&gt;::read_from (1,268 samples, 0.35%)</title><rect x="95.9862%" y="773" width="0.3478%" height="15" fill="rgb(244,72,36)" fg:x="349913" fg:w="1268"/><text x="96.2362%" y="783.50"></text></g><g><title>tungstenite::protocol::frame::FrameCodec::read_frame (1,346 samples, 0.37%)</title><rect x="95.9747%" y="789" width="0.3692%" height="15" fill="rgb(213,53,17)" fg:x="349871" fg:w="1346"/><text x="96.2247%" y="799.50"></text></g><g><title>&lt;tokio_tungstenite::WebSocketStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (1,499 samples, 0.41%)</title><rect x="95.9429%" y="821" width="0.4112%" height="15" fill="rgb(207,167,3)" fg:x="349755" fg:w="1499"/><text x="96.1929%" y="831.50"></text></g><g><title>tungstenite::protocol::WebSocket&lt;Stream&gt;::read_message (1,462 samples, 0.40%)</title><rect x="95.9530%" y="805" width="0.4010%" height="15" fill="rgb(216,98,30)" fg:x="349792" fg:w="1462"/><text x="96.2030%" y="815.50"></text></g><g><title>&lt;futures_util::stream::stream::next::Next&lt;St&gt; as core::future::future::Future&gt;::poll (1,514 samples, 0.42%)</title><rect x="95.9410%" y="837" width="0.4153%" height="15" fill="rgb(236,123,15)" fg:x="349748" fg:w="1514"/><text x="96.1910%" y="847.50"></text></g><g><title>_int_free (37 samples, 0.01%)</title><rect x="96.3705%" y="773" width="0.0101%" height="15" fill="rgb(248,81,50)" fg:x="351314" fg:w="37"/><text x="96.6205%" y="783.50"></text></g><g><title>core::num::dec2flt::number::Number::try_fast_path (39 samples, 0.01%)</title><rect x="96.3854%" y="757" width="0.0107%" height="15" fill="rgb(214,120,4)" fg:x="351368" fg:w="39"/><text x="96.6354%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (180 samples, 0.05%)</title><rect x="96.3585%" y="805" width="0.0494%" height="15" fill="rgb(208,179,34)" fg:x="351270" fg:w="180"/><text x="96.6085%" y="815.50"></text></g><g><title>&lt;stream_book::ws_data_providers::ExchangePriceLevel as core::convert::From&lt;stream_book::ws_data_providers::BinancePriceLevel&gt;&gt;::from (173 samples, 0.05%)</title><rect x="96.3604%" y="789" width="0.0475%" height="15" fill="rgb(227,140,7)" fg:x="351277" fg:w="173"/><text x="96.6104%" y="799.50"></text></g><g><title>core::num::dec2flt::dec2flt (99 samples, 0.03%)</title><rect x="96.3807%" y="773" width="0.0272%" height="15" fill="rgb(214,22,6)" fg:x="351351" fg:w="99"/><text x="96.6307%" y="783.50"></text></g><g><title>core::num::dec2flt::parse::parse_number (43 samples, 0.01%)</title><rect x="96.3961%" y="757" width="0.0118%" height="15" fill="rgb(207,137,27)" fg:x="351407" fg:w="43"/><text x="96.6461%" y="767.50"></text></g><g><title>core::num::dec2flt::parse::parse_partial_number (37 samples, 0.01%)</title><rect x="96.3977%" y="741" width="0.0101%" height="15" fill="rgb(210,8,46)" fg:x="351413" fg:w="37"/><text x="96.6477%" y="751.50"></text></g><g><title>&lt;stream_book::ws_data_providers::ExchangeOrderBookMessage as core::convert::From&lt;stream_book::ws_data_providers::BinanceOrderBookMessage&gt;&gt;::from (198 samples, 0.05%)</title><rect x="96.3577%" y="837" width="0.0543%" height="15" fill="rgb(240,16,54)" fg:x="351267" fg:w="198"/><text x="96.6077%" y="847.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (197 samples, 0.05%)</title><rect x="96.3579%" y="821" width="0.0540%" height="15" fill="rgb(211,209,29)" fg:x="351268" fg:w="197"/><text x="96.6079%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (156 samples, 0.04%)</title><rect x="96.4120%" y="805" width="0.0428%" height="15" fill="rgb(226,228,24)" fg:x="351465" fg:w="156"/><text x="96.6620%" y="815.50"></text></g><g><title>&lt;stream_book::ws_data_providers::ExchangePriceLevel as core::convert::From&lt;stream_book::ws_data_providers::BitstampPriceLevel&gt;&gt;::from (150 samples, 0.04%)</title><rect x="96.4136%" y="789" width="0.0411%" height="15" fill="rgb(222,84,9)" fg:x="351471" fg:w="150"/><text x="96.6636%" y="799.50"></text></g><g><title>core::num::dec2flt::dec2flt (89 samples, 0.02%)</title><rect x="96.4303%" y="773" width="0.0244%" height="15" fill="rgb(234,203,30)" fg:x="351532" fg:w="89"/><text x="96.6803%" y="783.50"></text></g><g><title>core::num::dec2flt::parse::parse_number (44 samples, 0.01%)</title><rect x="96.4427%" y="757" width="0.0121%" height="15" fill="rgb(238,109,14)" fg:x="351577" fg:w="44"/><text x="96.6927%" y="767.50"></text></g><g><title>&lt;stream_book::ws_data_providers::ExchangeOrderBookMessage as core::convert::From&lt;stream_book::ws_data_providers::BitstampOrderBookMessage&gt;&gt;::from (175 samples, 0.05%)</title><rect x="96.4120%" y="837" width="0.0480%" height="15" fill="rgb(233,206,34)" fg:x="351465" fg:w="175"/><text x="96.6620%" y="847.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (175 samples, 0.05%)</title><rect x="96.4120%" y="821" width="0.0480%" height="15" fill="rgb(220,167,47)" fg:x="351465" fg:w="175"/><text x="96.6620%" y="831.50"></text></g><g><title>crossbeam_channel::channel::Sender&lt;T&gt;::send (66 samples, 0.02%)</title><rect x="96.4635%" y="837" width="0.0181%" height="15" fill="rgb(238,105,10)" fg:x="351653" fg:w="66"/><text x="96.7135%" y="847.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::send (66 samples, 0.02%)</title><rect x="96.4635%" y="821" width="0.0181%" height="15" fill="rgb(213,227,17)" fg:x="351653" fg:w="66"/><text x="96.7135%" y="831.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (41 samples, 0.01%)</title><rect x="96.5083%" y="709" width="0.0112%" height="15" fill="rgb(217,132,38)" fg:x="351816" fg:w="41"/><text x="96.7583%" y="719.50"></text></g><g><title>_int_malloc (129 samples, 0.04%)</title><rect x="96.5346%" y="693" width="0.0354%" height="15" fill="rgb(242,146,4)" fg:x="351912" fg:w="129"/><text x="96.7846%" y="703.50"></text></g><g><title>__GI___libc_malloc (205 samples, 0.06%)</title><rect x="96.5195%" y="709" width="0.0562%" height="15" fill="rgb(212,61,9)" fg:x="351857" fg:w="205"/><text x="96.7695%" y="719.50"></text></g><g><title>serde::de::SeqAccess::next_element (290 samples, 0.08%)</title><rect x="96.4989%" y="741" width="0.0796%" height="15" fill="rgb(247,126,22)" fg:x="351782" fg:w="290"/><text x="96.7489%" y="751.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (270 samples, 0.07%)</title><rect x="96.5044%" y="725" width="0.0741%" height="15" fill="rgb(220,196,2)" fg:x="351802" fg:w="270"/><text x="96.7544%" y="735.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (332 samples, 0.09%)</title><rect x="96.4880%" y="773" width="0.0911%" height="15" fill="rgb(208,46,4)" fg:x="351742" fg:w="332"/><text x="96.7380%" y="783.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (316 samples, 0.09%)</title><rect x="96.4923%" y="757" width="0.0867%" height="15" fill="rgb(252,104,46)" fg:x="351758" fg:w="316"/><text x="96.7423%" y="767.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (392 samples, 0.11%)</title><rect x="96.4852%" y="805" width="0.1075%" height="15" fill="rgb(237,152,48)" fg:x="351732" fg:w="392"/><text x="96.7352%" y="815.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (391 samples, 0.11%)</title><rect x="96.4855%" y="789" width="0.1073%" height="15" fill="rgb(221,59,37)" fg:x="351733" fg:w="391"/><text x="96.7355%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (50 samples, 0.01%)</title><rect x="96.5790%" y="773" width="0.0137%" height="15" fill="rgb(209,202,51)" fg:x="352074" fg:w="50"/><text x="96.8290%" y="783.50"></text></g><g><title>alloc::raw_vec::finish_grow (43 samples, 0.01%)</title><rect x="96.5809%" y="757" width="0.0118%" height="15" fill="rgb(228,81,30)" fg:x="352081" fg:w="43"/><text x="96.8309%" y="767.50"></text></g><g><title>__GI___libc_realloc (38 samples, 0.01%)</title><rect x="96.5823%" y="741" width="0.0104%" height="15" fill="rgb(227,42,39)" fg:x="352086" fg:w="38"/><text x="96.8323%" y="751.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (40 samples, 0.01%)</title><rect x="96.6188%" y="693" width="0.0110%" height="15" fill="rgb(221,26,2)" fg:x="352219" fg:w="40"/><text x="96.8688%" y="703.50"></text></g><g><title>_int_malloc (122 samples, 0.03%)</title><rect x="96.6506%" y="677" width="0.0335%" height="15" fill="rgb(254,61,31)" fg:x="352335" fg:w="122"/><text x="96.9006%" y="687.50"></text></g><g><title>__GI___libc_malloc (202 samples, 0.06%)</title><rect x="96.6298%" y="693" width="0.0554%" height="15" fill="rgb(222,173,38)" fg:x="352259" fg:w="202"/><text x="96.8798%" y="703.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (265 samples, 0.07%)</title><rect x="96.6136%" y="709" width="0.0727%" height="15" fill="rgb(218,50,12)" fg:x="352200" fg:w="265"/><text x="96.8636%" y="719.50"></text></g><g><title>serde::de::SeqAccess::next_element (292 samples, 0.08%)</title><rect x="96.6070%" y="725" width="0.0801%" height="15" fill="rgb(223,88,40)" fg:x="352176" fg:w="292"/><text x="96.8570%" y="735.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (333 samples, 0.09%)</title><rect x="96.5966%" y="757" width="0.0913%" height="15" fill="rgb(237,54,19)" fg:x="352138" fg:w="333"/><text x="96.8466%" y="767.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (318 samples, 0.09%)</title><rect x="96.6007%" y="741" width="0.0872%" height="15" fill="rgb(251,129,25)" fg:x="352153" fg:w="318"/><text x="96.8507%" y="751.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (375 samples, 0.10%)</title><rect x="96.5938%" y="789" width="0.1029%" height="15" fill="rgb(238,97,19)" fg:x="352128" fg:w="375"/><text x="96.8438%" y="799.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (374 samples, 0.10%)</title><rect x="96.5941%" y="773" width="0.1026%" height="15" fill="rgb(240,169,18)" fg:x="352129" fg:w="374"/><text x="96.8441%" y="783.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (385 samples, 0.11%)</title><rect x="96.5927%" y="805" width="0.1056%" height="15" fill="rgb(230,187,49)" fg:x="352124" fg:w="385"/><text x="96.8427%" y="815.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (809 samples, 0.22%)</title><rect x="96.4819%" y="821" width="0.2219%" height="15" fill="rgb(209,44,26)" fg:x="351720" fg:w="809"/><text x="96.7319%" y="831.50"></text></g><g><title>serde_json::de::from_str (818 samples, 0.22%)</title><rect x="96.4816%" y="837" width="0.2244%" height="15" fill="rgb(244,0,6)" fg:x="351719" fg:w="818"/><text x="96.7316%" y="847.50"></text></g><g><title>stream_book::ws_data_providers::ws_listeners::spawn_message_listener::_{{closure}} (2,830 samples, 0.78%)</title><rect x="95.9311%" y="853" width="0.7763%" height="15" fill="rgb(248,18,21)" fg:x="349712" fg:w="2830"/><text x="96.1811%" y="863.50"></text></g><g><title>__GI___sched_yield (95 samples, 0.03%)</title><rect x="96.8105%" y="805" width="0.0261%" height="15" fill="rgb(245,180,19)" fg:x="352918" fg:w="95"/><text x="97.0605%" y="815.50"></text></g><g><title>[unknown] (84 samples, 0.02%)</title><rect x="96.8136%" y="789" width="0.0230%" height="15" fill="rgb(252,118,36)" fg:x="352929" fg:w="84"/><text x="97.0636%" y="799.50"></text></g><g><title>[unknown] (79 samples, 0.02%)</title><rect x="96.8149%" y="773" width="0.0217%" height="15" fill="rgb(210,224,19)" fg:x="352934" fg:w="79"/><text x="97.0649%" y="783.50"></text></g><g><title>[unknown] (78 samples, 0.02%)</title><rect x="96.8152%" y="757" width="0.0214%" height="15" fill="rgb(218,30,24)" fg:x="352935" fg:w="78"/><text x="97.0652%" y="767.50"></text></g><g><title>[unknown] (76 samples, 0.02%)</title><rect x="96.8158%" y="741" width="0.0208%" height="15" fill="rgb(219,75,50)" fg:x="352937" fg:w="76"/><text x="97.0658%" y="751.50"></text></g><g><title>[unknown] (73 samples, 0.02%)</title><rect x="96.8166%" y="725" width="0.0200%" height="15" fill="rgb(234,72,50)" fg:x="352940" fg:w="73"/><text x="97.0666%" y="735.50"></text></g><g><title>[unknown] (65 samples, 0.02%)</title><rect x="96.8188%" y="709" width="0.0178%" height="15" fill="rgb(219,100,48)" fg:x="352948" fg:w="65"/><text x="97.0688%" y="719.50"></text></g><g><title>[unknown] (54 samples, 0.01%)</title><rect x="96.8218%" y="693" width="0.0148%" height="15" fill="rgb(253,5,41)" fg:x="352959" fg:w="54"/><text x="97.0718%" y="703.50"></text></g><g><title>[unknown] (40 samples, 0.01%)</title><rect x="96.8256%" y="677" width="0.0110%" height="15" fill="rgb(247,181,11)" fg:x="352973" fg:w="40"/><text x="97.0756%" y="687.50"></text></g><g><title>std::thread::park (117 samples, 0.03%)</title><rect x="96.8756%" y="789" width="0.0321%" height="15" fill="rgb(222,223,25)" fg:x="353155" fg:w="117"/><text x="97.1256%" y="799.50"></text></g><g><title>std::sys_common::thread_parking::futex::Parker::park (116 samples, 0.03%)</title><rect x="96.8758%" y="773" width="0.0318%" height="15" fill="rgb(214,198,28)" fg:x="353156" fg:w="116"/><text x="97.1258%" y="783.50"></text></g><g><title>std::sys::unix::futex::futex_wait (112 samples, 0.03%)</title><rect x="96.8769%" y="757" width="0.0307%" height="15" fill="rgb(230,46,43)" fg:x="353160" fg:w="112"/><text x="97.1269%" y="767.50"></text></g><g><title>syscall (109 samples, 0.03%)</title><rect x="96.8778%" y="741" width="0.0299%" height="15" fill="rgb(233,65,53)" fg:x="353163" fg:w="109"/><text x="97.1278%" y="751.50"></text></g><g><title>[unknown] (106 samples, 0.03%)</title><rect x="96.8786%" y="725" width="0.0291%" height="15" fill="rgb(221,121,27)" fg:x="353166" fg:w="106"/><text x="97.1286%" y="735.50"></text></g><g><title>[unknown] (102 samples, 0.03%)</title><rect x="96.8797%" y="709" width="0.0280%" height="15" fill="rgb(247,70,47)" fg:x="353170" fg:w="102"/><text x="97.1297%" y="719.50"></text></g><g><title>[unknown] (100 samples, 0.03%)</title><rect x="96.8802%" y="693" width="0.0274%" height="15" fill="rgb(228,85,35)" fg:x="353172" fg:w="100"/><text x="97.1302%" y="703.50"></text></g><g><title>[unknown] (100 samples, 0.03%)</title><rect x="96.8802%" y="677" width="0.0274%" height="15" fill="rgb(209,50,18)" fg:x="353172" fg:w="100"/><text x="97.1302%" y="687.50"></text></g><g><title>[unknown] (96 samples, 0.03%)</title><rect x="96.8813%" y="661" width="0.0263%" height="15" fill="rgb(250,19,35)" fg:x="353176" fg:w="96"/><text x="97.1313%" y="671.50"></text></g><g><title>[unknown] (90 samples, 0.02%)</title><rect x="96.8830%" y="645" width="0.0247%" height="15" fill="rgb(253,107,29)" fg:x="353182" fg:w="90"/><text x="97.1330%" y="655.50"></text></g><g><title>[unknown] (82 samples, 0.02%)</title><rect x="96.8852%" y="629" width="0.0225%" height="15" fill="rgb(252,179,29)" fg:x="353190" fg:w="82"/><text x="97.1352%" y="639.50"></text></g><g><title>[unknown] (81 samples, 0.02%)</title><rect x="96.8854%" y="613" width="0.0222%" height="15" fill="rgb(238,194,6)" fg:x="353191" fg:w="81"/><text x="97.1354%" y="623.50"></text></g><g><title>[unknown] (80 samples, 0.02%)</title><rect x="96.8857%" y="597" width="0.0219%" height="15" fill="rgb(238,164,29)" fg:x="353192" fg:w="80"/><text x="97.1357%" y="607.50"></text></g><g><title>[unknown] (73 samples, 0.02%)</title><rect x="96.8876%" y="581" width="0.0200%" height="15" fill="rgb(224,25,9)" fg:x="353199" fg:w="73"/><text x="97.1376%" y="591.50"></text></g><g><title>[unknown] (59 samples, 0.02%)</title><rect x="96.8915%" y="565" width="0.0162%" height="15" fill="rgb(244,153,23)" fg:x="353213" fg:w="59"/><text x="97.1415%" y="575.50"></text></g><g><title>[unknown] (56 samples, 0.02%)</title><rect x="96.8923%" y="549" width="0.0154%" height="15" fill="rgb(212,203,14)" fg:x="353216" fg:w="56"/><text x="97.1423%" y="559.50"></text></g><g><title>[unknown] (50 samples, 0.01%)</title><rect x="96.8939%" y="533" width="0.0137%" height="15" fill="rgb(220,164,20)" fg:x="353222" fg:w="50"/><text x="97.1439%" y="543.50"></text></g><g><title>[unknown] (45 samples, 0.01%)</title><rect x="96.8953%" y="517" width="0.0123%" height="15" fill="rgb(222,203,48)" fg:x="353227" fg:w="45"/><text x="97.1453%" y="527.50"></text></g><g><title>crossbeam_channel::context::Context::with::{{closure}} (260 samples, 0.07%)</title><rect x="96.8369%" y="805" width="0.0713%" height="15" fill="rgb(215,159,22)" fg:x="353014" fg:w="260"/><text x="97.0869%" y="815.50"></text></g><g><title>&lt;crossbeam_channel::channel::IntoIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (518 samples, 0.14%)</title><rect x="96.7667%" y="837" width="0.1421%" height="15" fill="rgb(216,183,47)" fg:x="352758" fg:w="518"/><text x="97.0167%" y="847.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::recv (513 samples, 0.14%)</title><rect x="96.7680%" y="821" width="0.1407%" height="15" fill="rgb(229,195,25)" fg:x="352763" fg:w="513"/><text x="97.0180%" y="831.50"></text></g><g><title>__memcmp_avx2_movbe (148 samples, 0.04%)</title><rect x="96.9162%" y="837" width="0.0406%" height="15" fill="rgb(224,132,51)" fg:x="353303" fg:w="148"/><text x="97.1662%" y="847.50"></text></g><g><title>_int_free (86 samples, 0.02%)</title><rect x="96.9576%" y="837" width="0.0236%" height="15" fill="rgb(240,63,7)" fg:x="353454" fg:w="86"/><text x="97.2076%" y="847.50"></text></g><g><title>alloc::string::String::with_capacity (38 samples, 0.01%)</title><rect x="96.9825%" y="821" width="0.0104%" height="15" fill="rgb(249,182,41)" fg:x="353545" fg:w="38"/><text x="97.2325%" y="831.50"></text></g><g><title>_int_realloc (118 samples, 0.03%)</title><rect x="97.0572%" y="549" width="0.0324%" height="15" fill="rgb(243,47,26)" fg:x="353817" fg:w="118"/><text x="97.3072%" y="559.50"></text></g><g><title>_int_malloc (70 samples, 0.02%)</title><rect x="97.0703%" y="533" width="0.0192%" height="15" fill="rgb(233,48,2)" fg:x="353865" fg:w="70"/><text x="97.3203%" y="543.50"></text></g><g><title>__GI___libc_realloc (227 samples, 0.06%)</title><rect x="97.0281%" y="565" width="0.0623%" height="15" fill="rgb(244,165,34)" fg:x="353711" fg:w="227"/><text x="97.2781%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (235 samples, 0.06%)</title><rect x="97.0278%" y="613" width="0.0645%" height="15" fill="rgb(207,89,7)" fg:x="353710" fg:w="235"/><text x="97.2778%" y="623.50"></text></g><g><title>alloc::alloc::Global::grow_impl (235 samples, 0.06%)</title><rect x="97.0278%" y="597" width="0.0645%" height="15" fill="rgb(244,117,36)" fg:x="353710" fg:w="235"/><text x="97.2778%" y="607.50"></text></g><g><title>alloc::alloc::realloc (234 samples, 0.06%)</title><rect x="97.0281%" y="581" width="0.0642%" height="15" fill="rgb(226,144,34)" fg:x="353711" fg:w="234"/><text x="97.2781%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (281 samples, 0.08%)</title><rect x="97.0264%" y="629" width="0.0771%" height="15" fill="rgb(213,23,19)" fg:x="353705" fg:w="281"/><text x="97.2764%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (327 samples, 0.09%)</title><rect x="97.0171%" y="693" width="0.0897%" height="15" fill="rgb(217,75,12)" fg:x="353671" fg:w="327"/><text x="97.2671%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (327 samples, 0.09%)</title><rect x="97.0171%" y="677" width="0.0897%" height="15" fill="rgb(224,159,17)" fg:x="353671" fg:w="327"/><text x="97.2671%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (314 samples, 0.09%)</title><rect x="97.0207%" y="661" width="0.0861%" height="15" fill="rgb(217,118,1)" fg:x="353684" fg:w="314"/><text x="97.2707%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (314 samples, 0.09%)</title><rect x="97.0207%" y="645" width="0.0861%" height="15" fill="rgb(232,180,48)" fg:x="353684" fg:w="314"/><text x="97.2707%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (454 samples, 0.12%)</title><rect x="97.0144%" y="773" width="0.1245%" height="15" fill="rgb(230,27,33)" fg:x="353661" fg:w="454"/><text x="97.2644%" y="783.50"></text></g><g><title>alloc::string::String::push_str (454 samples, 0.12%)</title><rect x="97.0144%" y="757" width="0.1245%" height="15" fill="rgb(205,31,21)" fg:x="353661" fg:w="454"/><text x="97.2644%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (454 samples, 0.12%)</title><rect x="97.0144%" y="741" width="0.1245%" height="15" fill="rgb(253,59,4)" fg:x="353661" fg:w="454"/><text x="97.2644%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (454 samples, 0.12%)</title><rect x="97.0144%" y="725" width="0.1245%" height="15" fill="rgb(224,201,9)" fg:x="353661" fg:w="454"/><text x="97.2644%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (454 samples, 0.12%)</title><rect x="97.0144%" y="709" width="0.1245%" height="15" fill="rgb(229,206,30)" fg:x="353661" fg:w="454"/><text x="97.2644%" y="719.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (117 samples, 0.03%)</title><rect x="97.1068%" y="693" width="0.0321%" height="15" fill="rgb(212,67,47)" fg:x="353998" fg:w="117"/><text x="97.3568%" y="703.50"></text></g><g><title>__memmove_avx_unaligned_erms (116 samples, 0.03%)</title><rect x="97.1071%" y="677" width="0.0318%" height="15" fill="rgb(211,96,50)" fg:x="353999" fg:w="116"/><text x="97.3571%" y="687.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (465 samples, 0.13%)</title><rect x="97.0116%" y="789" width="0.1276%" height="15" fill="rgb(252,114,18)" fg:x="353651" fg:w="465"/><text x="97.2616%" y="799.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Display&gt;::fmt (38 samples, 0.01%)</title><rect x="97.1392%" y="789" width="0.0104%" height="15" fill="rgb(223,58,37)" fg:x="354116" fg:w="38"/><text x="97.3892%" y="799.50"></text></g><g><title>__GI___libc_realloc (192 samples, 0.05%)</title><rect x="97.1949%" y="517" width="0.0527%" height="15" fill="rgb(237,70,4)" fg:x="354319" fg:w="192"/><text x="97.4449%" y="527.50"></text></g><g><title>_int_realloc (97 samples, 0.03%)</title><rect x="97.2209%" y="501" width="0.0266%" height="15" fill="rgb(244,85,46)" fg:x="354414" fg:w="97"/><text x="97.4709%" y="511.50"></text></g><g><title>_int_malloc (44 samples, 0.01%)</title><rect x="97.2355%" y="485" width="0.0121%" height="15" fill="rgb(223,39,52)" fg:x="354467" fg:w="44"/><text x="97.4855%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (203 samples, 0.06%)</title><rect x="97.1943%" y="565" width="0.0557%" height="15" fill="rgb(218,200,14)" fg:x="354317" fg:w="203"/><text x="97.4443%" y="575.50"></text></g><g><title>alloc::alloc::Global::grow_impl (203 samples, 0.06%)</title><rect x="97.1943%" y="549" width="0.0557%" height="15" fill="rgb(208,171,16)" fg:x="354317" fg:w="203"/><text x="97.4443%" y="559.50"></text></g><g><title>alloc::alloc::realloc (201 samples, 0.06%)</title><rect x="97.1949%" y="533" width="0.0551%" height="15" fill="rgb(234,200,18)" fg:x="354319" fg:w="201"/><text x="97.4449%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (212 samples, 0.06%)</title><rect x="97.1938%" y="581" width="0.0582%" height="15" fill="rgb(228,45,11)" fg:x="354315" fg:w="212"/><text x="97.4438%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (243 samples, 0.07%)</title><rect x="97.1872%" y="645" width="0.0667%" height="15" fill="rgb(237,182,11)" fg:x="354291" fg:w="243"/><text x="97.4372%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (241 samples, 0.07%)</title><rect x="97.1877%" y="629" width="0.0661%" height="15" fill="rgb(241,175,49)" fg:x="354293" fg:w="241"/><text x="97.4377%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (228 samples, 0.06%)</title><rect x="97.1913%" y="613" width="0.0625%" height="15" fill="rgb(247,38,35)" fg:x="354306" fg:w="228"/><text x="97.4413%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (228 samples, 0.06%)</title><rect x="97.1913%" y="597" width="0.0625%" height="15" fill="rgb(228,39,49)" fg:x="354306" fg:w="228"/><text x="97.4413%" y="607.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (64 samples, 0.02%)</title><rect x="97.2538%" y="645" width="0.0176%" height="15" fill="rgb(226,101,26)" fg:x="354534" fg:w="64"/><text x="97.5038%" y="655.50"></text></g><g><title>__memmove_avx_unaligned_erms (62 samples, 0.02%)</title><rect x="97.2544%" y="629" width="0.0170%" height="15" fill="rgb(206,141,19)" fg:x="354536" fg:w="62"/><text x="97.5044%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (320 samples, 0.09%)</title><rect x="97.1839%" y="725" width="0.0878%" height="15" fill="rgb(211,200,13)" fg:x="354279" fg:w="320"/><text x="97.4339%" y="735.50"></text></g><g><title>alloc::string::String::push_str (320 samples, 0.09%)</title><rect x="97.1839%" y="709" width="0.0878%" height="15" fill="rgb(241,121,6)" fg:x="354279" fg:w="320"/><text x="97.4339%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (320 samples, 0.09%)</title><rect x="97.1839%" y="693" width="0.0878%" height="15" fill="rgb(234,221,29)" fg:x="354279" fg:w="320"/><text x="97.4339%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (320 samples, 0.09%)</title><rect x="97.1839%" y="677" width="0.0878%" height="15" fill="rgb(229,136,5)" fg:x="354279" fg:w="320"/><text x="97.4339%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (320 samples, 0.09%)</title><rect x="97.1839%" y="661" width="0.0878%" height="15" fill="rgb(238,36,11)" fg:x="354279" fg:w="320"/><text x="97.4339%" y="671.50"></text></g><g><title>core::fmt::Formatter::write_formatted_parts::write_bytes (330 samples, 0.09%)</title><rect x="97.1817%" y="757" width="0.0905%" height="15" fill="rgb(251,55,41)" fg:x="354271" fg:w="330"/><text x="97.4317%" y="767.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (328 samples, 0.09%)</title><rect x="97.1822%" y="741" width="0.0900%" height="15" fill="rgb(242,34,40)" fg:x="354273" fg:w="328"/><text x="97.4322%" y="751.50"></text></g><g><title>core::fmt::Formatter::write_formatted_parts (399 samples, 0.11%)</title><rect x="97.1644%" y="773" width="0.1095%" height="15" fill="rgb(215,42,17)" fg:x="354208" fg:w="399"/><text x="97.4144%" y="783.50"></text></g><g><title>core::num::flt2dec::decoder::decode (56 samples, 0.02%)</title><rect x="97.2840%" y="757" width="0.0154%" height="15" fill="rgb(207,44,46)" fg:x="354644" fg:w="56"/><text x="97.5340%" y="767.50"></text></g><g><title>core::num::diy_float::Fp::mul (62 samples, 0.02%)</title><rect x="97.4151%" y="709" width="0.0170%" height="15" fill="rgb(211,206,28)" fg:x="355122" fg:w="62"/><text x="97.6651%" y="719.50"></text></g><g><title>core::num::diy_float::Fp::normalize (37 samples, 0.01%)</title><rect x="97.4321%" y="709" width="0.0101%" height="15" fill="rgb(237,167,16)" fg:x="355184" fg:w="37"/><text x="97.6821%" y="719.50"></text></g><g><title>core::num::flt2dec::strategy::grisu::format_shortest_opt::round_and_weed (50 samples, 0.01%)</title><rect x="97.4541%" y="709" width="0.0137%" height="15" fill="rgb(233,66,6)" fg:x="355264" fg:w="50"/><text x="97.7041%" y="719.50"></text></g><g><title>core::fmt::float::float_to_decimal_common_shortest (1,133 samples, 0.31%)</title><rect x="97.1633%" y="789" width="0.3108%" height="15" fill="rgb(246,123,29)" fg:x="354204" fg:w="1133"/><text x="97.4133%" y="799.50"></text></g><g><title>core::num::flt2dec::to_shortest_str (730 samples, 0.20%)</title><rect x="97.2739%" y="773" width="0.2002%" height="15" fill="rgb(209,62,40)" fg:x="354607" fg:w="730"/><text x="97.5239%" y="783.50"></text></g><g><title>core::ops::function::FnMut::call_mut (599 samples, 0.16%)</title><rect x="97.3098%" y="757" width="0.1643%" height="15" fill="rgb(218,4,25)" fg:x="354738" fg:w="599"/><text x="97.5598%" y="767.50"></text></g><g><title>core::num::flt2dec::strategy::grisu::format_shortest (599 samples, 0.16%)</title><rect x="97.3098%" y="741" width="0.1643%" height="15" fill="rgb(253,91,49)" fg:x="354738" fg:w="599"/><text x="97.5598%" y="751.50"></text></g><g><title>core::num::flt2dec::strategy::grisu::format_shortest_opt (555 samples, 0.15%)</title><rect x="97.3219%" y="725" width="0.1522%" height="15" fill="rgb(228,155,29)" fg:x="354782" fg:w="555"/><text x="97.5719%" y="735.50"></text></g><g><title>alloc::fmt::format::format_inner (1,807 samples, 0.50%)</title><rect x="96.9812%" y="837" width="0.4957%" height="15" fill="rgb(243,57,37)" fg:x="353540" fg:w="1807"/><text x="97.2312%" y="847.50"></text></g><g><title>core::fmt::Write::write_fmt (1,739 samples, 0.48%)</title><rect x="96.9998%" y="821" width="0.4770%" height="15" fill="rgb(244,167,17)" fg:x="353608" fg:w="1739"/><text x="97.2498%" y="831.50"></text></g><g><title>core::fmt::write (1,724 samples, 0.47%)</title><rect x="97.0039%" y="805" width="0.4729%" height="15" fill="rgb(207,181,38)" fg:x="353623" fg:w="1724"/><text x="97.2539%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (41 samples, 0.01%)</title><rect x="97.4769%" y="837" width="0.0112%" height="15" fill="rgb(211,8,23)" fg:x="355347" fg:w="41"/><text x="97.7269%" y="847.50"></text></g><g><title>alloc::raw_vec::finish_grow (41 samples, 0.01%)</title><rect x="97.4769%" y="821" width="0.0112%" height="15" fill="rgb(235,11,44)" fg:x="355347" fg:w="41"/><text x="97.7269%" y="831.50"></text></g><g><title>core::hash::BuildHasher::hash_one (131 samples, 0.04%)</title><rect x="97.4881%" y="837" width="0.0359%" height="15" fill="rgb(248,18,52)" fg:x="355388" fg:w="131"/><text x="97.7381%" y="847.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (81 samples, 0.02%)</title><rect x="97.5018%" y="821" width="0.0222%" height="15" fill="rgb(208,4,7)" fg:x="355438" fg:w="81"/><text x="97.7518%" y="831.50"></text></g><g><title>__GI___libc_free (48 samples, 0.01%)</title><rect x="97.5279%" y="821" width="0.0132%" height="15" fill="rgb(240,17,39)" fg:x="355533" fg:w="48"/><text x="97.7779%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;stream_book::ws_data_providers::ExchangeOrderBookMessage&gt; (147 samples, 0.04%)</title><rect x="97.5240%" y="837" width="0.0403%" height="15" fill="rgb(207,170,3)" fg:x="355519" fg:w="147"/><text x="97.7740%" y="847.50"></text></g><g><title>_int_free (85 samples, 0.02%)</title><rect x="97.5410%" y="821" width="0.0233%" height="15" fill="rgb(236,100,52)" fg:x="355581" fg:w="85"/><text x="97.7910%" y="831.50"></text></g><g><title>core::fmt::float::float_to_decimal_common_shortest (64 samples, 0.02%)</title><rect x="97.5948%" y="773" width="0.0176%" height="15" fill="rgb(246,78,51)" fg:x="355777" fg:w="64"/><text x="97.8448%" y="783.50"></text></g><g><title>alloc::fmt::format::format_inner (113 samples, 0.03%)</title><rect x="97.5819%" y="821" width="0.0310%" height="15" fill="rgb(211,17,15)" fg:x="355730" fg:w="113"/><text x="97.8319%" y="831.50"></text></g><g><title>core::fmt::Write::write_fmt (108 samples, 0.03%)</title><rect x="97.5833%" y="805" width="0.0296%" height="15" fill="rgb(209,59,46)" fg:x="355735" fg:w="108"/><text x="97.8333%" y="815.50"></text></g><g><title>core::fmt::write (107 samples, 0.03%)</title><rect x="97.5836%" y="789" width="0.0294%" height="15" fill="rgb(210,92,25)" fg:x="355736" fg:w="107"/><text x="97.8336%" y="799.50"></text></g><g><title>stream_book::order_book::model::OrderBook::add_ask (171 samples, 0.05%)</title><rect x="97.5737%" y="837" width="0.0469%" height="15" fill="rgb(238,174,52)" fg:x="355700" fg:w="171"/><text x="97.8237%" y="847.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (40 samples, 0.01%)</title><rect x="97.6321%" y="773" width="0.0110%" height="15" fill="rgb(230,73,7)" fg:x="355913" fg:w="40"/><text x="97.8821%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (39 samples, 0.01%)</title><rect x="97.6324%" y="757" width="0.0107%" height="15" fill="rgb(243,124,40)" fg:x="355914" fg:w="39"/><text x="97.8824%" y="767.50"></text></g><g><title>alloc::string::String::push_str (39 samples, 0.01%)</title><rect x="97.6324%" y="741" width="0.0107%" height="15" fill="rgb(244,170,11)" fg:x="355914" fg:w="39"/><text x="97.8824%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (39 samples, 0.01%)</title><rect x="97.6324%" y="725" width="0.0107%" height="15" fill="rgb(207,114,54)" fg:x="355914" fg:w="39"/><text x="97.8824%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (39 samples, 0.01%)</title><rect x="97.6324%" y="709" width="0.0107%" height="15" fill="rgb(205,42,20)" fg:x="355914" fg:w="39"/><text x="97.8824%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (39 samples, 0.01%)</title><rect x="97.6324%" y="693" width="0.0107%" height="15" fill="rgb(230,30,28)" fg:x="355914" fg:w="39"/><text x="97.8824%" y="703.50"></text></g><g><title>alloc::fmt::format::format_inner (126 samples, 0.03%)</title><rect x="97.6291%" y="821" width="0.0346%" height="15" fill="rgb(205,73,54)" fg:x="355902" fg:w="126"/><text x="97.8791%" y="831.50"></text></g><g><title>core::fmt::Write::write_fmt (122 samples, 0.03%)</title><rect x="97.6302%" y="805" width="0.0335%" height="15" fill="rgb(254,227,23)" fg:x="355906" fg:w="122"/><text x="97.8802%" y="815.50"></text></g><g><title>core::fmt::write (118 samples, 0.03%)</title><rect x="97.6313%" y="789" width="0.0324%" height="15" fill="rgb(228,202,34)" fg:x="355910" fg:w="118"/><text x="97.8813%" y="799.50"></text></g><g><title>core::fmt::float::float_to_decimal_common_shortest (72 samples, 0.02%)</title><rect x="97.6439%" y="773" width="0.0198%" height="15" fill="rgb(222,225,37)" fg:x="355956" fg:w="72"/><text x="97.8939%" y="783.50"></text></g><g><title>core::num::flt2dec::to_shortest_str (38 samples, 0.01%)</title><rect x="97.6532%" y="757" width="0.0104%" height="15" fill="rgb(221,14,54)" fg:x="355990" fg:w="38"/><text x="97.9032%" y="767.50"></text></g><g><title>stream_book::order_book::model::OrderBook::add_bid (193 samples, 0.05%)</title><rect x="97.6206%" y="837" width="0.0529%" height="15" fill="rgb(254,102,2)" fg:x="355871" fg:w="193"/><text x="97.8706%" y="847.50"></text></g><g><title>stream_book::order_book::model::OrderBook::flush_order_book (37 samples, 0.01%)</title><rect x="97.6735%" y="837" width="0.0101%" height="15" fill="rgb(232,104,17)" fg:x="356064" fg:w="37"/><text x="97.9235%" y="847.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear (37 samples, 0.01%)</title><rect x="97.6735%" y="821" width="0.0101%" height="15" fill="rgb(250,220,14)" fg:x="356064" fg:w="37"/><text x="97.9235%" y="831.50"></text></g><g><title>_int_malloc (296 samples, 0.08%)</title><rect x="97.7594%" y="613" width="0.0812%" height="15" fill="rgb(241,158,9)" fg:x="356377" fg:w="296"/><text x="98.0094%" y="623.50"></text></g><g><title>unlink_chunk (38 samples, 0.01%)</title><rect x="97.8302%" y="597" width="0.0104%" height="15" fill="rgb(246,9,43)" fg:x="356635" fg:w="38"/><text x="98.0802%" y="607.50"></text></g><g><title>__GI___libc_malloc (450 samples, 0.12%)</title><rect x="97.7202%" y="629" width="0.1234%" height="15" fill="rgb(206,73,33)" fg:x="356234" fg:w="450"/><text x="97.9702%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (461 samples, 0.13%)</title><rect x="97.7185%" y="677" width="0.1265%" height="15" fill="rgb(222,79,8)" fg:x="356228" fg:w="461"/><text x="97.9685%" y="687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (461 samples, 0.13%)</title><rect x="97.7185%" y="661" width="0.1265%" height="15" fill="rgb(234,8,54)" fg:x="356228" fg:w="461"/><text x="97.9685%" y="671.50"></text></g><g><title>alloc::alloc::alloc (461 samples, 0.13%)</title><rect x="97.7185%" y="645" width="0.1265%" height="15" fill="rgb(209,134,38)" fg:x="356228" fg:w="461"/><text x="97.9685%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (467 samples, 0.13%)</title><rect x="97.7174%" y="725" width="0.1281%" height="15" fill="rgb(230,127,29)" fg:x="356224" fg:w="467"/><text x="97.9674%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (467 samples, 0.13%)</title><rect x="97.7174%" y="709" width="0.1281%" height="15" fill="rgb(242,44,41)" fg:x="356224" fg:w="467"/><text x="97.9674%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (467 samples, 0.13%)</title><rect x="97.7174%" y="693" width="0.1281%" height="15" fill="rgb(222,56,43)" fg:x="356224" fg:w="467"/><text x="97.9674%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (588 samples, 0.16%)</title><rect x="97.7174%" y="789" width="0.1613%" height="15" fill="rgb(238,39,47)" fg:x="356224" fg:w="588"/><text x="97.9674%" y="799.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (588 samples, 0.16%)</title><rect x="97.7174%" y="773" width="0.1613%" height="15" fill="rgb(226,79,43)" fg:x="356224" fg:w="588"/><text x="97.9674%" y="783.50"></text></g><g><title>alloc::slice::hack::to_vec (588 samples, 0.16%)</title><rect x="97.7174%" y="757" width="0.1613%" height="15" fill="rgb(242,105,53)" fg:x="356224" fg:w="588"/><text x="97.9674%" y="767.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (588 samples, 0.16%)</title><rect x="97.7174%" y="741" width="0.1613%" height="15" fill="rgb(251,132,46)" fg:x="356224" fg:w="588"/><text x="97.9674%" y="751.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (121 samples, 0.03%)</title><rect x="97.8455%" y="725" width="0.0332%" height="15" fill="rgb(231,77,14)" fg:x="356691" fg:w="121"/><text x="98.0955%" y="735.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (121 samples, 0.03%)</title><rect x="97.8455%" y="709" width="0.0332%" height="15" fill="rgb(240,135,9)" fg:x="356691" fg:w="121"/><text x="98.0955%" y="719.50"></text></g><g><title>__memmove_avx_unaligned_erms (121 samples, 0.03%)</title><rect x="97.8455%" y="693" width="0.0332%" height="15" fill="rgb(248,109,14)" fg:x="356691" fg:w="121"/><text x="98.0955%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (623 samples, 0.17%)</title><rect x="97.7081%" y="805" width="0.1709%" height="15" fill="rgb(227,146,52)" fg:x="356190" fg:w="623"/><text x="97.9581%" y="815.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::push (274 samples, 0.08%)</title><rect x="97.8886%" y="805" width="0.0752%" height="15" fill="rgb(232,54,3)" fg:x="356848" fg:w="274"/><text x="98.1386%" y="815.50"></text></g><g><title>malloc_consolidate (122 samples, 0.03%)</title><rect x="97.9799%" y="741" width="0.0335%" height="15" fill="rgb(229,201,43)" fg:x="357181" fg:w="122"/><text x="98.2299%" y="751.50"></text></g><g><title>__GI___libc_malloc (183 samples, 0.05%)</title><rect x="97.9638%" y="773" width="0.0502%" height="15" fill="rgb(252,161,33)" fg:x="357122" fg:w="183"/><text x="98.2138%" y="783.50"></text></g><g><title>_int_malloc (177 samples, 0.05%)</title><rect x="97.9654%" y="757" width="0.0486%" height="15" fill="rgb(226,146,40)" fg:x="357128" fg:w="177"/><text x="98.2154%" y="767.50"></text></g><g><title>&lt;alloc::collections::binary_heap::BinaryHeap&lt;T&gt; as alloc::collections::SpecExtend&lt;I&gt;&gt;::spec_extend (1,181 samples, 0.32%)</title><rect x="97.6905%" y="821" width="0.3240%" height="15" fill="rgb(219,47,25)" fg:x="356126" fg:w="1181"/><text x="97.9405%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (185 samples, 0.05%)</title><rect x="97.9638%" y="805" width="0.0507%" height="15" fill="rgb(250,135,13)" fg:x="357122" fg:w="185"/><text x="98.2138%" y="815.50"></text></g><g><title>alloc::raw_vec::finish_grow (185 samples, 0.05%)</title><rect x="97.9638%" y="789" width="0.0507%" height="15" fill="rgb(219,229,18)" fg:x="357122" fg:w="185"/><text x="98.2138%" y="799.50"></text></g><g><title>_int_malloc (555 samples, 0.15%)</title><rect x="98.1906%" y="613" width="0.1522%" height="15" fill="rgb(217,152,27)" fg:x="357949" fg:w="555"/><text x="98.4406%" y="623.50"></text></g><g><title>unlink_chunk (89 samples, 0.02%)</title><rect x="98.3185%" y="597" width="0.0244%" height="15" fill="rgb(225,71,47)" fg:x="358415" fg:w="89"/><text x="98.5685%" y="607.50"></text></g><g><title>__GI___libc_malloc (929 samples, 0.25%)</title><rect x="98.0952%" y="629" width="0.2548%" height="15" fill="rgb(220,139,14)" fg:x="357601" fg:w="929"/><text x="98.3452%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (953 samples, 0.26%)</title><rect x="98.0924%" y="725" width="0.2614%" height="15" fill="rgb(247,54,32)" fg:x="357591" fg:w="953"/><text x="98.3424%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (953 samples, 0.26%)</title><rect x="98.0924%" y="709" width="0.2614%" height="15" fill="rgb(252,131,39)" fg:x="357591" fg:w="953"/><text x="98.3424%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (953 samples, 0.26%)</title><rect x="98.0924%" y="693" width="0.2614%" height="15" fill="rgb(210,108,39)" fg:x="357591" fg:w="953"/><text x="98.3424%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (943 samples, 0.26%)</title><rect x="98.0952%" y="677" width="0.2587%" height="15" fill="rgb(205,23,29)" fg:x="357601" fg:w="943"/><text x="98.3452%" y="687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (943 samples, 0.26%)</title><rect x="98.0952%" y="661" width="0.2587%" height="15" fill="rgb(246,139,46)" fg:x="357601" fg:w="943"/><text x="98.3452%" y="671.50"></text></g><g><title>alloc::alloc::alloc (943 samples, 0.26%)</title><rect x="98.0952%" y="645" width="0.2587%" height="15" fill="rgb(250,81,26)" fg:x="357601" fg:w="943"/><text x="98.3452%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,489 samples, 0.41%)</title><rect x="98.0598%" y="805" width="0.4085%" height="15" fill="rgb(214,104,7)" fg:x="357472" fg:w="1489"/><text x="98.3098%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,370 samples, 0.38%)</title><rect x="98.0924%" y="789" width="0.3758%" height="15" fill="rgb(233,189,8)" fg:x="357591" fg:w="1370"/><text x="98.3424%" y="799.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,370 samples, 0.38%)</title><rect x="98.0924%" y="773" width="0.3758%" height="15" fill="rgb(228,141,17)" fg:x="357591" fg:w="1370"/><text x="98.3424%" y="783.50"></text></g><g><title>alloc::slice::hack::to_vec (1,370 samples, 0.38%)</title><rect x="98.0924%" y="757" width="0.3758%" height="15" fill="rgb(247,157,1)" fg:x="357591" fg:w="1370"/><text x="98.3424%" y="767.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,370 samples, 0.38%)</title><rect x="98.0924%" y="741" width="0.3758%" height="15" fill="rgb(249,225,5)" fg:x="357591" fg:w="1370"/><text x="98.3424%" y="751.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (417 samples, 0.11%)</title><rect x="98.3538%" y="725" width="0.1144%" height="15" fill="rgb(242,55,13)" fg:x="358544" fg:w="417"/><text x="98.6038%" y="735.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (417 samples, 0.11%)</title><rect x="98.3538%" y="709" width="0.1144%" height="15" fill="rgb(230,49,50)" fg:x="358544" fg:w="417"/><text x="98.6038%" y="719.50"></text></g><g><title>__memmove_avx_unaligned_erms (417 samples, 0.11%)</title><rect x="98.3538%" y="693" width="0.1144%" height="15" fill="rgb(241,111,38)" fg:x="358544" fg:w="417"/><text x="98.6038%" y="703.50"></text></g><g><title>malloc_consolidate (290 samples, 0.08%)</title><rect x="98.4951%" y="773" width="0.0796%" height="15" fill="rgb(252,155,4)" fg:x="359059" fg:w="290"/><text x="98.7451%" y="783.50"></text></g><g><title>_int_malloc (378 samples, 0.10%)</title><rect x="98.4721%" y="789" width="0.1037%" height="15" fill="rgb(212,69,32)" fg:x="358975" fg:w="378"/><text x="98.7221%" y="799.50"></text></g><g><title>__GI___libc_malloc (393 samples, 0.11%)</title><rect x="98.4685%" y="805" width="0.1078%" height="15" fill="rgb(243,107,47)" fg:x="358962" fg:w="393"/><text x="98.7185%" y="815.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,065 samples, 0.57%)</title><rect x="98.0145%" y="821" width="0.5665%" height="15" fill="rgb(247,130,12)" fg:x="357307" fg:w="2065"/><text x="98.2645%" y="831.50"></text></g><g><title>__GI___libc_free (69 samples, 0.02%)</title><rect x="98.6040%" y="805" width="0.0189%" height="15" fill="rgb(233,74,16)" fg:x="359456" fg:w="69"/><text x="98.8540%" y="815.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (454 samples, 0.12%)</title><rect x="98.5810%" y="821" width="0.1245%" height="15" fill="rgb(208,58,18)" fg:x="359372" fg:w="454"/><text x="98.8310%" y="831.50"></text></g><g><title>_int_free (287 samples, 0.08%)</title><rect x="98.6268%" y="805" width="0.0787%" height="15" fill="rgb(242,225,1)" fg:x="359539" fg:w="287"/><text x="98.8768%" y="815.50"></text></g><g><title>__GI___libc_free (93 samples, 0.03%)</title><rect x="98.7055%" y="821" width="0.0255%" height="15" fill="rgb(249,39,40)" fg:x="359826" fg:w="93"/><text x="98.9555%" y="831.50"></text></g><g><title>_int_free (306 samples, 0.08%)</title><rect x="98.7327%" y="821" width="0.0839%" height="15" fill="rgb(207,72,44)" fg:x="359925" fg:w="306"/><text x="98.9827%" y="831.50"></text></g><g><title>_int_malloc (259 samples, 0.07%)</title><rect x="98.9096%" y="597" width="0.0710%" height="15" fill="rgb(215,193,12)" fg:x="360570" fg:w="259"/><text x="99.1596%" y="607.50"></text></g><g><title>__GI___libc_malloc (458 samples, 0.13%)</title><rect x="98.8561%" y="613" width="0.1256%" height="15" fill="rgb(248,41,39)" fg:x="360375" fg:w="458"/><text x="99.1061%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (484 samples, 0.13%)</title><rect x="98.8539%" y="709" width="0.1328%" height="15" fill="rgb(253,85,4)" fg:x="360367" fg:w="484"/><text x="99.1039%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (484 samples, 0.13%)</title><rect x="98.8539%" y="693" width="0.1328%" height="15" fill="rgb(243,70,31)" fg:x="360367" fg:w="484"/><text x="99.1039%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (484 samples, 0.13%)</title><rect x="98.8539%" y="677" width="0.1328%" height="15" fill="rgb(253,195,26)" fg:x="360367" fg:w="484"/><text x="99.1039%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (477 samples, 0.13%)</title><rect x="98.8558%" y="661" width="0.1308%" height="15" fill="rgb(243,42,11)" fg:x="360374" fg:w="477"/><text x="99.1058%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (477 samples, 0.13%)</title><rect x="98.8558%" y="645" width="0.1308%" height="15" fill="rgb(239,66,17)" fg:x="360374" fg:w="477"/><text x="99.1058%" y="655.50"></text></g><g><title>alloc::alloc::alloc (477 samples, 0.13%)</title><rect x="98.8558%" y="629" width="0.1308%" height="15" fill="rgb(217,132,21)" fg:x="360374" fg:w="477"/><text x="99.1058%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (570 samples, 0.16%)</title><rect x="98.8473%" y="789" width="0.1564%" height="15" fill="rgb(252,202,21)" fg:x="360343" fg:w="570"/><text x="99.0973%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (546 samples, 0.15%)</title><rect x="98.8539%" y="773" width="0.1498%" height="15" fill="rgb(233,98,36)" fg:x="360367" fg:w="546"/><text x="99.1039%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (546 samples, 0.15%)</title><rect x="98.8539%" y="757" width="0.1498%" height="15" fill="rgb(216,153,54)" fg:x="360367" fg:w="546"/><text x="99.1039%" y="767.50"></text></g><g><title>alloc::slice::hack::to_vec (546 samples, 0.15%)</title><rect x="98.8539%" y="741" width="0.1498%" height="15" fill="rgb(250,99,7)" fg:x="360367" fg:w="546"/><text x="99.1039%" y="751.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (546 samples, 0.15%)</title><rect x="98.8539%" y="725" width="0.1498%" height="15" fill="rgb(207,56,50)" fg:x="360367" fg:w="546"/><text x="99.1039%" y="735.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (62 samples, 0.02%)</title><rect x="98.9867%" y="709" width="0.0170%" height="15" fill="rgb(244,61,34)" fg:x="360851" fg:w="62"/><text x="99.2367%" y="719.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (62 samples, 0.02%)</title><rect x="98.9867%" y="693" width="0.0170%" height="15" fill="rgb(241,50,38)" fg:x="360851" fg:w="62"/><text x="99.2367%" y="703.50"></text></g><g><title>__memmove_avx_unaligned_erms (62 samples, 0.02%)</title><rect x="98.9867%" y="677" width="0.0170%" height="15" fill="rgb(212,166,30)" fg:x="360851" fg:w="62"/><text x="99.2367%" y="687.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::push (238 samples, 0.07%)</title><rect x="99.0136%" y="789" width="0.0653%" height="15" fill="rgb(249,127,32)" fg:x="360949" fg:w="238"/><text x="99.2636%" y="799.50"></text></g><g><title>&lt;alloc::collections::binary_heap::BinaryHeap&lt;T&gt; as alloc::collections::SpecExtend&lt;I&gt;&gt;::spec_extend (926 samples, 0.25%)</title><rect x="98.8311%" y="805" width="0.2540%" height="15" fill="rgb(209,103,0)" fg:x="360284" fg:w="926"/><text x="99.0811%" y="815.50"></text></g><g><title>_int_free (77 samples, 0.02%)</title><rect x="99.0906%" y="805" width="0.0211%" height="15" fill="rgb(238,209,51)" fg:x="361230" fg:w="77"/><text x="99.3406%" y="815.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::pop (395 samples, 0.11%)</title><rect x="99.1118%" y="805" width="0.1084%" height="15" fill="rgb(237,56,23)" fg:x="361307" fg:w="395"/><text x="99.3618%" y="815.50"></text></g><g><title>__GI___libc_realloc (124 samples, 0.03%)</title><rect x="99.2240%" y="773" width="0.0340%" height="15" fill="rgb(215,153,46)" fg:x="361716" fg:w="124"/><text x="99.4740%" y="783.50"></text></g><g><title>_int_realloc (104 samples, 0.03%)</title><rect x="99.2295%" y="757" width="0.0285%" height="15" fill="rgb(224,49,31)" fg:x="361736" fg:w="104"/><text x="99.4795%" y="767.50"></text></g><g><title>_int_malloc (72 samples, 0.02%)</title><rect x="99.2382%" y="741" width="0.0198%" height="15" fill="rgb(250,18,42)" fg:x="361768" fg:w="72"/><text x="99.4882%" y="751.50"></text></g><g><title>stream_book::order_book::model::OrderBook::generate_snapshot (5,740 samples, 1.57%)</title><rect x="97.6837%" y="837" width="1.5746%" height="15" fill="rgb(215,176,39)" fg:x="356101" fg:w="5740"/><text x="97.9337%" y="847.50"></text></g><g><title>stream_book::order_book::model::OrderBook::sort_and_filter_values (1,610 samples, 0.44%)</title><rect x="98.8166%" y="821" width="0.4416%" height="15" fill="rgb(223,77,29)" fg:x="360231" fg:w="1610"/><text x="99.0666%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (139 samples, 0.04%)</title><rect x="99.2201%" y="805" width="0.0381%" height="15" fill="rgb(234,94,52)" fg:x="361702" fg:w="139"/><text x="99.4701%" y="815.50"></text></g><g><title>alloc::raw_vec::finish_grow (138 samples, 0.04%)</title><rect x="99.2204%" y="789" width="0.0379%" height="15" fill="rgb(220,154,50)" fg:x="361703" fg:w="138"/><text x="99.4704%" y="799.50"></text></g><g><title>[unknown] (73 samples, 0.02%)</title><rect x="99.2794%" y="661" width="0.0200%" height="15" fill="rgb(212,11,10)" fg:x="361918" fg:w="73"/><text x="99.5294%" y="671.50"></text></g><g><title>[unknown] (72 samples, 0.02%)</title><rect x="99.2796%" y="645" width="0.0198%" height="15" fill="rgb(205,166,19)" fg:x="361919" fg:w="72"/><text x="99.5296%" y="655.50"></text></g><g><title>[unknown] (71 samples, 0.02%)</title><rect x="99.2799%" y="629" width="0.0195%" height="15" fill="rgb(244,198,16)" fg:x="361920" fg:w="71"/><text x="99.5299%" y="639.50"></text></g><g><title>[unknown] (69 samples, 0.02%)</title><rect x="99.2805%" y="613" width="0.0189%" height="15" fill="rgb(219,69,12)" fg:x="361922" fg:w="69"/><text x="99.5305%" y="623.50"></text></g><g><title>[unknown] (69 samples, 0.02%)</title><rect x="99.2805%" y="597" width="0.0189%" height="15" fill="rgb(245,30,7)" fg:x="361922" fg:w="69"/><text x="99.5305%" y="607.50"></text></g><g><title>[unknown] (68 samples, 0.02%)</title><rect x="99.2807%" y="581" width="0.0187%" height="15" fill="rgb(218,221,48)" fg:x="361923" fg:w="68"/><text x="99.5307%" y="591.50"></text></g><g><title>[unknown] (65 samples, 0.02%)</title><rect x="99.2816%" y="565" width="0.0178%" height="15" fill="rgb(216,66,15)" fg:x="361926" fg:w="65"/><text x="99.5316%" y="575.50"></text></g><g><title>[unknown] (59 samples, 0.02%)</title><rect x="99.2832%" y="549" width="0.0162%" height="15" fill="rgb(226,122,50)" fg:x="361932" fg:w="59"/><text x="99.5332%" y="559.50"></text></g><g><title>[unknown] (53 samples, 0.01%)</title><rect x="99.2849%" y="533" width="0.0145%" height="15" fill="rgb(239,156,16)" fg:x="361938" fg:w="53"/><text x="99.5349%" y="543.50"></text></g><g><title>[unknown] (49 samples, 0.01%)</title><rect x="99.2860%" y="517" width="0.0134%" height="15" fill="rgb(224,27,38)" fg:x="361942" fg:w="49"/><text x="99.5360%" y="527.50"></text></g><g><title>[unknown] (44 samples, 0.01%)</title><rect x="99.2873%" y="501" width="0.0121%" height="15" fill="rgb(224,39,27)" fg:x="361947" fg:w="44"/><text x="99.5373%" y="511.50"></text></g><g><title>[unknown] (44 samples, 0.01%)</title><rect x="99.2873%" y="485" width="0.0121%" height="15" fill="rgb(215,92,29)" fg:x="361947" fg:w="44"/><text x="99.5373%" y="495.50"></text></g><g><title>[unknown] (43 samples, 0.01%)</title><rect x="99.2876%" y="469" width="0.0118%" height="15" fill="rgb(207,159,16)" fg:x="361948" fg:w="43"/><text x="99.5376%" y="479.50"></text></g><g><title>[unknown] (43 samples, 0.01%)</title><rect x="99.2876%" y="453" width="0.0118%" height="15" fill="rgb(238,163,47)" fg:x="361948" fg:w="43"/><text x="99.5376%" y="463.50"></text></g><g><title>[unknown] (43 samples, 0.01%)</title><rect x="99.2876%" y="437" width="0.0118%" height="15" fill="rgb(219,91,49)" fg:x="361948" fg:w="43"/><text x="99.5376%" y="447.50"></text></g><g><title>[unknown] (38 samples, 0.01%)</title><rect x="99.2890%" y="421" width="0.0104%" height="15" fill="rgb(227,167,31)" fg:x="361953" fg:w="38"/><text x="99.5390%" y="431.50"></text></g><g><title>__libc_write (76 samples, 0.02%)</title><rect x="99.2791%" y="693" width="0.0208%" height="15" fill="rgb(234,80,54)" fg:x="361917" fg:w="76"/><text x="99.5291%" y="703.50"></text></g><g><title>__libc_write (76 samples, 0.02%)</title><rect x="99.2791%" y="677" width="0.0208%" height="15" fill="rgb(212,114,2)" fg:x="361917" fg:w="76"/><text x="99.5291%" y="687.50"></text></g><g><title>&lt;tokio::runtime::scheduler::current_thread::Handle as tokio::util::wake::Wake&gt;::wake (80 samples, 0.02%)</title><rect x="99.2783%" y="789" width="0.0219%" height="15" fill="rgb(234,50,24)" fg:x="361914" fg:w="80"/><text x="99.5283%" y="799.50"></text></g><g><title>tokio::runtime::driver::Handle::unpark (79 samples, 0.02%)</title><rect x="99.2786%" y="773" width="0.0217%" height="15" fill="rgb(221,68,8)" fg:x="361915" fg:w="79"/><text x="99.5286%" y="783.50"></text></g><g><title>mio::sys::unix::waker::eventfd::Waker::wake (79 samples, 0.02%)</title><rect x="99.2786%" y="757" width="0.0217%" height="15" fill="rgb(254,180,31)" fg:x="361915" fg:w="79"/><text x="99.5286%" y="767.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (78 samples, 0.02%)</title><rect x="99.2788%" y="741" width="0.0214%" height="15" fill="rgb(247,130,50)" fg:x="361916" fg:w="78"/><text x="99.5288%" y="751.50"></text></g><g><title>std::sys::unix::fs::File::write (77 samples, 0.02%)</title><rect x="99.2791%" y="725" width="0.0211%" height="15" fill="rgb(211,109,4)" fg:x="361917" fg:w="77"/><text x="99.5291%" y="735.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (77 samples, 0.02%)</title><rect x="99.2791%" y="709" width="0.0211%" height="15" fill="rgb(238,50,21)" fg:x="361917" fg:w="77"/><text x="99.5291%" y="719.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (90 samples, 0.02%)</title><rect x="99.2758%" y="805" width="0.0247%" height="15" fill="rgb(225,57,45)" fg:x="361905" fg:w="90"/><text x="99.5258%" y="815.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::schedule (65 samples, 0.02%)</title><rect x="99.3005%" y="805" width="0.0178%" height="15" fill="rgb(209,196,50)" fg:x="361995" fg:w="65"/><text x="99.5505%" y="815.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (64 samples, 0.02%)</title><rect x="99.3008%" y="789" width="0.0176%" height="15" fill="rgb(242,140,13)" fg:x="361996" fg:w="64"/><text x="99.5508%" y="799.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::add_permits_locked (251 samples, 0.07%)</title><rect x="99.2585%" y="837" width="0.0689%" height="15" fill="rgb(217,111,7)" fg:x="361842" fg:w="251"/><text x="99.5085%" y="847.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (197 samples, 0.05%)</title><rect x="99.2733%" y="821" width="0.0540%" height="15" fill="rgb(253,193,51)" fg:x="361896" fg:w="197"/><text x="99.5233%" y="831.50"></text></g><g><title>stream_book::ws_data_providers::ws_listeners::start_ws_listeners::_{{closure}}::_{{closure}} (9,556 samples, 2.62%)</title><rect x="96.7074%" y="853" width="2.6213%" height="15" fill="rgb(252,70,29)" fg:x="352542" fg:w="9556"/><text x="96.9574%" y="863.50">st..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (163,545 samples, 44.86%)</title><rect x="54.4764%" y="885" width="44.8628%" height="15" fill="rgb(232,127,12)" fg:x="198591" fg:w="163545"/><text x="54.7264%" y="895.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnO..</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (163,351 samples, 44.81%)</title><rect x="54.5296%" y="869" width="44.8096%" height="15" fill="rgb(211,180,21)" fg:x="198785" fg:w="163351"/><text x="54.7796%" y="879.50">tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut</text></g><g><title>tokio::runtime::task::core::TaskIdGuard::enter (38 samples, 0.01%)</title><rect x="99.3288%" y="853" width="0.0104%" height="15" fill="rgb(229,72,13)" fg:x="362098" fg:w="38"/><text x="99.5788%" y="863.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (302 samples, 0.08%)</title><rect x="99.3683%" y="853" width="0.0828%" height="15" fill="rgb(240,211,49)" fg:x="362242" fg:w="302"/><text x="99.6183%" y="863.50"></text></g><g><title>syscall (259 samples, 0.07%)</title><rect x="99.3800%" y="837" width="0.0710%" height="15" fill="rgb(219,149,40)" fg:x="362285" fg:w="259"/><text x="99.6300%" y="847.50"></text></g><g><title>[unknown] (255 samples, 0.07%)</title><rect x="99.3811%" y="821" width="0.0700%" height="15" fill="rgb(210,127,46)" fg:x="362289" fg:w="255"/><text x="99.6311%" y="831.50"></text></g><g><title>[unknown] (248 samples, 0.07%)</title><rect x="99.3831%" y="805" width="0.0680%" height="15" fill="rgb(220,106,7)" fg:x="362296" fg:w="248"/><text x="99.6331%" y="815.50"></text></g><g><title>[unknown] (247 samples, 0.07%)</title><rect x="99.3833%" y="789" width="0.0678%" height="15" fill="rgb(249,31,22)" fg:x="362297" fg:w="247"/><text x="99.6333%" y="799.50"></text></g><g><title>[unknown] (244 samples, 0.07%)</title><rect x="99.3842%" y="773" width="0.0669%" height="15" fill="rgb(253,1,49)" fg:x="362300" fg:w="244"/><text x="99.6342%" y="783.50"></text></g><g><title>[unknown] (238 samples, 0.07%)</title><rect x="99.3858%" y="757" width="0.0653%" height="15" fill="rgb(227,144,33)" fg:x="362306" fg:w="238"/><text x="99.6358%" y="767.50"></text></g><g><title>[unknown] (209 samples, 0.06%)</title><rect x="99.3938%" y="741" width="0.0573%" height="15" fill="rgb(249,163,44)" fg:x="362335" fg:w="209"/><text x="99.6438%" y="751.50"></text></g><g><title>[unknown] (189 samples, 0.05%)</title><rect x="99.3993%" y="725" width="0.0518%" height="15" fill="rgb(234,15,39)" fg:x="362355" fg:w="189"/><text x="99.6493%" y="735.50"></text></g><g><title>[unknown] (166 samples, 0.05%)</title><rect x="99.4056%" y="709" width="0.0455%" height="15" fill="rgb(207,66,16)" fg:x="362378" fg:w="166"/><text x="99.6556%" y="719.50"></text></g><g><title>[unknown] (142 samples, 0.04%)</title><rect x="99.4121%" y="693" width="0.0390%" height="15" fill="rgb(233,112,24)" fg:x="362402" fg:w="142"/><text x="99.6621%" y="703.50"></text></g><g><title>[unknown] (113 samples, 0.03%)</title><rect x="99.4201%" y="677" width="0.0310%" height="15" fill="rgb(230,90,22)" fg:x="362431" fg:w="113"/><text x="99.6701%" y="687.50"></text></g><g><title>[unknown] (52 samples, 0.01%)</title><rect x="99.4368%" y="661" width="0.0143%" height="15" fill="rgb(229,61,13)" fg:x="362492" fg:w="52"/><text x="99.6868%" y="671.50"></text></g><g><title>[unknown] (313 samples, 0.09%)</title><rect x="99.4560%" y="741" width="0.0859%" height="15" fill="rgb(225,57,24)" fg:x="362562" fg:w="313"/><text x="99.7060%" y="751.50"></text></g><g><title>[unknown] (306 samples, 0.08%)</title><rect x="99.4580%" y="725" width="0.0839%" height="15" fill="rgb(208,169,48)" fg:x="362569" fg:w="306"/><text x="99.7080%" y="735.50"></text></g><g><title>[unknown] (302 samples, 0.08%)</title><rect x="99.4591%" y="709" width="0.0828%" height="15" fill="rgb(244,218,51)" fg:x="362573" fg:w="302"/><text x="99.7091%" y="719.50"></text></g><g><title>[unknown] (299 samples, 0.08%)</title><rect x="99.4599%" y="693" width="0.0820%" height="15" fill="rgb(214,148,10)" fg:x="362576" fg:w="299"/><text x="99.7099%" y="703.50"></text></g><g><title>[unknown] (293 samples, 0.08%)</title><rect x="99.4615%" y="677" width="0.0804%" height="15" fill="rgb(225,174,27)" fg:x="362582" fg:w="293"/><text x="99.7115%" y="687.50"></text></g><g><title>[unknown] (274 samples, 0.08%)</title><rect x="99.4667%" y="661" width="0.0752%" height="15" fill="rgb(230,96,26)" fg:x="362601" fg:w="274"/><text x="99.7167%" y="671.50"></text></g><g><title>[unknown] (246 samples, 0.07%)</title><rect x="99.4744%" y="645" width="0.0675%" height="15" fill="rgb(232,10,30)" fg:x="362629" fg:w="246"/><text x="99.7244%" y="655.50"></text></g><g><title>[unknown] (227 samples, 0.06%)</title><rect x="99.4796%" y="629" width="0.0623%" height="15" fill="rgb(222,8,50)" fg:x="362648" fg:w="227"/><text x="99.7296%" y="639.50"></text></g><g><title>[unknown] (211 samples, 0.06%)</title><rect x="99.4840%" y="613" width="0.0579%" height="15" fill="rgb(213,81,27)" fg:x="362664" fg:w="211"/><text x="99.7340%" y="623.50"></text></g><g><title>[unknown] (195 samples, 0.05%)</title><rect x="99.4884%" y="597" width="0.0535%" height="15" fill="rgb(245,50,10)" fg:x="362680" fg:w="195"/><text x="99.7384%" y="607.50"></text></g><g><title>[unknown] (178 samples, 0.05%)</title><rect x="99.4931%" y="581" width="0.0488%" height="15" fill="rgb(216,100,18)" fg:x="362697" fg:w="178"/><text x="99.7431%" y="591.50"></text></g><g><title>[unknown] (176 samples, 0.05%)</title><rect x="99.4936%" y="565" width="0.0483%" height="15" fill="rgb(236,147,54)" fg:x="362699" fg:w="176"/><text x="99.7436%" y="575.50"></text></g><g><title>[unknown] (160 samples, 0.04%)</title><rect x="99.4980%" y="549" width="0.0439%" height="15" fill="rgb(205,143,26)" fg:x="362715" fg:w="160"/><text x="99.7480%" y="559.50"></text></g><g><title>[unknown] (156 samples, 0.04%)</title><rect x="99.4991%" y="533" width="0.0428%" height="15" fill="rgb(236,26,9)" fg:x="362719" fg:w="156"/><text x="99.7491%" y="543.50"></text></g><g><title>[unknown] (152 samples, 0.04%)</title><rect x="99.5002%" y="517" width="0.0417%" height="15" fill="rgb(221,165,53)" fg:x="362723" fg:w="152"/><text x="99.7502%" y="527.50"></text></g><g><title>[unknown] (140 samples, 0.04%)</title><rect x="99.5035%" y="501" width="0.0384%" height="15" fill="rgb(214,110,17)" fg:x="362735" fg:w="140"/><text x="99.7535%" y="511.50"></text></g><g><title>[unknown] (101 samples, 0.03%)</title><rect x="99.5142%" y="485" width="0.0277%" height="15" fill="rgb(237,197,12)" fg:x="362774" fg:w="101"/><text x="99.7642%" y="495.50"></text></g><g><title>[unknown] (74 samples, 0.02%)</title><rect x="99.5216%" y="469" width="0.0203%" height="15" fill="rgb(205,84,17)" fg:x="362801" fg:w="74"/><text x="99.7716%" y="479.50"></text></g><g><title>[unknown] (37 samples, 0.01%)</title><rect x="99.5317%" y="453" width="0.0101%" height="15" fill="rgb(237,18,45)" fg:x="362838" fg:w="37"/><text x="99.7817%" y="463.50"></text></g><g><title>mio::sys::unix::waker::eventfd::Waker::wake (333 samples, 0.09%)</title><rect x="99.4519%" y="837" width="0.0913%" height="15" fill="rgb(221,87,14)" fg:x="362547" fg:w="333"/><text x="99.7019%" y="847.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (330 samples, 0.09%)</title><rect x="99.4527%" y="821" width="0.0905%" height="15" fill="rgb(238,186,15)" fg:x="362550" fg:w="330"/><text x="99.7027%" y="831.50"></text></g><g><title>std::sys::unix::fs::File::write (330 samples, 0.09%)</title><rect x="99.4527%" y="805" width="0.0905%" height="15" fill="rgb(208,115,11)" fg:x="362550" fg:w="330"/><text x="99.7027%" y="815.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (330 samples, 0.09%)</title><rect x="99.4527%" y="789" width="0.0905%" height="15" fill="rgb(254,175,0)" fg:x="362550" fg:w="330"/><text x="99.7027%" y="799.50"></text></g><g><title>__libc_write (327 samples, 0.09%)</title><rect x="99.4536%" y="773" width="0.0897%" height="15" fill="rgb(227,24,42)" fg:x="362553" fg:w="327"/><text x="99.7036%" y="783.50"></text></g><g><title>__libc_write (320 samples, 0.09%)</title><rect x="99.4555%" y="757" width="0.0878%" height="15" fill="rgb(223,211,37)" fg:x="362560" fg:w="320"/><text x="99.7055%" y="767.50"></text></g><g><title>tokio::runtime::driver::Handle::unpark (337 samples, 0.09%)</title><rect x="99.4511%" y="853" width="0.0924%" height="15" fill="rgb(235,49,27)" fg:x="362544" fg:w="337"/><text x="99.7011%" y="863.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::yield_now (898 samples, 0.25%)</title><rect x="99.3496%" y="885" width="0.2463%" height="15" fill="rgb(254,97,51)" fg:x="362174" fg:w="898"/><text x="99.5996%" y="895.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (887 samples, 0.24%)</title><rect x="99.3526%" y="869" width="0.2433%" height="15" fill="rgb(249,51,40)" fg:x="362185" fg:w="887"/><text x="99.6026%" y="879.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_local (168 samples, 0.05%)</title><rect x="99.5498%" y="853" width="0.0461%" height="15" fill="rgb(210,128,45)" fg:x="362904" fg:w="168"/><text x="99.7998%" y="863.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_idle (103 samples, 0.03%)</title><rect x="99.6025%" y="885" width="0.0283%" height="15" fill="rgb(224,137,50)" fg:x="363096" fg:w="103"/><text x="99.8525%" y="895.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_running (116 samples, 0.03%)</title><rect x="99.6308%" y="885" width="0.0318%" height="15" fill="rgb(242,15,9)" fg:x="363199" fg:w="116"/><text x="99.8808%" y="895.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (165,161 samples, 45.31%)</title><rect x="54.3727%" y="901" width="45.3061%" height="15" fill="rgb(233,187,41)" fg:x="198213" fg:w="165161"/><text x="54.6227%" y="911.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::waker::raw_waker (59 samples, 0.02%)</title><rect x="99.6626%" y="885" width="0.0162%" height="15" fill="rgb(227,2,29)" fg:x="363315" fg:w="59"/><text x="99.9126%" y="895.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (184,410 samples, 50.59%)</title><rect x="49.1319%" y="1093" width="50.5863%" height="15" fill="rgb(222,70,3)" fg:x="179108" fg:w="184410"/><text x="49.3819%" y="1103.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (184,410 samples, 50.59%)</title><rect x="49.1319%" y="1077" width="50.5863%" height="15" fill="rgb(213,11,42)" fg:x="179108" fg:w="184410"/><text x="49.3819%" y="1087.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (184,410 samples, 50.59%)</title><rect x="49.1319%" y="1061" width="50.5863%" height="15" fill="rgb(225,150,9)" fg:x="179108" fg:w="184410"/><text x="49.3819%" y="1071.50">core::ops::function::FnOnce::call_once{{vtable-shim}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (184,404 samples, 50.58%)</title><rect x="49.1336%" y="1045" width="50.5847%" height="15" fill="rgb(230,162,45)" fg:x="179114" fg:w="184404"/><text x="49.3836%" y="1055.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>tokio::runtime::blocking::pool::Inner::run (184,404 samples, 50.58%)</title><rect x="49.1336%" y="1029" width="50.5847%" height="15" fill="rgb(222,14,52)" fg:x="179114" fg:w="184404"/><text x="49.3836%" y="1039.50">tokio::runtime::blocking::pool::Inner::run</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (184,385 samples, 50.58%)</title><rect x="49.1388%" y="1013" width="50.5795%" height="15" fill="rgb(254,198,14)" fg:x="179133" fg:w="184385"/><text x="49.3888%" y="1023.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (184,385 samples, 50.58%)</title><rect x="49.1388%" y="997" width="50.5795%" height="15" fill="rgb(220,217,30)" fg:x="179133" fg:w="184385"/><text x="49.3888%" y="1007.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;:..</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (184,385 samples, 50.58%)</title><rect x="49.1388%" y="981" width="50.5795%" height="15" fill="rgb(215,146,41)" fg:x="179133" fg:w="184385"/><text x="49.3888%" y="991.50">tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run (184,384 samples, 50.58%)</title><rect x="49.1391%" y="965" width="50.5792%" height="15" fill="rgb(217,27,36)" fg:x="179134" fg:w="184384"/><text x="49.3891%" y="975.50">tokio::runtime::scheduler::multi_thread::worker::run</text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (184,384 samples, 50.58%)</title><rect x="49.1391%" y="949" width="50.5792%" height="15" fill="rgb(219,218,39)" fg:x="179134" fg:w="184384"/><text x="49.3891%" y="959.50">tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (184,384 samples, 50.58%)</title><rect x="49.1391%" y="933" width="50.5792%" height="15" fill="rgb(219,4,42)" fg:x="179134" fg:w="184384"/><text x="49.3891%" y="943.50">tokio::runtime::scheduler::multi_thread::worker::Context::run</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (168,791 samples, 46.30%)</title><rect x="53.4165%" y="917" width="46.3018%" height="15" fill="rgb(249,119,36)" fg:x="194727" fg:w="168791"/><text x="53.6665%" y="927.50">tokio::runtime::scheduler::multi_thread::worker::Context::run_task</text></g><g><title>tokio::runtime::task::raw::poll (144 samples, 0.04%)</title><rect x="99.6788%" y="901" width="0.0395%" height="15" fill="rgb(209,23,33)" fg:x="363374" fg:w="144"/><text x="99.9288%" y="911.50"></text></g><g><title>__GI___clone (184,422 samples, 50.59%)</title><rect x="49.1289%" y="1141" width="50.5896%" height="15" fill="rgb(211,10,0)" fg:x="179097" fg:w="184422"/><text x="49.3789%" y="1151.50">__GI___clone</text></g><g><title>start_thread (184,411 samples, 50.59%)</title><rect x="49.1319%" y="1125" width="50.5866%" height="15" fill="rgb(208,99,37)" fg:x="179108" fg:w="184411"/><text x="49.3819%" y="1135.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (184,411 samples, 50.59%)</title><rect x="49.1319%" y="1109" width="50.5866%" height="15" fill="rgb(213,132,31)" fg:x="179108" fg:w="184411"/><text x="49.3819%" y="1119.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Span&gt; (364 samples, 0.10%)</title><rect x="99.7227%" y="1125" width="0.0999%" height="15" fill="rgb(243,129,40)" fg:x="363534" fg:w="364"/><text x="99.9727%" y="1135.50"></text></g><g><title>h2::proto::ping_pong::PingPong::send_pending_ping (79 samples, 0.02%)</title><rect x="99.8225%" y="1125" width="0.0217%" height="15" fill="rgb(210,66,33)" fg:x="363898" fg:w="79"/><text x="100.0725%" y="1135.50"></text></g><g><title>__bss_start (469 samples, 0.13%)</title><rect x="99.7210%" y="1141" width="0.1287%" height="15" fill="rgb(209,189,4)" fg:x="363528" fg:w="469"/><text x="99.9710%" y="1151.50"></text></g><g><title>__vdso_clock_gettime (132 samples, 0.04%)</title><rect x="99.8571%" y="1141" width="0.0362%" height="15" fill="rgb(214,107,37)" fg:x="364024" fg:w="132"/><text x="100.1071%" y="1151.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (114 samples, 0.03%)</title><rect x="99.9040%" y="1125" width="0.0313%" height="15" fill="rgb(245,88,54)" fg:x="364195" fg:w="114"/><text x="100.1540%" y="1135.50"></text></g><g><title>anon.0d3ef989f54bd39d92406b0e6390ed0e.66.llvm.9463574311707132903 (174 samples, 0.05%)</title><rect x="99.8969%" y="1141" width="0.0477%" height="15" fill="rgb(205,146,20)" fg:x="364169" fg:w="174"/><text x="100.1469%" y="1151.50"></text></g><g><title>all (364,545 samples, 100%)</title><rect x="0.0000%" y="1173" width="100.0000%" height="15" fill="rgb(220,161,25)" fg:x="0" fg:w="364545"/><text x="0.2500%" y="1183.50"></text></g><g><title>tokio-runtime-w (349,138 samples, 95.77%)</title><rect x="4.2264%" y="1157" width="95.7736%" height="15" fill="rgb(215,152,15)" fg:x="15407" fg:w="349138"/><text x="4.4764%" y="1167.50">tokio-runtime-w</text></g></svg></svg>